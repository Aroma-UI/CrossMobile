{
  "crossmobile.ios.foundation.NSBundle": {
    "URLForResource(java.lang.String,java.lang.String)": {
      "reverse": "- (NSURL *) URLForResource:(NSString *) name withExtension:(NSString *) ext\n{\n    NSURL * re$ult = [self URLForResource___java_lang_String_java_lang_String:(name ? name : JAVA_NULL) :(ext ? ext : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURL*) URLForResource___java_lang_String_java_lang_String:(NSString*) name :(NSString*) ext \n{\n    NSURL* re$ult = [super URLForResource:(name == JAVA_NULL ? nil : name) withExtension:(ext == JAVA_NULL ? nil : ext)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL",
        "java_lang_String"
      ]
    },
    "URLForResource(java.lang.String,java.lang.String,java.lang.String)": {
      "reverse": "- (NSURL *) URLForResource:(NSString *) name withExtension:(NSString *) ext subdirectory:(NSString *) subpath\n{\n    NSURL * re$ult = [self URLForResource___java_lang_String_java_lang_String_java_lang_String:(name ? name : JAVA_NULL) :(ext ? ext : JAVA_NULL) :(subpath ? subpath : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURL*) URLForResource___java_lang_String_java_lang_String_java_lang_String:(NSString*) name :(NSString*) ext :(NSString*) subpath \n{\n    NSURL* re$ult = [super URLForResource:(name == JAVA_NULL ? nil : name) withExtension:(ext == JAVA_NULL ? nil : ext) subdirectory:(subpath == JAVA_NULL ? nil : subpath)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL",
        "java_lang_String"
      ]
    },
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "bundlePath()": {
      "reverse": "- (NSString *) bundlePath\n{\n    NSString * re$ult = [self bundlePath__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) bundlePath__\n{\n    NSString* re$ult = [super bundlePath];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "localizedStringForKey(java.lang.String,java.lang.String,java.lang.String)": {
      "reverse": "- (NSString *) localizedStringForKey:(NSString *) key value:(NSString *) value table:(NSString *) tableName\n{\n    NSString * re$ult = [self localizedStringForKey___java_lang_String_java_lang_String_java_lang_String:(key ? key : JAVA_NULL) :(value ? value : JAVA_NULL) :(tableName ? tableName : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) localizedStringForKey___java_lang_String_java_lang_String_java_lang_String:(NSString*) key :(NSString*) value :(NSString*) tableName \n{\n    NSString* re$ult = [super localizedStringForKey:(key == JAVA_NULL ? nil : key) value:(value == JAVA_NULL ? nil : value) table:(tableName == JAVA_NULL ? nil : tableName)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "pathForResource(java.lang.String,java.lang.String)": {
      "reverse": "- (NSString *) pathForResource:(NSString *) name ofType:(NSString *) ext\n{\n    NSString * re$ult = [self pathForResource___java_lang_String_java_lang_String:(name ? name : JAVA_NULL) :(ext ? ext : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) pathForResource___java_lang_String_java_lang_String:(NSString*) name :(NSString*) ext \n{\n    NSString* re$ult = [super pathForResource:(name == JAVA_NULL ? nil : name) ofType:(ext == JAVA_NULL ? nil : ext)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "pathForResource(java.lang.String,java.lang.String,java.lang.String)": {
      "reverse": "- (NSString *) pathForResource:(NSString *) name ofType:(NSString *) ext inDirectory:(NSString *) subpath\n{\n    NSString * re$ult = [self pathForResource___java_lang_String_java_lang_String_java_lang_String:(name ? name : JAVA_NULL) :(ext ? ext : JAVA_NULL) :(subpath ? subpath : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) pathForResource___java_lang_String_java_lang_String_java_lang_String:(NSString*) name :(NSString*) ext :(NSString*) subpath \n{\n    NSString* re$ult = [super pathForResource:(name == JAVA_NULL ? nil : name) ofType:(ext == JAVA_NULL ? nil : ext) inDirectory:(subpath == JAVA_NULL ? nil : subpath)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSCalendar": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "components(int,crossmobile.ios.foundation.NSDate)": {
      "reverse": "- (NSDateComponents *) components:(NSCalendarUnit) unitFlags fromDate:(NSDate *) date\n{\n    NSDateComponents * re$ult = [self components___int_crossmobile_ios_foundation_NSDate:unitFlags :(date ? date : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDateComponents*) components___int_crossmobile_ios_foundation_NSDate:(int) unitFlags :(NSDate*) date \n{\n    NSDateComponents* re$ult = [super components:unitFlags fromDate:(date == JAVA_NULL ? nil : date)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate",
        "crossmobile_ios_foundation_NSDateComponents"
      ]
    },
    "components(int,crossmobile.ios.foundation.NSDate,crossmobile.ios.foundation.NSDate,int)": {
      "reverse": "- (NSDateComponents *) components:(NSCalendarUnit) unitFlags fromDate:(NSDate *) startingDate toDate:(NSDate *) resultDate options:(NSCalendarOptions) opts\n{\n    NSDateComponents * re$ult = [self components___int_crossmobile_ios_foundation_NSDate_crossmobile_ios_foundation_NSDate_int:unitFlags :(startingDate ? startingDate : JAVA_NULL) :(resultDate ? resultDate : JAVA_NULL) :opts];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDateComponents*) components___int_crossmobile_ios_foundation_NSDate_crossmobile_ios_foundation_NSDate_int:(int) unitFlags :(NSDate*) startingDate :(NSDate*) resultDate :(int) opts \n{\n    NSDateComponents* re$ult = [super components:unitFlags fromDate:(startingDate == JAVA_NULL ? nil : startingDate) toDate:(resultDate == JAVA_NULL ? nil : resultDate) options:opts];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate",
        "crossmobile_ios_foundation_NSDateComponents"
      ]
    },
    "dateByAddingComponents(crossmobile.ios.foundation.NSDateComponents,crossmobile.ios.foundation.NSDate,int)": {
      "reverse": "- (NSDate *) dateByAddingComponents:(NSDateComponents *) comps toDate:(NSDate *) date options:(NSCalendarOptions) opts\n{\n    NSDate * re$ult = [self dateByAddingComponents___crossmobile_ios_foundation_NSDateComponents_crossmobile_ios_foundation_NSDate_int:(comps ? comps : JAVA_NULL) :(date ? date : JAVA_NULL) :opts];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDate*) dateByAddingComponents___crossmobile_ios_foundation_NSDateComponents_crossmobile_ios_foundation_NSDate_int:(NSDateComponents*) comps :(NSDate*) date :(int) opts \n{\n    NSDate* re$ult = [super dateByAddingComponents:(comps == JAVA_NULL ? nil : comps) toDate:(date == JAVA_NULL ? nil : date) options:opts];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate",
        "crossmobile_ios_foundation_NSDateComponents"
      ]
    },
    "dateFromComponents(crossmobile.ios.foundation.NSDateComponents)": {
      "reverse": "- (NSDate *) dateFromComponents:(NSDateComponents *) comps\n{\n    NSDate * re$ult = [self dateFromComponents___crossmobile_ios_foundation_NSDateComponents:(comps ? comps : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDate*) dateFromComponents___crossmobile_ios_foundation_NSDateComponents:(NSDateComponents*) comps \n{\n    NSDate* re$ult = [super dateFromComponents:(comps == JAVA_NULL ? nil : comps)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate",
        "crossmobile_ios_foundation_NSDateComponents"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSCoder": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSData": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "base64EncodedStringWithOptions(int)": {
      "reverse": "- (NSString *) base64EncodedStringWithOptions:(NSDataBase64EncodingOptions) options\n{\n    NSString * re$ult = [self base64EncodedStringWithOptions___int:options];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) base64EncodedStringWithOptions___int:(int) options \n{\n    NSString* re$ult = [super base64EncodedStringWithOptions:options];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "bytes()": {
      "reverse": "- (void *) bytes\n{\n    return [XMLVMArray createSingleDimensionWithType:3/*byte*/ size:[self length] andData:(void*)[self bytes__]];\n}\n\n",
      "super": "- (void*) bytes__\n{\n    return [XMLVMArray createSingleDimensionWithType:3/*byte*/ size:[self length] andData:(void*)[super bytes]];\n}\n\n"
    },
    "length()": {
      "reverse": "- (NSUInteger) length\n{\n    return [self length__];\n}\n\n",
      "super": "- (int) length__\n{\n    return [super length];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "writeToFile(java.lang.String,boolean)": {
      "reverse": "- (BOOL) writeToFile:(NSString *) path atomically:(BOOL) useAuxiliaryFile\n{\n    return [self writeToFile___java_lang_String_boolean:(path ? path : JAVA_NULL) :useAuxiliaryFile];\n}\n\n",
      "super": "- (BOOL) writeToFile___java_lang_String_boolean:(NSString*) path :(BOOL) useAuxiliaryFile \n{\n    return [super writeToFile:(path == JAVA_NULL ? nil : path) atomically:useAuxiliaryFile];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    }
  },
  "crossmobile.ios.foundation.NSDate": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "timeIntervalSince1970()": {
      "reverse": "- (NSTimeInterval) timeIntervalSince1970\n{\n    return [self timeIntervalSince1970__];\n}\n\n",
      "super": "- (double) timeIntervalSince1970__\n{\n    return [super timeIntervalSince1970];\n}\n\n"
    },
    "timeIntervalSinceReferenceDate()": {
      "reverse": "- (NSTimeInterval) timeIntervalSinceReferenceDate\n{\n    return [self timeIntervalSinceReferenceDate__];\n}\n\n",
      "super": "- (double) timeIntervalSinceReferenceDate__\n{\n    return [super timeIntervalSinceReferenceDate];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSDateComponents": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "day()": {
      "reverse": "- (NSInteger) day\n{\n    return [self day__];\n}\n\n",
      "super": "- (int) day__\n{\n    return [super day];\n}\n\n"
    },
    "era()": {
      "reverse": "- (NSInteger) era\n{\n    return [self era__];\n}\n\n",
      "super": "- (int) era__\n{\n    return [super era];\n}\n\n"
    },
    "hour()": {
      "reverse": "- (NSInteger) hour\n{\n    return [self hour__];\n}\n\n",
      "super": "- (int) hour__\n{\n    return [super hour];\n}\n\n"
    },
    "minute()": {
      "reverse": "- (NSInteger) minute\n{\n    return [self minute__];\n}\n\n",
      "super": "- (int) minute__\n{\n    return [super minute];\n}\n\n"
    },
    "month()": {
      "reverse": "- (NSInteger) month\n{\n    return [self month__];\n}\n\n",
      "super": "- (int) month__\n{\n    return [super month];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "second()": {
      "reverse": "- (NSInteger) second\n{\n    return [self second__];\n}\n\n",
      "super": "- (int) second__\n{\n    return [super second];\n}\n\n"
    },
    "setDay(int)": {
      "reverse": "- (void) setDay:(NSInteger) day\n{\n    [self setDay___int:day];\n}\n\n",
      "super": "- (void) setDay___int:(int) day \n{\n    [super setDay:day];\n}\n\n"
    },
    "setEra(int)": {
      "reverse": "- (void) setEra:(NSInteger) era\n{\n    [self setEra___int:era];\n}\n\n",
      "super": "- (void) setEra___int:(int) era \n{\n    [super setEra:era];\n}\n\n"
    },
    "setHour(int)": {
      "reverse": "- (void) setHour:(NSInteger) hour\n{\n    [self setHour___int:hour];\n}\n\n",
      "super": "- (void) setHour___int:(int) hour \n{\n    [super setHour:hour];\n}\n\n"
    },
    "setMinute(int)": {
      "reverse": "- (void) setMinute:(NSInteger) minute\n{\n    [self setMinute___int:minute];\n}\n\n",
      "super": "- (void) setMinute___int:(int) minute \n{\n    [super setMinute:minute];\n}\n\n"
    },
    "setMonth(int)": {
      "reverse": "- (void) setMonth:(NSInteger) month\n{\n    [self setMonth___int:month];\n}\n\n",
      "super": "- (void) setMonth___int:(int) month \n{\n    [super setMonth:month];\n}\n\n"
    },
    "setSecond(int)": {
      "reverse": "- (void) setSecond:(NSInteger) second\n{\n    [self setSecond___int:second];\n}\n\n",
      "super": "- (void) setSecond___int:(int) second \n{\n    [super setSecond:second];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "setWeek(int)": {
      "reverse": "- (void) setWeek:(NSInteger) v\n{\n    [self setWeek___int:v];\n}\n\n",
      "super": "- (void) setWeek___int:(int) v \n{\n    [super setWeek:v];\n}\n\n"
    },
    "setWeekday(int)": {
      "reverse": "- (void) setWeekday:(NSInteger) weekday\n{\n    [self setWeekday___int:weekday];\n}\n\n",
      "super": "- (void) setWeekday___int:(int) weekday \n{\n    [super setWeekday:weekday];\n}\n\n"
    },
    "setWeekdayOrdinal(int)": {
      "reverse": "- (void) setWeekdayOrdinal:(NSInteger) weekdayOrdinal\n{\n    [self setWeekdayOrdinal___int:weekdayOrdinal];\n}\n\n",
      "super": "- (void) setWeekdayOrdinal___int:(int) weekdayOrdinal \n{\n    [super setWeekdayOrdinal:weekdayOrdinal];\n}\n\n"
    },
    "setYear(int)": {
      "reverse": "- (void) setYear:(NSInteger) year\n{\n    [self setYear___int:year];\n}\n\n",
      "super": "- (void) setYear___int:(int) year \n{\n    [super setYear:year];\n}\n\n"
    },
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "week()": {
      "reverse": "- (NSInteger) week\n{\n    return [self week__];\n}\n\n",
      "super": "- (int) week__\n{\n    return [super week];\n}\n\n"
    },
    "weekday()": {
      "reverse": "- (NSInteger) weekday\n{\n    return [self weekday__];\n}\n\n",
      "super": "- (int) weekday__\n{\n    return [super weekday];\n}\n\n"
    },
    "weekdayOrdinal()": {
      "reverse": "- (NSInteger) weekdayOrdinal\n{\n    return [self weekdayOrdinal__];\n}\n\n",
      "super": "- (int) weekdayOrdinal__\n{\n    return [super weekdayOrdinal];\n}\n\n"
    },
    "year()": {
      "reverse": "- (NSInteger) year\n{\n    return [self year__];\n}\n\n",
      "super": "- (int) year__\n{\n    return [super year];\n}\n\n"
    }
  },
  "crossmobile.ios.foundation.NSError": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "code()": {
      "reverse": "- (NSInteger) code\n{\n    return [self code__];\n}\n\n",
      "super": "- (int) code__\n{\n    return [super code];\n}\n\n"
    },
    "domain()": {
      "reverse": "- (NSString *) domain\n{\n    NSString * re$ult = [self domain__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) domain__\n{\n    NSString* re$ult = [super domain];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "localizedDescription()": {
      "reverse": "- (NSString *) localizedDescription\n{\n    NSString * re$ult = [self localizedDescription__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) localizedDescription__\n{\n    NSString* re$ult = [super localizedDescription];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "userInfo()": {
      "reverse": "- (NSDictionary *) userInfo\n{\n    NSDictionary * re$ult = [self userInfo__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDictionary*) userInfo__\n{\n    NSDictionary* re$ult = [super userInfo];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Map"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSExtensionContext": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "cancelRequestWithError(crossmobile.ios.foundation.NSError)": {
      "reverse": "- (void) cancelRequestWithError:(NSError *) error\n{\n    [self cancelRequestWithError___crossmobile_ios_foundation_NSError:(error ? error : JAVA_NULL)];\n}\n\n",
      "super": "- (void) cancelRequestWithError___crossmobile_ios_foundation_NSError:(NSError*) error \n{\n    [super cancelRequestWithError:(error == JAVA_NULL ? nil : error)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSError"
      ]
    },
    "inputItems()": {
      "reverse": "- (NSArray *) inputItems\n{\n    NSArray * re$ult = [self inputItems__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) inputItems__\n{\n    NSArray* re$ult = [super inputItems];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSExtensionItem": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "attachments()": {
      "reverse": "- (NSArray *) attachments\n{\n    NSArray * re$ult = [self attachments__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) attachments__\n{\n    NSArray* re$ult = [super attachments];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setAttachments(java.util.List)": {
      "reverse": "- (void) setAttachments:(NSArray *) attachments\n{\n    [self setAttachments___java_util_List:(attachments ? attachments : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setAttachments___java_util_List:(NSArray*) attachments \n{\n    [super setAttachments:(attachments == JAVA_NULL ? nil : attachments)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setUserInfo(java.util.Map)": {
      "reverse": "- (void) setUserInfo:(NSDictionary *) userInfo\n{\n    [self setUserInfo___java_util_Map:(userInfo ? userInfo : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setUserInfo___java_util_Map:(NSDictionary*) userInfo \n{\n    [super setUserInfo:(userInfo == JAVA_NULL ? nil : userInfo)];\n}\n\n",
      "supimport": [
        "java_util_Map"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "userInfo()": {
      "reverse": "- (NSDictionary *) userInfo\n{\n    NSDictionary * re$ult = [self userInfo__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDictionary*) userInfo__\n{\n    NSDictionary* re$ult = [super userInfo];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Map"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSFileHandle": {
    "acceptConnectionInBackgroundAndNotify()": {
      "reverse": "- (void) acceptConnectionInBackgroundAndNotify\n{\n    [self acceptConnectionInBackgroundAndNotify__];\n}\n\n",
      "super": "- (void) acceptConnectionInBackgroundAndNotify__\n{\n    [super acceptConnectionInBackgroundAndNotify];\n}\n\n"
    },
    "acceptConnectionInBackgroundAndNotifyForModes(java.util.List)": {
      "reverse": "- (void) acceptConnectionInBackgroundAndNotifyForModes:(NSArray<NSString *> *) modes\n{\n    [self acceptConnectionInBackgroundAndNotifyForModes___java_util_List:(modes ? modes : JAVA_NULL)];\n}\n\n",
      "super": "- (void) acceptConnectionInBackgroundAndNotifyForModes___java_util_List:(NSArray*) modes \n{\n    [super acceptConnectionInBackgroundAndNotifyForModes:(modes == JAVA_NULL ? nil : modes)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "availableData()": {
      "reverse": "- (NSData *) availableData\n{\n    NSData * re$ult = [self availableData__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSData*) availableData__\n{\n    NSData* re$ult = [super availableData];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData"
      ]
    },
    "closeFile()": {
      "reverse": "- (void) closeFile\n{\n    [self closeFile__];\n}\n\n",
      "super": "- (void) closeFile__\n{\n    [super closeFile];\n}\n\n"
    },
    "fileDescriptor()": {
      "reverse": "- (int) fileDescriptor\n{\n    return [self fileDescriptor__];\n}\n\n",
      "super": "- (int) fileDescriptor__\n{\n    return [super fileDescriptor];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "offsetInFile()": {
      "reverse": "- (long long) offsetInFile\n{\n    return [self offsetInFile__];\n}\n\n",
      "super": "- (JAVA_LONG) offsetInFile__\n{\n    return [super offsetInFile];\n}\n\n"
    },
    "readDataOfLength(int)": {
      "reverse": "- (NSData *) readDataOfLength:(NSUInteger) length\n{\n    NSData * re$ult = [self readDataOfLength___int:length];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSData*) readDataOfLength___int:(int) length \n{\n    NSData* re$ult = [super readDataOfLength:length];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData"
      ]
    },
    "readDataToEndOfFile()": {
      "reverse": "- (NSData *) readDataToEndOfFile\n{\n    NSData * re$ult = [self readDataToEndOfFile__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSData*) readDataToEndOfFile__\n{\n    NSData* re$ult = [super readDataToEndOfFile];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData"
      ]
    },
    "readInBackgroundAndNotify()": {
      "reverse": "- (void) readInBackgroundAndNotify\n{\n    [self readInBackgroundAndNotify__];\n}\n\n",
      "super": "- (void) readInBackgroundAndNotify__\n{\n    [super readInBackgroundAndNotify];\n}\n\n"
    },
    "readInBackgroundAndNotifyForModes(java.util.List)": {
      "reverse": "- (void) readInBackgroundAndNotifyForModes:(NSArray<NSString *> *) modes\n{\n    [self readInBackgroundAndNotifyForModes___java_util_List:(modes ? modes : JAVA_NULL)];\n}\n\n",
      "super": "- (void) readInBackgroundAndNotifyForModes___java_util_List:(NSArray*) modes \n{\n    [super readInBackgroundAndNotifyForModes:(modes == JAVA_NULL ? nil : modes)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "readToEndOfFileInBackgroundAndNotify()": {
      "reverse": "- (void) readToEndOfFileInBackgroundAndNotify\n{\n    [self readToEndOfFileInBackgroundAndNotify__];\n}\n\n",
      "super": "- (void) readToEndOfFileInBackgroundAndNotify__\n{\n    [super readToEndOfFileInBackgroundAndNotify];\n}\n\n"
    },
    "readToEndOfFileInBackgroundAndNotifyForModes(java.util.List)": {
      "reverse": "- (void) readToEndOfFileInBackgroundAndNotifyForModes:(NSArray<NSString *> *) modes\n{\n    [self readToEndOfFileInBackgroundAndNotifyForModes___java_util_List:(modes ? modes : JAVA_NULL)];\n}\n\n",
      "super": "- (void) readToEndOfFileInBackgroundAndNotifyForModes___java_util_List:(NSArray*) modes \n{\n    [super readToEndOfFileInBackgroundAndNotifyForModes:(modes == JAVA_NULL ? nil : modes)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "seekToEndOfFile()": {
      "reverse": "- (long long) seekToEndOfFile\n{\n    return [self seekToEndOfFile__];\n}\n\n",
      "super": "- (JAVA_LONG) seekToEndOfFile__\n{\n    return [super seekToEndOfFile];\n}\n\n"
    },
    "seekToFileOffset(long)": {
      "reverse": "- (void) seekToFileOffset:(long long) offset\n{\n    [self seekToFileOffset___long:offset];\n}\n\n",
      "super": "- (void) seekToFileOffset___long:(JAVA_LONG) offset \n{\n    [super seekToFileOffset:offset];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "synchronizeFile()": {
      "reverse": "- (void) synchronizeFile\n{\n    [self synchronizeFile__];\n}\n\n",
      "super": "- (void) synchronizeFile__\n{\n    [super synchronizeFile];\n}\n\n"
    },
    "truncateFileAtOffset(long)": {
      "reverse": "- (void) truncateFileAtOffset:(long long) offset\n{\n    [self truncateFileAtOffset___long:offset];\n}\n\n",
      "super": "- (void) truncateFileAtOffset___long:(JAVA_LONG) offset \n{\n    [super truncateFileAtOffset:offset];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "waitForDataInBackgroundAndNotify()": {
      "reverse": "- (void) waitForDataInBackgroundAndNotify\n{\n    [self waitForDataInBackgroundAndNotify__];\n}\n\n",
      "super": "- (void) waitForDataInBackgroundAndNotify__\n{\n    [super waitForDataInBackgroundAndNotify];\n}\n\n"
    },
    "waitForDataInBackgroundAndNotifyForModes(java.util.List)": {
      "reverse": "- (void) waitForDataInBackgroundAndNotifyForModes:(NSArray<NSString *> *) modes\n{\n    [self waitForDataInBackgroundAndNotifyForModes___java_util_List:(modes ? modes : JAVA_NULL)];\n}\n\n",
      "super": "- (void) waitForDataInBackgroundAndNotifyForModes___java_util_List:(NSArray*) modes \n{\n    [super waitForDataInBackgroundAndNotifyForModes:(modes == JAVA_NULL ? nil : modes)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "writeData(crossmobile.ios.foundation.NSData)": {
      "reverse": "- (void) writeData:(NSData *) data\n{\n    [self writeData___crossmobile_ios_foundation_NSData:(data ? data : JAVA_NULL)];\n}\n\n",
      "super": "- (void) writeData___crossmobile_ios_foundation_NSData:(NSData*) data \n{\n    [super writeData:(data == JAVA_NULL ? nil : data)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData"
      ]
    }
  },
  "crossmobile.ios.foundation.NSFileManager": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "contentsOfDirectoryAtPath(java.lang.String,crossmobile.rt.StrongReference)": {
      "reverse": "- (NSArray<NSString *> *) contentsOfDirectoryAtPath:(NSString *) path error:(NSError * _Nullable *) error\n{\n    crossmobile_rt_StrongReference* error$conv = error ? [[crossmobile_rt_StrongReference alloc] __init_crossmobile_ios_StrongReference___java_lang_Object:*error] : JAVA_NULL;\n    NSArray<NSString *> * re$ult = [self contentsOfDirectoryAtPath___java_lang_String_crossmobile_rt_StrongReference:(path ? path : JAVA_NULL) :error$conv];\n    [error$conv release];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) contentsOfDirectoryAtPath___java_lang_String_crossmobile_rt_StrongReference:(NSString*) path :(crossmobile_rt_StrongReference*) error \n{\n    error = error == JAVA_NULL ? nil : error;\n    id error$conv = nil;\n    NSArray* re$ult = [super contentsOfDirectoryAtPath:(path == JAVA_NULL ? nil : path) error:(error ? &error$conv : nil)];\n    if (error)\n        [error set___java_lang_Object:(error$conv ? error$conv : JAVA_NULL)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSError",
        "java_lang_String",
        "java_util_List"
      ]
    },
    "createDirectoryAtPath(java.lang.String,boolean,java.util.Map,crossmobile.rt.StrongReference)": {
      "reverse": "- (BOOL) createDirectoryAtPath:(NSString *) path withIntermediateDirectories:(BOOL) createIntermediates attributes:(NSDictionary<NSString *,id> *) attributes error:(NSError * _Nullable *) error\n{\n    crossmobile_rt_StrongReference* error$conv = error ? [[crossmobile_rt_StrongReference alloc] __init_crossmobile_ios_StrongReference___java_lang_Object:*error] : JAVA_NULL;\n    BOOL re$ult = [self createDirectoryAtPath___java_lang_String_boolean_java_util_Map_crossmobile_rt_StrongReference:(path ? path : JAVA_NULL) :createIntermediates :(attributes ? attributes : JAVA_NULL) :error$conv];\n    [error$conv release];\n    return re$ult;\n}\n\n",
      "super": "- (BOOL) createDirectoryAtPath___java_lang_String_boolean_java_util_Map_crossmobile_rt_StrongReference:(NSString*) path :(BOOL) createIntermediates :(NSDictionary*) attributes :(crossmobile_rt_StrongReference*) error \n{\n    error = error == JAVA_NULL ? nil : error;\n    id error$conv = nil;\n    BOOL re$ult = [super createDirectoryAtPath:(path == JAVA_NULL ? nil : path) withIntermediateDirectories:createIntermediates attributes:(attributes == JAVA_NULL ? nil : attributes) error:(error ? &error$conv : nil)];\n    if (error)\n        [error set___java_lang_Object:(error$conv ? error$conv : JAVA_NULL)];\n    return re$ult;\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSError",
        "java_lang_String",
        "java_util_Map"
      ]
    },
    "fileExistsAtPath(java.lang.String)": {
      "reverse": "- (BOOL) fileExistsAtPath:(NSString *) path\n{\n    return [self fileExistsAtPath___java_lang_String:(path ? path : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) fileExistsAtPath___java_lang_String:(NSString*) path \n{\n    return [super fileExistsAtPath:(path == JAVA_NULL ? nil : path)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSHTTPCookie": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "comment()": {
      "reverse": "- (NSString *) comment\n{\n    NSString * re$ult = [self comment__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) comment__\n{\n    NSString* re$ult = [super comment];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "commentURL()": {
      "reverse": "- (NSURL *) commentURL\n{\n    NSURL * re$ult = [self commentURL__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURL*) commentURL__\n{\n    NSURL* re$ult = [super commentURL];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL"
      ]
    },
    "domain()": {
      "reverse": "- (NSString *) domain\n{\n    NSString * re$ult = [self domain__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) domain__\n{\n    NSString* re$ult = [super domain];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "expiresDate()": {
      "reverse": "- (NSDate *) expiresDate\n{\n    NSDate * re$ult = [self expiresDate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDate*) expiresDate__\n{\n    NSDate* re$ult = [super expiresDate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate"
      ]
    },
    "isHTTPOnly()": {
      "reverse": "- (BOOL) isHTTPOnly\n{\n    return [self isHTTPOnly__];\n}\n\n",
      "super": "- (BOOL) isHTTPOnly__\n{\n    return [super isHTTPOnly];\n}\n\n"
    },
    "isSecure()": {
      "reverse": "- (BOOL) isSecure\n{\n    return [self isSecure__];\n}\n\n",
      "super": "- (BOOL) isSecure__\n{\n    return [super isSecure];\n}\n\n"
    },
    "isSessionOnly()": {
      "reverse": "- (BOOL) isSessionOnly\n{\n    return [self isSessionOnly__];\n}\n\n",
      "super": "- (BOOL) isSessionOnly__\n{\n    return [super isSessionOnly];\n}\n\n"
    },
    "name()": {
      "reverse": "- (NSString *) name\n{\n    NSString * re$ult = [self name__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) name__\n{\n    NSString* re$ult = [super name];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "path()": {
      "reverse": "- (NSString *) path\n{\n    NSString * re$ult = [self path__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) path__\n{\n    NSString* re$ult = [super path];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "portList()": {
      "reverse": "- (NSArray<NSNumber *> *) portList\n{\n    NSArray<NSNumber *> * re$ult = [self portList__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) portList__\n{\n    NSArray* re$ult = [super portList];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "value()": {
      "reverse": "- (NSString *) value\n{\n    NSString * re$ult = [self value__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) value__\n{\n    NSString* re$ult = [super value];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "version()": {
      "reverse": "- (NSUInteger) version\n{\n    return [self version__];\n}\n\n",
      "super": "- (int) version__\n{\n    return [super version];\n}\n\n"
    }
  },
  "crossmobile.ios.foundation.NSHTTPCookieStorage": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "cookieAcceptPolicy()": {
      "reverse": "- (NSHTTPCookieAcceptPolicy) cookieAcceptPolicy\n{\n    return [self cookieAcceptPolicy__];\n}\n\n",
      "super": "- (int) cookieAcceptPolicy__\n{\n    return [super cookieAcceptPolicy];\n}\n\n"
    },
    "cookies()": {
      "reverse": "- (NSArray<NSHTTPCookie *> *) cookies\n{\n    NSArray<NSHTTPCookie *> * re$ult = [self cookies__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) cookies__\n{\n    NSArray* re$ult = [super cookies];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "cookiesForURL(crossmobile.ios.foundation.NSURL)": {
      "reverse": "- (NSArray<NSHTTPCookie *> *) cookiesForURL:(NSURL *) URL\n{\n    NSArray<NSHTTPCookie *> * re$ult = [self cookiesForURL___crossmobile_ios_foundation_NSURL:(URL ? URL : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) cookiesForURL___crossmobile_ios_foundation_NSURL:(NSURL*) URL \n{\n    NSArray* re$ult = [super cookiesForURL:(URL == JAVA_NULL ? nil : URL)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL",
        "java_util_List"
      ]
    },
    "deleteCookie(crossmobile.ios.foundation.NSHTTPCookie)": {
      "reverse": "- (void) deleteCookie:(NSHTTPCookie *) cookie\n{\n    [self deleteCookie___crossmobile_ios_foundation_NSHTTPCookie:(cookie ? cookie : JAVA_NULL)];\n}\n\n",
      "super": "- (void) deleteCookie___crossmobile_ios_foundation_NSHTTPCookie:(NSHTTPCookie*) cookie \n{\n    [super deleteCookie:(cookie == JAVA_NULL ? nil : cookie)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSHTTPCookie"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setCookie(crossmobile.ios.foundation.NSHTTPCookie)": {
      "reverse": "- (void) setCookie:(NSHTTPCookie *) cookie\n{\n    [self setCookie___crossmobile_ios_foundation_NSHTTPCookie:(cookie ? cookie : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setCookie___crossmobile_ios_foundation_NSHTTPCookie:(NSHTTPCookie*) cookie \n{\n    [super setCookie:(cookie == JAVA_NULL ? nil : cookie)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSHTTPCookie"
      ]
    },
    "setCookieAcceptPolicy(int)": {
      "reverse": "- (void) setCookieAcceptPolicy:(NSHTTPCookieAcceptPolicy) cookieAcceptPolicy\n{\n    [self setCookieAcceptPolicy___int:cookieAcceptPolicy];\n}\n\n",
      "super": "- (void) setCookieAcceptPolicy___int:(int) cookieAcceptPolicy \n{\n    [super setCookieAcceptPolicy:cookieAcceptPolicy];\n}\n\n"
    },
    "setCookies(java.util.List,crossmobile.ios.foundation.NSURL,crossmobile.ios.foundation.NSURL)": {
      "reverse": "- (void) setCookies:(NSArray<NSHTTPCookie *> *) cookies forURL:(NSURL *) URL mainDocumentURL:(NSURL *) mainDocumentURL\n{\n    [self setCookies___java_util_List_crossmobile_ios_foundation_NSURL_crossmobile_ios_foundation_NSURL:(cookies ? cookies : JAVA_NULL) :(URL ? URL : JAVA_NULL) :(mainDocumentURL ? mainDocumentURL : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setCookies___java_util_List_crossmobile_ios_foundation_NSURL_crossmobile_ios_foundation_NSURL:(NSArray*) cookies :(NSURL*) URL :(NSURL*) mainDocumentURL \n{\n    [super setCookies:(cookies == JAVA_NULL ? nil : cookies) forURL:(URL == JAVA_NULL ? nil : URL) mainDocumentURL:(mainDocumentURL == JAVA_NULL ? nil : mainDocumentURL)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL",
        "java_util_List"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSHTTPURLResponse": {
    "MIMEType()": null,
    "URL()": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "allHeaderFields()": {
      "reverse": "- (NSDictionary *) allHeaderFields\n{\n    NSDictionary * re$ult = [self allHeaderFields__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDictionary*) allHeaderFields__\n{\n    NSDictionary* re$ult = [super allHeaderFields];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Map"
      ]
    },
    "expectedContentLength()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "statusCode()": {
      "reverse": "- (NSInteger) statusCode\n{\n    return [self statusCode__];\n}\n\n",
      "super": "- (int) statusCode__\n{\n    return [super statusCode];\n}\n\n"
    },
    "textEncodingName()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSIndexPath": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "row()": {
      "reverse": "- (NSInteger) row\n{\n    return [self row__];\n}\n\n",
      "super": "- (int) row__\n{\n    return [super row];\n}\n\n"
    },
    "section()": {
      "reverse": "- (NSInteger) section\n{\n    return [self section__];\n}\n\n",
      "super": "- (int) section__\n{\n    return [super section];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSItemProvider": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "hasItemConformingToTypeIdentifier(java.lang.String)": {
      "reverse": "- (BOOL) hasItemConformingToTypeIdentifier:(NSString *) typeIdentifier\n{\n    return [self hasItemConformingToTypeIdentifier___java_lang_String:(typeIdentifier ? typeIdentifier : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) hasItemConformingToTypeIdentifier___java_lang_String:(NSString*) typeIdentifier \n{\n    return [super hasItemConformingToTypeIdentifier:(typeIdentifier == JAVA_NULL ? nil : typeIdentifier)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "registeredTypeIdentifiers()": {
      "reverse": "- (NSArray *) registeredTypeIdentifiers\n{\n    NSArray * re$ult = [self registeredTypeIdentifiers__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) registeredTypeIdentifiers__\n{\n    NSArray* re$ult = [super registeredTypeIdentifiers];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSJSONSerialization": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSLocale": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "countryCode()": {
      "reverse": "- (NSString *) countryCode\n{\n    NSString * re$ult = [self countryCode__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) countryCode__\n{\n    NSString* re$ult = [super countryCode];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "languageCode()": {
      "reverse": "- (NSString *) languageCode\n{\n    NSString * re$ult = [self languageCode__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) languageCode__\n{\n    NSString* re$ult = [super languageCode];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "localeIdentifier()": {
      "reverse": "- (NSString *) localeIdentifier\n{\n    NSString * re$ult = [self localeIdentifier__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) localeIdentifier__\n{\n    NSString* re$ult = [super localeIdentifier];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "variantCode()": {
      "reverse": "- (NSString *) variantCode\n{\n    NSString * re$ult = [self variantCode__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) variantCode__\n{\n    NSString* re$ult = [super variantCode];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    }
  },
  "crossmobile.ios.foundation.NSMutableData": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "appendBytes(byte[])": {
      "reverse": "- (void) appendBytes:(void *) bytes length:(NSUInteger) length\n{\n    [self appendBytes___byte_ARRAYTYPE:bytes :length];\n}\n\n",
      "super": "- (void) appendBytes___byte_ARRAYTYPE:(XMLVMArray*) bytes \n{\n    [super appendBytes:(bytes == JAVA_NULL ? NULL : bytes->array.data) length:(bytes == JAVA_NULL ? 0 : bytes->length)];\n}\n\n"
    },
    "appendData(crossmobile.ios.foundation.NSData)": {
      "reverse": "- (void) appendData:(NSData *) other\n{\n    [self appendData___crossmobile_ios_foundation_NSData:(other ? other : JAVA_NULL)];\n}\n\n",
      "super": "- (void) appendData___crossmobile_ios_foundation_NSData:(NSData*) other \n{\n    [super appendData:(other == JAVA_NULL ? nil : other)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData"
      ]
    },
    "base64EncodedStringWithOptions(int)": null,
    "bytes()": null,
    "length()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setData(crossmobile.ios.foundation.NSData)": {
      "reverse": "- (void) setData:(NSData *) data\n{\n    [self setData___crossmobile_ios_foundation_NSData:(data ? data : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setData___crossmobile_ios_foundation_NSData:(NSData*) data \n{\n    [super setData:(data == JAVA_NULL ? nil : data)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "writeToFile(java.lang.String,boolean)": null
  },
  "crossmobile.ios.foundation.NSMutableURLRequest": {
    "HTTPBody()": {
      "reverse": "- (NSData *) HTTPBody\n{\n    NSData * re$ult = [self HTTPBody__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSData*) HTTPBody__\n{\n    NSData* re$ult = [super HTTPBody];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData"
      ]
    },
    "HTTPShouldHandleCookies()": null,
    "URL()": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addValue(java.lang.String,java.lang.String)": {
      "reverse": "- (void) addValue:(NSString *) value forHTTPHeaderField:(NSString *) field\n{\n    [self addValue___java_lang_String_java_lang_String:(value ? value : JAVA_NULL) :(field ? field : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addValue___java_lang_String_java_lang_String:(NSString*) value :(NSString*) field \n{\n    [super addValue:(value == JAVA_NULL ? nil : value) forHTTPHeaderField:(field == JAVA_NULL ? nil : field)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "allHTTPHeaderFields()": {
      "reverse": "- (NSDictionary <NSString *,NSString *> *) allHTTPHeaderFields\n{\n    NSDictionary <NSString *,NSString *> * re$ult = [self allHTTPHeaderFields__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDictionary*) allHTTPHeaderFields__\n{\n    NSDictionary* re$ult = [super allHTTPHeaderFields];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Map"
      ]
    },
    "cachePolicy()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setHTTPBody(crossmobile.ios.foundation.NSData)": {
      "reverse": "- (void) setHTTPBody:(NSData *) HTTPBody\n{\n    [self setHTTPBody___crossmobile_ios_foundation_NSData:(HTTPBody ? HTTPBody : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setHTTPBody___crossmobile_ios_foundation_NSData:(NSData*) HTTPBody \n{\n    [super setHTTPBody:(HTTPBody == JAVA_NULL ? nil : HTTPBody)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData"
      ]
    },
    "setHTTPMethod(java.lang.String)": {
      "reverse": "- (void) setHTTPMethod:(NSString *) HTTPMethod\n{\n    [self setHTTPMethod___java_lang_String:(HTTPMethod ? HTTPMethod : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setHTTPMethod___java_lang_String:(NSString*) HTTPMethod \n{\n    [super setHTTPMethod:(HTTPMethod == JAVA_NULL ? nil : HTTPMethod)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setHTTPShouldHandleCookies(boolean)": {
      "reverse": "- (void) setHTTPShouldHandleCookies:(BOOL) HTTPShouldHandleCookies\n{\n    [self setHTTPShouldHandleCookies___boolean:HTTPShouldHandleCookies];\n}\n\n",
      "super": "- (void) setHTTPShouldHandleCookies___boolean:(BOOL) HTTPShouldHandleCookies \n{\n    [super setHTTPShouldHandleCookies:HTTPShouldHandleCookies];\n}\n\n"
    },
    "setTimeoutInterval(double)": {
      "reverse": "- (void) setTimeoutInterval:(NSTimeInterval) timeoutInterval\n{\n    [self setTimeoutInterval___double:timeoutInterval];\n}\n\n",
      "super": "- (void) setTimeoutInterval___double:(double) timeoutInterval \n{\n    [super setTimeoutInterval:timeoutInterval];\n}\n\n"
    },
    "setURL(crossmobile.ios.foundation.NSURL)": {
      "reverse": "- (void) setURL:(NSURL *) URL\n{\n    [self setURL___crossmobile_ios_foundation_NSURL:(URL ? URL : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setURL___crossmobile_ios_foundation_NSURL:(NSURL*) URL \n{\n    [super setURL:(URL == JAVA_NULL ? nil : URL)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "timeoutInterval()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSNotification": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "name()": {
      "reverse": "- (NSNotificationName) name\n{\n    NSNotificationName re$ult = [self name__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) name__\n{\n    NSString* re$ult = [super name];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "object()": {
      "reverse": "- (id) object\n{\n    id re$ult = [self object__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) object__\n{\n    id re$ult = [super object];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "userInfo()": {
      "reverse": "- (NSDictionary *) userInfo\n{\n    NSDictionary * re$ult = [self userInfo__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDictionary*) userInfo__\n{\n    NSDictionary* re$ult = [super userInfo];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Map"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSNotificationCenter": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addObserver(crossmobile.ios.foundation.NSSelector,java.lang.String,java.lang.Object)": {
      "reverse": "- (void) addObserver:(id) observer selector:(SEL) aSelector name:(NSNotificationName) aName object:(id) anObject\n{\n    [self addObserver___crossmobile_ios_foundation_NSSelector_java_lang_String_java_lang_Object:(observer ? observer : JAVA_NULL) :aSelector :(aName ? aName : JAVA_NULL) :(anObject ? anObject : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addObserver___crossmobile_ios_foundation_NSSelector_java_lang_String_java_lang_Object:(id<crossmobile_ios_foundation_NSSelector>) observer :(NSString*) aName :(id) anObject \n{\n    [super addObserver:(observer == JAVA_NULL ? nil : observer) selector:@selector(exec___java_lang_Object:) name:(aName == JAVA_NULL ? nil : aName) object:(anObject == JAVA_NULL ? nil : anObject)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String",
        "java_lang_reflect_Method"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "postNotification(crossmobile.ios.foundation.NSNotification)": {
      "reverse": "- (void) postNotification:(NSNotification *) notification\n{\n    [self postNotification___crossmobile_ios_foundation_NSNotification:(notification ? notification : JAVA_NULL)];\n}\n\n",
      "super": "- (void) postNotification___crossmobile_ios_foundation_NSNotification:(NSNotification*) notification \n{\n    [super postNotification:(notification == JAVA_NULL ? nil : notification)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSNotification"
      ]
    },
    "postNotificationName(java.lang.String,java.lang.Object)": {
      "reverse": "- (void) postNotificationName:(NSNotificationName) aName object:(id) anObject\n{\n    [self postNotificationName___java_lang_String_java_lang_Object:(aName ? aName : JAVA_NULL) :(anObject ? anObject : JAVA_NULL)];\n}\n\n",
      "super": "- (void) postNotificationName___java_lang_String_java_lang_Object:(NSString*) aName :(id) anObject \n{\n    [super postNotificationName:(aName == JAVA_NULL ? nil : aName) object:(anObject == JAVA_NULL ? nil : anObject)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String"
      ]
    },
    "postNotificationName(java.lang.String,java.lang.Object,java.util.Map)": {
      "reverse": "- (void) postNotificationName:(NSNotificationName) aName object:(id) anObject userInfo:(NSDictionary *) aUserInfo\n{\n    [self postNotificationName___java_lang_String_java_lang_Object_java_util_Map:(aName ? aName : JAVA_NULL) :(anObject ? anObject : JAVA_NULL) :(aUserInfo ? aUserInfo : JAVA_NULL)];\n}\n\n",
      "super": "- (void) postNotificationName___java_lang_String_java_lang_Object_java_util_Map:(NSString*) aName :(id) anObject :(NSDictionary*) aUserInfo \n{\n    [super postNotificationName:(aName == JAVA_NULL ? nil : aName) object:(anObject == JAVA_NULL ? nil : anObject) userInfo:(aUserInfo == JAVA_NULL ? nil : aUserInfo)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String",
        "java_util_Map"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSSelector)": {
      "reverse": "- (void) removeObserver:(id) observer\n{\n    [self removeObserver___crossmobile_ios_foundation_NSSelector:(observer ? observer : JAVA_NULL)];\n}\n\n",
      "super": "- (void) removeObserver___crossmobile_ios_foundation_NSSelector:(id<crossmobile_ios_foundation_NSSelector>) observer \n{\n    [super removeObserver:(observer == JAVA_NULL ? nil : observer)];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSSelector,java.lang.String,java.lang.Object)": {
      "reverse": "- (void) removeObserver:(id) observer name:(NSNotificationName) aName object:(id) anObject\n{\n    [self removeObserver___crossmobile_ios_foundation_NSSelector_java_lang_String_java_lang_Object:(observer ? observer : JAVA_NULL) :(aName ? aName : JAVA_NULL) :(anObject ? anObject : JAVA_NULL)];\n}\n\n",
      "super": "- (void) removeObserver___crossmobile_ios_foundation_NSSelector_java_lang_String_java_lang_Object:(id<crossmobile_ios_foundation_NSSelector>) observer :(NSString*) aName :(id) anObject \n{\n    [super removeObserver:(observer == JAVA_NULL ? nil : observer) name:(aName == JAVA_NULL ? nil : aName) object:(anObject == JAVA_NULL ? nil : anObject)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSNumberFormatter": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "maximumFractionDigits()": {
      "reverse": "- (NSUInteger) maximumFractionDigits\n{\n    return [self maximumFractionDigits__];\n}\n\n",
      "super": "- (int) maximumFractionDigits__\n{\n    return [super maximumFractionDigits];\n}\n\n"
    },
    "numberStyle()": {
      "reverse": "- (NSNumberFormatterStyle) numberStyle\n{\n    return [self numberStyle__];\n}\n\n",
      "super": "- (int) numberStyle__\n{\n    return [super numberStyle];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setMaximumFractionDigits(int)": {
      "reverse": "- (void) setMaximumFractionDigits:(NSUInteger) maximumFractionDigits\n{\n    [self setMaximumFractionDigits___int:maximumFractionDigits];\n}\n\n",
      "super": "- (void) setMaximumFractionDigits___int:(int) maximumFractionDigits \n{\n    [super setMaximumFractionDigits:maximumFractionDigits];\n}\n\n"
    },
    "setNumberStyle(int)": {
      "reverse": "- (void) setNumberStyle:(NSNumberFormatterStyle) numberStyle\n{\n    [self setNumberStyle___int:numberStyle];\n}\n\n",
      "super": "- (void) setNumberStyle___int:(int) numberStyle \n{\n    [super setNumberStyle:numberStyle];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSObject": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": {
      "reverse": "- (void) addObserver:(NSObject *) observer forKeyPath:(NSString *) keyPath options:(NSKeyValueObservingOptions) options context:(void *) context\n{\n    [self addObserver___crossmobile_ios_foundation_NSObject_java_lang_String_int_java_lang_Object:(observer ? observer : JAVA_NULL) :(keyPath ? keyPath : JAVA_NULL) :options :(context ? context : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addObserver___crossmobile_ios_foundation_NSObject_java_lang_String_int_java_lang_Object:(NSObject*) observer :(NSString*) keyPath :(int) options :(id) context \n{\n    [super addObserver:(observer == JAVA_NULL ? nil : observer) forKeyPath:(keyPath == JAVA_NULL ? nil : keyPath) options:options context:(context == JAVA_NULL ? nil : context)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSObject",
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": {
      "reverse": "- (void) observeValueForKeyPath:(NSString *) keyPath ofObject:(id) object change:(NSDictionary<NSKeyValueChangeKey, id> *) change context:(void *) context\n{\n    [self observeValueForKeyPath___java_lang_String_java_lang_Object_java_util_Map_java_lang_Object:(keyPath ? keyPath : JAVA_NULL) :(object ? object : JAVA_NULL) :(change ? change : JAVA_NULL) :(context ? context : JAVA_NULL)];\n}\n\n",
      "super": "- (void) observeValueForKeyPath___java_lang_String_java_lang_Object_java_util_Map_java_lang_Object:(NSString*) keyPath :(id) object :(NSDictionary*) change :(id) context \n{\n    [super observeValueForKeyPath:(keyPath == JAVA_NULL ? nil : keyPath) ofObject:(object == JAVA_NULL ? nil : object) change:(change == JAVA_NULL ? nil : change) context:(context == JAVA_NULL ? nil : context)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String",
        "java_util_Map"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": {
      "reverse": "- (void) removeObserver:(NSObject *) observer forKeyPath:(NSString *) keyPath\n{\n    [self removeObserver___crossmobile_ios_foundation_NSObject_java_lang_String:(observer ? observer : JAVA_NULL) :(keyPath ? keyPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) removeObserver___crossmobile_ios_foundation_NSObject_java_lang_String:(NSObject*) observer :(NSString*) keyPath \n{\n    [super removeObserver:(observer == JAVA_NULL ? nil : observer) forKeyPath:(keyPath == JAVA_NULL ? nil : keyPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSObject",
        "java_lang_String"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": {
      "reverse": "- (void) removeObserver:(NSObject *) observer forKeyPath:(NSString *) keyPath context:(void *) context\n{\n    [self removeObserver___crossmobile_ios_foundation_NSObject_java_lang_String_java_lang_Object:(observer ? observer : JAVA_NULL) :(keyPath ? keyPath : JAVA_NULL) :(context ? context : JAVA_NULL)];\n}\n\n",
      "super": "- (void) removeObserver___crossmobile_ios_foundation_NSObject_java_lang_String_java_lang_Object:(NSObject*) observer :(NSString*) keyPath :(id) context \n{\n    [super removeObserver:(observer == JAVA_NULL ? nil : observer) forKeyPath:(keyPath == JAVA_NULL ? nil : keyPath) context:(context == JAVA_NULL ? nil : context)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSObject",
        "java_lang_String"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": {
      "reverse": "- (void) setValue:(id) value forKey:(NSString *) key\n{\n    [self setValueForKey___java_lang_Object_java_lang_String:(value ? value : JAVA_NULL) :(key ? key : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setValueForKey___java_lang_Object_java_lang_String:(id) value :(NSString*) key \n{\n    [super setValue:(value == JAVA_NULL ? nil : value) forKey:(key == JAVA_NULL ? nil : key)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String"
      ]
    },
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": {
      "reverse": "- (void) setValue:(id) value forUndefinedKey:(NSString *) key\n{\n    [self setValueForUndefinedKey___java_lang_Object_java_lang_String:(value ? value : JAVA_NULL) :(key ? key : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setValueForUndefinedKey___java_lang_Object_java_lang_String:(id) value :(NSString*) key \n{\n    [super setValue:(value == JAVA_NULL ? nil : value) forUndefinedKey:(key == JAVA_NULL ? nil : key)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String"
      ]
    },
    "valueForKey(java.lang.String)": {
      "reverse": "- (id) valueForKey:(NSString *) key\n{\n    id re$ult = [self valueForKey___java_lang_String:(key ? key : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) valueForKey___java_lang_String:(NSString*) key \n{\n    id re$ult = [super valueForKey:(key == JAVA_NULL ? nil : key)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String"
      ]
    },
    "valueForUndefinedKey(java.lang.String)": {
      "reverse": "- (id) valueForUndefinedKey:(NSString *) key\n{\n    id re$ult = [self valueForUndefinedKey___java_lang_String:(key ? key : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) valueForUndefinedKey___java_lang_String:(NSString*) key \n{\n    id re$ult = [super valueForUndefinedKey:(key == JAVA_NULL ? nil : key)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String"
      ]
    }
  },
  "crossmobile.ios.foundation.NSOperationQueue": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSPredicate": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "allowEvaluation()": {
      "reverse": "- (void) allowEvaluation\n{\n    [self allowEvaluation__];\n}\n\n",
      "super": "- (void) allowEvaluation__\n{\n    [super allowEvaluation];\n}\n\n"
    },
    "evaluateWithObject(java.lang.Object)": {
      "reverse": "- (BOOL) evaluateWithObject:(id) object\n{\n    return [self evaluateWithObject___java_lang_Object:(object ? object : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) evaluateWithObject___java_lang_Object:(id) object \n{\n    return [super evaluateWithObject:(object == JAVA_NULL ? nil : object)];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "evaluateWithObject(java.lang.Object,java.util.Map)": {
      "reverse": "- (BOOL) evaluateWithObject:(id) object substitutionVariables:(NSDictionary<NSString *,id> *) bindings\n{\n    return [self evaluateWithObject___java_lang_Object_java_util_Map:(object ? object : JAVA_NULL) :(bindings ? bindings : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) evaluateWithObject___java_lang_Object_java_util_Map:(id) object :(NSDictionary*) bindings \n{\n    return [super evaluateWithObject:(object == JAVA_NULL ? nil : object) substitutionVariables:(bindings == JAVA_NULL ? nil : bindings)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_util_Map"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "predicateFormat()": {
      "reverse": "- (NSString *) predicateFormat\n{\n    NSString * re$ult = [self predicateFormat__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) predicateFormat__\n{\n    NSString* re$ult = [super predicateFormat];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "predicateWithSubstitutionVariables(java.util.Map)": {
      "reverse": "- (instancetype) predicateWithSubstitutionVariables:(NSDictionary<NSString *,id> *) variables\n{\n    id re$ult = [self predicateWithSubstitutionVariables___java_util_Map:(variables ? variables : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (instancetype) predicateWithSubstitutionVariables___java_util_Map:(NSDictionary*) variables \n{\n    id re$ult = [super predicateWithSubstitutionVariables:(variables == JAVA_NULL ? nil : variables)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Map",
        "org_crossmobile_utils_CustomTypeClasses$Instance"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSRunLoop": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addTimer(crossmobile.ios.foundation.NSTimer,java.lang.String)": {
      "reverse": "- (void) addTimer:(NSTimer *) timer forMode:(NSString *) mode\n{\n    [self addTimer___crossmobile_ios_foundation_NSTimer_java_lang_String:(timer ? timer : JAVA_NULL) :(mode ? mode : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addTimer___crossmobile_ios_foundation_NSTimer_java_lang_String:(NSTimer*) timer :(NSString*) mode \n{\n    [super addTimer:(timer == JAVA_NULL ? nil : timer) forMode:(mode == JAVA_NULL ? nil : mode)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSTimer",
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSSecureCoding": {
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    }
  },
  "crossmobile.ios.foundation.NSString": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSTimeZone": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "name()": {
      "reverse": "- (NSString *) name\n{\n    NSString * re$ult = [self name__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) name__\n{\n    NSString* re$ult = [super name];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSTimer": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "fire()": {
      "reverse": "- (void) fire\n{\n    [self fire__];\n}\n\n",
      "super": "- (void) fire__\n{\n    [super fire];\n}\n\n"
    },
    "fireDate()": {
      "reverse": "- (NSDate *) fireDate\n{\n    NSDate * re$ult = [self fireDate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDate*) fireDate__\n{\n    NSDate* re$ult = [super fireDate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate"
      ]
    },
    "invalidate()": {
      "reverse": "- (void) invalidate\n{\n    [self invalidate__];\n}\n\n",
      "super": "- (void) invalidate__\n{\n    [super invalidate];\n}\n\n"
    },
    "isValid()": {
      "reverse": "- (BOOL) isValid\n{\n    return [self isValid__];\n}\n\n",
      "super": "- (BOOL) isValid__\n{\n    return [super isValid];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setFireDate(crossmobile.ios.foundation.NSDate)": {
      "reverse": "- (void) setFireDate:(NSDate *) fireDate\n{\n    [self setFireDate___crossmobile_ios_foundation_NSDate:(fireDate ? fireDate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setFireDate___crossmobile_ios_foundation_NSDate:(NSDate*) fireDate \n{\n    [super setFireDate:(fireDate == JAVA_NULL ? nil : fireDate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "timeInterval()": {
      "reverse": "- (NSTimeInterval) timeInterval\n{\n    return [self timeInterval__];\n}\n\n",
      "super": "- (double) timeInterval__\n{\n    return [super timeInterval];\n}\n\n"
    },
    "userInfo()": {
      "reverse": "- (id) userInfo\n{\n    id re$ult = [self userInfo__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) userInfo__\n{\n    id re$ult = [super userInfo];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSURL": {
    "absoluteString()": {
      "reverse": "- (NSString *) absoluteString\n{\n    NSString * re$ult = [self absoluteString__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) absoluteString__\n{\n    NSString* re$ult = [super absoluteString];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSURLCache": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "currentDiskUsage()": {
      "reverse": "- (NSUInteger) currentDiskUsage\n{\n    return [self currentDiskUsage__];\n}\n\n",
      "super": "- (int) currentDiskUsage__\n{\n    return [super currentDiskUsage];\n}\n\n"
    },
    "currentMemoryUsage()": {
      "reverse": "- (NSUInteger) currentMemoryUsage\n{\n    return [self currentMemoryUsage__];\n}\n\n",
      "super": "- (int) currentMemoryUsage__\n{\n    return [super currentMemoryUsage];\n}\n\n"
    },
    "diskCapacity()": {
      "reverse": "- (NSUInteger) diskCapacity\n{\n    return [self diskCapacity__];\n}\n\n",
      "super": "- (int) diskCapacity__\n{\n    return [super diskCapacity];\n}\n\n"
    },
    "memoryCapacity()": {
      "reverse": "- (NSUInteger) memoryCapacity\n{\n    return [self memoryCapacity__];\n}\n\n",
      "super": "- (int) memoryCapacity__\n{\n    return [super memoryCapacity];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeAllCachedResponses()": {
      "reverse": "- (void) removeAllCachedResponses\n{\n    [self removeAllCachedResponses__];\n}\n\n",
      "super": "- (void) removeAllCachedResponses__\n{\n    [super removeAllCachedResponses];\n}\n\n"
    },
    "removeCachedResponseForRequest(crossmobile.ios.foundation.NSURLRequest)": {
      "reverse": "- (void) removeCachedResponseForRequest:(NSURLRequest *) request\n{\n    [self removeCachedResponseForRequest___crossmobile_ios_foundation_NSURLRequest:(request ? request : JAVA_NULL)];\n}\n\n",
      "super": "- (void) removeCachedResponseForRequest___crossmobile_ios_foundation_NSURLRequest:(NSURLRequest*) request \n{\n    [super removeCachedResponseForRequest:(request == JAVA_NULL ? nil : request)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLRequest"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setDiskCapacity(int)": {
      "reverse": "- (void) setDiskCapacity:(NSUInteger) diskCapacity\n{\n    [self setDiskCapacity___int:diskCapacity];\n}\n\n",
      "super": "- (void) setDiskCapacity___int:(int) diskCapacity \n{\n    [super setDiskCapacity:diskCapacity];\n}\n\n"
    },
    "setMemoryCapacity(int)": {
      "reverse": "- (void) setMemoryCapacity:(NSUInteger) memoryCapacity\n{\n    [self setMemoryCapacity___int:memoryCapacity];\n}\n\n",
      "super": "- (void) setMemoryCapacity___int:(int) memoryCapacity \n{\n    [super setMemoryCapacity:memoryCapacity];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSURLConnection": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "cancel()": {
      "reverse": "- (void) cancel\n{\n    [self cancel__];\n}\n\n",
      "super": "- (void) cancel__\n{\n    [super cancel];\n}\n\n"
    },
    "currentRequest()": {
      "reverse": "- (NSURLRequest *) currentRequest\n{\n    NSURLRequest * re$ult = [self currentRequest__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLRequest*) currentRequest__\n{\n    NSURLRequest* re$ult = [super currentRequest];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLRequest"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "originalRequest()": {
      "reverse": "- (NSURLRequest *) originalRequest\n{\n    NSURLRequest * re$ult = [self originalRequest__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLRequest*) originalRequest__\n{\n    NSURLRequest* re$ult = [super originalRequest];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLRequest"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "start()": {
      "reverse": "- (void) start\n{\n    [self start__];\n}\n\n",
      "super": "- (void) start__\n{\n    [super start];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSURLConnectionDataDelegate": {
    "didFailWithError(crossmobile.ios.foundation.NSURLConnection,crossmobile.ios.foundation.NSError)": {
      "reverse": "- (void) connection:(NSURLConnection *) connection didFailWithError:(NSError *) error\n{\n    [self didFailWithError___crossmobile_ios_foundation_NSURLConnection_crossmobile_ios_foundation_NSError:(connection ? connection : JAVA_NULL) :(error ? error : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didFailWithError___crossmobile_ios_foundation_NSURLConnection_crossmobile_ios_foundation_NSError:(NSURLConnection*) connection :(NSError*) error \n{\n    [super connection:(connection == JAVA_NULL ? nil : connection) didFailWithError:(error == JAVA_NULL ? nil : error)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSError",
        "crossmobile_ios_foundation_NSURLConnection"
      ]
    },
    "didFinishLoading(crossmobile.ios.foundation.NSURLConnection)": {
      "reverse": "- (void) connectionDidFinishLoading:(NSURLConnection *) connection\n{\n    [self didFinishLoading___crossmobile_ios_foundation_NSURLConnection:(connection ? connection : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didFinishLoading___crossmobile_ios_foundation_NSURLConnection:(NSURLConnection*) connection \n{\n    [super connectionDidFinishLoading:(connection == JAVA_NULL ? nil : connection)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLConnection"
      ]
    },
    "didReceiveData(crossmobile.ios.foundation.NSURLConnection,crossmobile.ios.foundation.NSData)": {
      "reverse": "- (void) connection:(NSURLConnection *) connection didReceiveData:(NSData *) data\n{\n    [self didReceiveData___crossmobile_ios_foundation_NSURLConnection_crossmobile_ios_foundation_NSData:(connection ? connection : JAVA_NULL) :(data ? data : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didReceiveData___crossmobile_ios_foundation_NSURLConnection_crossmobile_ios_foundation_NSData:(NSURLConnection*) connection :(NSData*) data \n{\n    [super connection:(connection == JAVA_NULL ? nil : connection) didReceiveData:(data == JAVA_NULL ? nil : data)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData",
        "crossmobile_ios_foundation_NSURLConnection"
      ]
    },
    "didReceiveResponse(crossmobile.ios.foundation.NSURLConnection,crossmobile.ios.foundation.NSURLResponse)": {
      "reverse": "- (void) connection:(NSURLConnection *) connection didReceiveResponse:(NSURLResponse *) response\n{\n    [self didReceiveResponse___crossmobile_ios_foundation_NSURLConnection_crossmobile_ios_foundation_NSURLResponse:(connection ? connection : JAVA_NULL) :(response ? response : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didReceiveResponse___crossmobile_ios_foundation_NSURLConnection_crossmobile_ios_foundation_NSURLResponse:(NSURLConnection*) connection :(NSURLResponse*) response \n{\n    [super connection:(connection == JAVA_NULL ? nil : connection) didReceiveResponse:(response == JAVA_NULL ? nil : response)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLConnection",
        "crossmobile_ios_foundation_NSURLResponse"
      ]
    }
  },
  "crossmobile.ios.foundation.NSURLConnectionDelegate": {
    "didFailWithError(crossmobile.ios.foundation.NSURLConnection,crossmobile.ios.foundation.NSError)": {
      "reverse": "- (void) connection:(NSURLConnection *) connection didFailWithError:(NSError *) error\n{\n    [self didFailWithError___crossmobile_ios_foundation_NSURLConnection_crossmobile_ios_foundation_NSError:(connection ? connection : JAVA_NULL) :(error ? error : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didFailWithError___crossmobile_ios_foundation_NSURLConnection_crossmobile_ios_foundation_NSError:(NSURLConnection*) connection :(NSError*) error \n{\n    [super connection:(connection == JAVA_NULL ? nil : connection) didFailWithError:(error == JAVA_NULL ? nil : error)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSError",
        "crossmobile_ios_foundation_NSURLConnection"
      ]
    }
  },
  "crossmobile.ios.foundation.NSURLRequest": {
    "HTTPShouldHandleCookies()": {
      "reverse": "- (BOOL) HTTPShouldHandleCookies\n{\n    return [self HTTPShouldHandleCookies__];\n}\n\n",
      "super": "- (BOOL) HTTPShouldHandleCookies__\n{\n    return [super HTTPShouldHandleCookies];\n}\n\n"
    },
    "URL()": {
      "reverse": "- (NSURL *) URL\n{\n    NSURL * re$ult = [self URL__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURL*) URL__\n{\n    NSURL* re$ult = [super URL];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL"
      ]
    },
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "cachePolicy()": {
      "reverse": "- (NSURLRequestCachePolicy) cachePolicy\n{\n    return [self cachePolicy__];\n}\n\n",
      "super": "- (int) cachePolicy__\n{\n    return [super cachePolicy];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "timeoutInterval()": {
      "reverse": "- (NSTimeInterval) timeoutInterval\n{\n    return [self timeoutInterval__];\n}\n\n",
      "super": "- (double) timeoutInterval__\n{\n    return [super timeoutInterval];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSURLResponse": {
    "MIMEType()": {
      "reverse": "- (NSString *) MIMEType\n{\n    NSString * re$ult = [self MIMEType__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) MIMEType__\n{\n    NSString* re$ult = [super MIMEType];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "URL()": {
      "reverse": "- (NSURL *) URL\n{\n    NSURL * re$ult = [self URL__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURL*) URL__\n{\n    NSURL* re$ult = [super URL];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL"
      ]
    },
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "expectedContentLength()": {
      "reverse": "- (long long) expectedContentLength\n{\n    return [self expectedContentLength__];\n}\n\n",
      "super": "- (JAVA_LONG) expectedContentLength__\n{\n    return [super expectedContentLength];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "textEncodingName()": {
      "reverse": "- (NSString *) textEncodingName\n{\n    NSString * re$ult = [self textEncodingName__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) textEncodingName__\n{\n    NSString* re$ult = [super textEncodingName];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSURLSession": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "configuration()": {
      "reverse": "- (NSURLSessionConfiguration *) configuration\n{\n    NSURLSessionConfiguration * re$ult = [self configuration__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLSessionConfiguration*) configuration__\n{\n    NSURLSessionConfiguration* re$ult = [super configuration];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLSessionConfiguration"
      ]
    },
    "dataTaskWithRequest(crossmobile.ios.foundation.NSURLRequest)": {
      "reverse": "- (NSURLSessionDataTask *) dataTaskWithRequest:(NSURLRequest *) request\n{\n    NSURLSessionDataTask * re$ult = [self dataTaskWithRequest___crossmobile_ios_foundation_NSURLRequest:(request ? request : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLSessionDataTask*) dataTaskWithRequest___crossmobile_ios_foundation_NSURLRequest:(NSURLRequest*) request \n{\n    NSURLSessionDataTask* re$ult = [super dataTaskWithRequest:(request == JAVA_NULL ? nil : request)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLRequest",
        "crossmobile_ios_foundation_NSURLSessionDataTask"
      ]
    },
    "dataTaskWithURL(crossmobile.ios.foundation.NSURL)": {
      "reverse": "- (NSURLSessionDataTask *) dataTaskWithURL:(NSURL *) url\n{\n    NSURLSessionDataTask * re$ult = [self dataTaskWithURL___crossmobile_ios_foundation_NSURL:(url ? url : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLSessionDataTask*) dataTaskWithURL___crossmobile_ios_foundation_NSURL:(NSURL*) url \n{\n    NSURLSessionDataTask* re$ult = [super dataTaskWithURL:(url == JAVA_NULL ? nil : url)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL",
        "crossmobile_ios_foundation_NSURLSessionDataTask"
      ]
    },
    "delegate()": {
      "reverse": "- (id<NSURLSessionDelegate>) delegate\n{\n    id<NSURLSessionDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<NSURLSessionDelegate>) delegate__\n{\n    id<NSURLSessionDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLSessionDelegate"
      ]
    },
    "delegateQueue()": {
      "reverse": "- (NSOperationQueue *) delegateQueue\n{\n    NSOperationQueue * re$ult = [self delegateQueue__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSOperationQueue*) delegateQueue__\n{\n    NSOperationQueue* re$ult = [super delegateQueue];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSOperationQueue"
      ]
    },
    "downloadTaskWithRequest(crossmobile.ios.foundation.NSURLRequest)": {
      "reverse": "- (NSURLSessionDownloadTask *) downloadTaskWithRequest:(NSURLRequest *) request\n{\n    NSURLSessionDownloadTask * re$ult = [self downloadTaskWithRequest___crossmobile_ios_foundation_NSURLRequest:(request ? request : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLSessionDownloadTask*) downloadTaskWithRequest___crossmobile_ios_foundation_NSURLRequest:(NSURLRequest*) request \n{\n    NSURLSessionDownloadTask* re$ult = [super downloadTaskWithRequest:(request == JAVA_NULL ? nil : request)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLRequest",
        "crossmobile_ios_foundation_NSURLSessionDownloadTask"
      ]
    },
    "downloadTaskWithResumeData(crossmobile.ios.foundation.NSData)": {
      "reverse": "- (NSURLSessionDownloadTask *) downloadTaskWithResumeData:(NSData *) resumeData\n{\n    NSURLSessionDownloadTask * re$ult = [self downloadTaskWithResumeData___crossmobile_ios_foundation_NSData:(resumeData ? resumeData : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLSessionDownloadTask*) downloadTaskWithResumeData___crossmobile_ios_foundation_NSData:(NSData*) resumeData \n{\n    NSURLSessionDownloadTask* re$ult = [super downloadTaskWithResumeData:(resumeData == JAVA_NULL ? nil : resumeData)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData",
        "crossmobile_ios_foundation_NSURLSessionDownloadTask"
      ]
    },
    "downloadTaskWithURL(crossmobile.ios.foundation.NSURL)": {
      "reverse": "- (NSURLSessionDownloadTask *) downloadTaskWithURL:(NSURL *) url\n{\n    NSURLSessionDownloadTask * re$ult = [self downloadTaskWithURL___crossmobile_ios_foundation_NSURL:(url ? url : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLSessionDownloadTask*) downloadTaskWithURL___crossmobile_ios_foundation_NSURL:(NSURL*) url \n{\n    NSURLSessionDownloadTask* re$ult = [super downloadTaskWithURL:(url == JAVA_NULL ? nil : url)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL",
        "crossmobile_ios_foundation_NSURLSessionDownloadTask"
      ]
    },
    "finishTasksAndInvalidate()": {
      "reverse": "- (void) finishTasksAndInvalidate\n{\n    [self finishTasksAndInvalidate__];\n}\n\n",
      "super": "- (void) finishTasksAndInvalidate__\n{\n    [super finishTasksAndInvalidate];\n}\n\n"
    },
    "invalidateAndCancel()": {
      "reverse": "- (void) invalidateAndCancel\n{\n    [self invalidateAndCancel__];\n}\n\n",
      "super": "- (void) invalidateAndCancel__\n{\n    [super invalidateAndCancel];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "sessionDescription()": {
      "reverse": "- (NSString *) sessionDescription\n{\n    NSString * re$ult = [self sessionDescription__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) sessionDescription__\n{\n    NSString* re$ult = [super sessionDescription];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setSessionDescription(java.lang.String)": {
      "reverse": "- (void) setSessionDescription:(NSString *) sessionDescription\n{\n    [self setSessionDescription___java_lang_String:(sessionDescription ? sessionDescription : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setSessionDescription___java_lang_String:(NSString*) sessionDescription \n{\n    [super setSessionDescription:(sessionDescription == JAVA_NULL ? nil : sessionDescription)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sharedSession()": {
      "reverse": "- (NSURLSession *) sharedSession\n{\n    NSURLSession * re$ult = [self sharedSession__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLSession*) sharedSession__\n{\n    NSURLSession* re$ult = [super sharedSession];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLSession"
      ]
    },
    "streamTaskWithHostName(java.lang.String,int)": {
      "reverse": "- (NSURLSessionStreamTask *) streamTaskWithHostName:(NSString *) hostname port:(NSInteger) port\n{\n    NSURLSessionStreamTask * re$ult = [self streamTaskWithHostName___java_lang_String_int:(hostname ? hostname : JAVA_NULL) :port];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLSessionStreamTask*) streamTaskWithHostName___java_lang_String_int:(NSString*) hostname :(int) port \n{\n    NSURLSessionStreamTask* re$ult = [super streamTaskWithHostName:(hostname == JAVA_NULL ? nil : hostname) port:port];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLSessionStreamTask",
        "java_lang_String"
      ]
    },
    "uploadTaskWithRequest(crossmobile.ios.foundation.NSURLRequest,crossmobile.ios.foundation.NSData)": {
      "reverse": "- (NSURLSessionUploadTask *) uploadTaskWithRequest:(NSURLRequest *) request fromData:(NSData *) bodyData\n{\n    NSURLSessionUploadTask * re$ult = [self uploadTaskWithRequest___crossmobile_ios_foundation_NSURLRequest_crossmobile_ios_foundation_NSData:(request ? request : JAVA_NULL) :(bodyData ? bodyData : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLSessionUploadTask*) uploadTaskWithRequest___crossmobile_ios_foundation_NSURLRequest_crossmobile_ios_foundation_NSData:(NSURLRequest*) request :(NSData*) bodyData \n{\n    NSURLSessionUploadTask* re$ult = [super uploadTaskWithRequest:(request == JAVA_NULL ? nil : request) fromData:(bodyData == JAVA_NULL ? nil : bodyData)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData",
        "crossmobile_ios_foundation_NSURLRequest",
        "crossmobile_ios_foundation_NSURLSessionUploadTask"
      ]
    },
    "uploadTaskWithRequest(crossmobile.ios.foundation.NSURLRequest,crossmobile.ios.foundation.NSURL)": {
      "reverse": "- (NSURLSessionUploadTask *) uploadTaskWithRequest:(NSURLRequest *) request fromFile:(NSURL *) fileURL\n{\n    NSURLSessionUploadTask * re$ult = [self uploadTaskWithRequest___crossmobile_ios_foundation_NSURLRequest_crossmobile_ios_foundation_NSURL:(request ? request : JAVA_NULL) :(fileURL ? fileURL : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLSessionUploadTask*) uploadTaskWithRequest___crossmobile_ios_foundation_NSURLRequest_crossmobile_ios_foundation_NSURL:(NSURLRequest*) request :(NSURL*) fileURL \n{\n    NSURLSessionUploadTask* re$ult = [super uploadTaskWithRequest:(request == JAVA_NULL ? nil : request) fromFile:(fileURL == JAVA_NULL ? nil : fileURL)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL",
        "crossmobile_ios_foundation_NSURLRequest",
        "crossmobile_ios_foundation_NSURLSessionUploadTask"
      ]
    },
    "uploadTaskWithStreamedRequest(crossmobile.ios.foundation.NSURLRequest)": {
      "reverse": "- (NSURLSessionUploadTask *) uploadTaskWithStreamedRequest:(NSURLRequest *) request\n{\n    NSURLSessionUploadTask * re$ult = [self uploadTaskWithStreamedRequest___crossmobile_ios_foundation_NSURLRequest:(request ? request : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLSessionUploadTask*) uploadTaskWithStreamedRequest___crossmobile_ios_foundation_NSURLRequest:(NSURLRequest*) request \n{\n    NSURLSessionUploadTask* re$ult = [super uploadTaskWithStreamedRequest:(request == JAVA_NULL ? nil : request)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLRequest",
        "crossmobile_ios_foundation_NSURLSessionUploadTask"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSURLSessionConfiguration": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setSharedContainerIdentifier(java.lang.String)": {
      "reverse": "- (void) setSharedContainerIdentifier:(NSString *) sharedContainerIdentifier\n{\n    [self setSharedContainerIdentifier___java_lang_String:(sharedContainerIdentifier ? sharedContainerIdentifier : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setSharedContainerIdentifier___java_lang_String:(NSString*) sharedContainerIdentifier \n{\n    [super setSharedContainerIdentifier:(sharedContainerIdentifier == JAVA_NULL ? nil : sharedContainerIdentifier)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sharedContainerIdentifier()": {
      "reverse": "- (NSString *) sharedContainerIdentifier\n{\n    NSString * re$ult = [self sharedContainerIdentifier__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) sharedContainerIdentifier__\n{\n    NSString* re$ult = [super sharedContainerIdentifier];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSURLSessionDataTask": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "cancel()": null,
    "countOfBytesExpectedToReceive()": null,
    "countOfBytesExpectedToSend()": null,
    "countOfBytesReceived()": null,
    "countOfBytesSent()": null,
    "currentRequest()": null,
    "error()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "originalRequest()": null,
    "priority()": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "response()": null,
    "resume()": null,
    "setPriority(float)": null,
    "setTaskDescription(java.lang.String)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "state()": null,
    "suspend()": null,
    "taskDescription()": null,
    "taskIdentifier()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSURLSessionDelegate": {
    "didBecomeInvalidWithError(crossmobile.ios.foundation.NSURLSession,crossmobile.ios.foundation.NSError)": {
      "reverse": "- (void) URLSession:(NSURLSession *) session didBecomeInvalidWithError:(NSError *) error\n{\n    [self didBecomeInvalidWithError___crossmobile_ios_foundation_NSURLSession_crossmobile_ios_foundation_NSError:(session ? session : JAVA_NULL) :(error ? error : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didBecomeInvalidWithError___crossmobile_ios_foundation_NSURLSession_crossmobile_ios_foundation_NSError:(NSURLSession*) session :(NSError*) error \n{\n    [super URLSession:(session == JAVA_NULL ? nil : session) didBecomeInvalidWithError:(error == JAVA_NULL ? nil : error)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSError",
        "crossmobile_ios_foundation_NSURLSession"
      ]
    },
    "didFinishEventsForBackgroundURLSession(crossmobile.ios.foundation.NSURLSession)": {
      "reverse": "- (void) URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *) session\n{\n    [self didFinishEventsForBackgroundURLSession___crossmobile_ios_foundation_NSURLSession:(session ? session : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didFinishEventsForBackgroundURLSession___crossmobile_ios_foundation_NSURLSession:(NSURLSession*) session \n{\n    [super URLSessionDidFinishEventsForBackgroundURLSession:(session == JAVA_NULL ? nil : session)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLSession"
      ]
    }
  },
  "crossmobile.ios.foundation.NSURLSessionDownloadTask": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "cancel()": null,
    "countOfBytesExpectedToReceive()": null,
    "countOfBytesExpectedToSend()": null,
    "countOfBytesReceived()": null,
    "countOfBytesSent()": null,
    "currentRequest()": null,
    "error()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "originalRequest()": null,
    "priority()": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "response()": null,
    "resume()": null,
    "setPriority(float)": null,
    "setTaskDescription(java.lang.String)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "state()": null,
    "suspend()": null,
    "taskDescription()": null,
    "taskIdentifier()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSURLSessionStreamTask": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "cancel()": null,
    "countOfBytesExpectedToReceive()": null,
    "countOfBytesExpectedToSend()": null,
    "countOfBytesReceived()": null,
    "countOfBytesSent()": null,
    "currentRequest()": null,
    "error()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "originalRequest()": null,
    "priority()": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "response()": null,
    "resume()": null,
    "setPriority(float)": null,
    "setTaskDescription(java.lang.String)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "state()": null,
    "suspend()": null,
    "taskDescription()": null,
    "taskIdentifier()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSURLSessionTask": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "cancel()": {
      "reverse": "- (void) cancel\n{\n    [self cancel__];\n}\n\n",
      "super": "- (void) cancel__\n{\n    [super cancel];\n}\n\n"
    },
    "countOfBytesExpectedToReceive()": {
      "reverse": "- (int64_t) countOfBytesExpectedToReceive\n{\n    return [self countOfBytesExpectedToReceive__];\n}\n\n",
      "super": "- (JAVA_LONG) countOfBytesExpectedToReceive__\n{\n    return [super countOfBytesExpectedToReceive];\n}\n\n"
    },
    "countOfBytesExpectedToSend()": {
      "reverse": "- (int64_t) countOfBytesExpectedToSend\n{\n    return [self countOfBytesExpectedToSend__];\n}\n\n",
      "super": "- (JAVA_LONG) countOfBytesExpectedToSend__\n{\n    return [super countOfBytesExpectedToSend];\n}\n\n"
    },
    "countOfBytesReceived()": {
      "reverse": "- (int64_t) countOfBytesReceived\n{\n    return [self countOfBytesReceived__];\n}\n\n",
      "super": "- (JAVA_LONG) countOfBytesReceived__\n{\n    return [super countOfBytesReceived];\n}\n\n"
    },
    "countOfBytesSent()": {
      "reverse": "- (int64_t) countOfBytesSent\n{\n    return [self countOfBytesSent__];\n}\n\n",
      "super": "- (JAVA_LONG) countOfBytesSent__\n{\n    return [super countOfBytesSent];\n}\n\n"
    },
    "currentRequest()": {
      "reverse": "- (NSURLRequest *) currentRequest\n{\n    NSURLRequest * re$ult = [self currentRequest__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLRequest*) currentRequest__\n{\n    NSURLRequest* re$ult = [super currentRequest];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLRequest"
      ]
    },
    "error()": {
      "reverse": "- (NSError *) error\n{\n    NSError * re$ult = [self error__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSError*) error__\n{\n    NSError* re$ult = [super error];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSError"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "originalRequest()": {
      "reverse": "- (NSURLRequest *) originalRequest\n{\n    NSURLRequest * re$ult = [self originalRequest__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLRequest*) originalRequest__\n{\n    NSURLRequest* re$ult = [super originalRequest];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLRequest"
      ]
    },
    "priority()": {
      "reverse": "- (float) priority\n{\n    return [self priority__];\n}\n\n",
      "super": "- (float) priority__\n{\n    return [super priority];\n}\n\n"
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "response()": {
      "reverse": "- (NSURLResponse *) response\n{\n    NSURLResponse * re$ult = [self response__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSURLResponse*) response__\n{\n    NSURLResponse* re$ult = [super response];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURLResponse"
      ]
    },
    "resume()": {
      "reverse": "- (void) resume\n{\n    [self resume__];\n}\n\n",
      "super": "- (void) resume__\n{\n    [super resume];\n}\n\n"
    },
    "setPriority(float)": {
      "reverse": "- (void) setPriority:(float) priority\n{\n    [self setPriority___float:priority];\n}\n\n",
      "super": "- (void) setPriority___float:(float) priority \n{\n    [super setPriority:priority];\n}\n\n"
    },
    "setTaskDescription(java.lang.String)": {
      "reverse": "- (void) setTaskDescription:(NSString *) taskDescription\n{\n    [self setTaskDescription___java_lang_String:(taskDescription ? taskDescription : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTaskDescription___java_lang_String:(NSString*) taskDescription \n{\n    [super setTaskDescription:(taskDescription == JAVA_NULL ? nil : taskDescription)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "state()": {
      "reverse": "- (NSURLSessionTaskState) state\n{\n    return [self state__];\n}\n\n",
      "super": "- (int) state__\n{\n    return [super state];\n}\n\n"
    },
    "suspend()": {
      "reverse": "- (void) suspend\n{\n    [self suspend__];\n}\n\n",
      "super": "- (void) suspend__\n{\n    [super suspend];\n}\n\n"
    },
    "taskDescription()": {
      "reverse": "- (NSString *) taskDescription\n{\n    NSString * re$ult = [self taskDescription__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) taskDescription__\n{\n    NSString* re$ult = [super taskDescription];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "taskIdentifier()": {
      "reverse": "- (NSUInteger) taskIdentifier\n{\n    return [self taskIdentifier__];\n}\n\n",
      "super": "- (int) taskIdentifier__\n{\n    return [super taskIdentifier];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSURLSessionUploadTask": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "cancel()": null,
    "countOfBytesExpectedToReceive()": null,
    "countOfBytesExpectedToSend()": null,
    "countOfBytesReceived()": null,
    "countOfBytesSent()": null,
    "currentRequest()": null,
    "error()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "originalRequest()": null,
    "priority()": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "response()": null,
    "resume()": null,
    "setPriority(float)": null,
    "setTaskDescription(java.lang.String)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "state()": null,
    "suspend()": null,
    "taskDescription()": null,
    "taskIdentifier()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSUUID": {
    "UUIDString()": {
      "reverse": "- (NSString *) UUIDString\n{\n    NSString * re$ult = [self UUIDString__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) UUIDString__\n{\n    NSString* re$ult = [super UUIDString];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "getUUIDBytes(byte[])": {
      "reverse": "- (void) getUUIDBytes:(uuid_t) uuid\n{\n    [self getUUIDBytes___byte_ARRAYTYPE:uuid];\n}\n\n",
      "super": "- (void) getUUIDBytes___byte_ARRAYTYPE:(XMLVMArray*) uuid \n{\n    [super getUUIDBytes:(uuid == JAVA_NULL ? NULL : uuid->array.data)];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSUserDefaults": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "boolForKey(java.lang.String)": {
      "reverse": "- (BOOL) boolForKey:(NSString *) defaultName\n{\n    return [self boolForKey___java_lang_String:(defaultName ? defaultName : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) boolForKey___java_lang_String:(NSString*) defaultName \n{\n    return [super boolForKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "dataForKey(java.lang.String)": {
      "reverse": "- (NSData *) dataForKey:(NSString *) defaultName\n{\n    NSData * re$ult = [self dataForKey___java_lang_String:(defaultName ? defaultName : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSData*) dataForKey___java_lang_String:(NSString*) defaultName \n{\n    NSData* re$ult = [super dataForKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData",
        "java_lang_String"
      ]
    },
    "doubleForKey(java.lang.String)": {
      "reverse": "- (double) doubleForKey:(NSString *) defaultName\n{\n    return [self doubleForKey___java_lang_String:(defaultName ? defaultName : JAVA_NULL)];\n}\n\n",
      "super": "- (double) doubleForKey___java_lang_String:(NSString*) defaultName \n{\n    return [super doubleForKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "floatForKey(java.lang.String)": {
      "reverse": "- (float) floatForKey:(NSString *) defaultName\n{\n    return [self floatForKey___java_lang_String:(defaultName ? defaultName : JAVA_NULL)];\n}\n\n",
      "super": "- (float) floatForKey___java_lang_String:(NSString*) defaultName \n{\n    return [super floatForKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "integerForKey(java.lang.String)": {
      "reverse": "- (NSInteger) integerForKey:(NSString *) defaultName\n{\n    return [self integerForKey___java_lang_String:(defaultName ? defaultName : JAVA_NULL)];\n}\n\n",
      "super": "- (int) integerForKey___java_lang_String:(NSString*) defaultName \n{\n    return [super integerForKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "objectForKey(java.lang.String)": {
      "reverse": "- (id) objectForKey:(NSString *) defaultName\n{\n    id re$ult = [self objectForKey___java_lang_String:(defaultName ? defaultName : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) objectForKey___java_lang_String:(NSString*) defaultName \n{\n    id re$ult = [super objectForKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObjectForKey(java.lang.String)": {
      "reverse": "- (void) removeObjectForKey:(NSString *) defaultName\n{\n    [self removeObjectForKey___java_lang_String:(defaultName ? defaultName : JAVA_NULL)];\n}\n\n",
      "super": "- (void) removeObjectForKey___java_lang_String:(NSString*) defaultName \n{\n    [super removeObjectForKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setBool(boolean,java.lang.String)": {
      "reverse": "- (void) setBool:(BOOL) value forKey:(NSString *) defaultName\n{\n    [self setBool___boolean_java_lang_String:value :(defaultName ? defaultName : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setBool___boolean_java_lang_String:(BOOL) value :(NSString*) defaultName \n{\n    [super setBool:value forKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setDouble(double,java.lang.String)": {
      "reverse": "- (void) setDouble:(double) value forKey:(NSString *) defaultName\n{\n    [self setDouble___double_java_lang_String:value :(defaultName ? defaultName : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDouble___double_java_lang_String:(double) value :(NSString*) defaultName \n{\n    [super setDouble:value forKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setFloat(float,java.lang.String)": {
      "reverse": "- (void) setFloat:(float) value forKey:(NSString *) defaultName\n{\n    [self setFloat___float_java_lang_String:value :(defaultName ? defaultName : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setFloat___float_java_lang_String:(float) value :(NSString*) defaultName \n{\n    [super setFloat:value forKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setInteger(int,java.lang.String)": {
      "reverse": "- (void) setInteger:(NSInteger) value forKey:(NSString *) defaultName\n{\n    [self setInteger___int_java_lang_String:value :(defaultName ? defaultName : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setInteger___int_java_lang_String:(int) value :(NSString*) defaultName \n{\n    [super setInteger:value forKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setObject(java.lang.Object,java.lang.String)": {
      "reverse": "- (void) setObject:(id) value forKey:(NSString *) defaultName\n{\n    [self setObject___java_lang_Object_java_lang_String:(value ? value : JAVA_NULL) :(defaultName ? defaultName : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setObject___java_lang_Object_java_lang_String:(id) value :(NSString*) defaultName \n{\n    [super setObject:(value == JAVA_NULL ? nil : value) forKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "stringForKey(java.lang.String)": {
      "reverse": "- (NSString *) stringForKey:(NSString *) defaultName\n{\n    NSString * re$ult = [self stringForKey___java_lang_String:(defaultName ? defaultName : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) stringForKey___java_lang_String:(NSString*) defaultName \n{\n    NSString* re$ult = [super stringForKey:(defaultName == JAVA_NULL ? nil : defaultName)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "synchronize()": {
      "reverse": "- (BOOL) synchronize\n{\n    return [self synchronize__];\n}\n\n",
      "super": "- (BOOL) synchronize__\n{\n    return [super synchronize];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSXMLParser": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "parse()": {
      "reverse": "- (BOOL) parse\n{\n    return [self parse__];\n}\n\n",
      "super": "- (BOOL) parse__\n{\n    return [super parse];\n}\n\n"
    },
    "parserError()": {
      "reverse": "- (NSError *) parserError\n{\n    NSError * re$ult = [self parserError__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSError*) parserError__\n{\n    NSError* re$ult = [super parserError];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSError"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setDelegate(crossmobile.ios.foundation.NSXMLParserDelegate)": {
      "reverse": "- (void) setDelegate:(id<NSXMLParserDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_foundation_NSXMLParserDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_foundation_NSXMLParserDelegate:(id<NSXMLParserDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSXMLParserDelegate"
      ]
    },
    "setShouldProcessNamespaces(boolean)": {
      "reverse": "- (void) setShouldProcessNamespaces:(BOOL) shouldProcessNamespaces\n{\n    [self setShouldProcessNamespaces___boolean:shouldProcessNamespaces];\n}\n\n",
      "super": "- (void) setShouldProcessNamespaces___boolean:(BOOL) shouldProcessNamespaces \n{\n    [super setShouldProcessNamespaces:shouldProcessNamespaces];\n}\n\n"
    },
    "setShouldReportNamespacePrefixes(boolean)": {
      "reverse": "- (void) setShouldReportNamespacePrefixes:(BOOL) shouldReportNamespacePrefixes\n{\n    [self setShouldReportNamespacePrefixes___boolean:shouldReportNamespacePrefixes];\n}\n\n",
      "super": "- (void) setShouldReportNamespacePrefixes___boolean:(BOOL) shouldReportNamespacePrefixes \n{\n    [super setShouldReportNamespacePrefixes:shouldReportNamespacePrefixes];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "shouldProcessNamespaces()": {
      "reverse": "- (BOOL) shouldProcessNamespaces\n{\n    return [self shouldProcessNamespaces__];\n}\n\n",
      "super": "- (BOOL) shouldProcessNamespaces__\n{\n    return [super shouldProcessNamespaces];\n}\n\n"
    },
    "shouldReportNamespacePrefixes()": {
      "reverse": "- (BOOL) shouldReportNamespacePrefixes\n{\n    return [self shouldReportNamespacePrefixes__];\n}\n\n",
      "super": "- (BOOL) shouldReportNamespacePrefixes__\n{\n    return [super shouldReportNamespacePrefixes];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.foundation.NSXMLParserDelegate": {
    "didEndElement(crossmobile.ios.foundation.NSXMLParser,java.lang.String,java.lang.String,java.lang.String)": {
      "reverse": "- (void) parser:(NSXMLParser *) parser didEndElement:(NSString *) elementName namespaceURI:(NSString *) namespaceURI qualifiedName:(NSString *) qName\n{\n    [self didEndElement___crossmobile_ios_foundation_NSXMLParser_java_lang_String_java_lang_String_java_lang_String:(parser ? parser : JAVA_NULL) :(elementName ? elementName : JAVA_NULL) :(namespaceURI ? namespaceURI : JAVA_NULL) :(qName ? qName : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didEndElement___crossmobile_ios_foundation_NSXMLParser_java_lang_String_java_lang_String_java_lang_String:(NSXMLParser*) parser :(NSString*) elementName :(NSString*) namespaceURI :(NSString*) qName \n{\n    [super parser:(parser == JAVA_NULL ? nil : parser) didEndElement:(elementName == JAVA_NULL ? nil : elementName) namespaceURI:(namespaceURI == JAVA_NULL ? nil : namespaceURI) qualifiedName:(qName == JAVA_NULL ? nil : qName)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSXMLParser",
        "java_lang_String"
      ]
    },
    "didEndMappingPrefix(crossmobile.ios.foundation.NSXMLParser,java.lang.String)": {
      "reverse": "- (void) parser:(NSXMLParser *) parser didEndMappingPrefix:(NSString *) prefix\n{\n    [self didEndMappingPrefix___crossmobile_ios_foundation_NSXMLParser_java_lang_String:(parser ? parser : JAVA_NULL) :(prefix ? prefix : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didEndMappingPrefix___crossmobile_ios_foundation_NSXMLParser_java_lang_String:(NSXMLParser*) parser :(NSString*) prefix \n{\n    [super parser:(parser == JAVA_NULL ? nil : parser) didEndMappingPrefix:(prefix == JAVA_NULL ? nil : prefix)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSXMLParser",
        "java_lang_String"
      ]
    },
    "didStartElement(crossmobile.ios.foundation.NSXMLParser,java.lang.String,java.lang.String,java.lang.String,java.util.Map)": {
      "reverse": "- (void) parser:(NSXMLParser *) parser didStartElement:(NSString *) elementName namespaceURI:(NSString *) namespaceURI qualifiedName:(NSString *) qName attributes:(NSDictionary<NSString *,NSString *> *) attributeDict\n{\n    [self didStartElement___crossmobile_ios_foundation_NSXMLParser_java_lang_String_java_lang_String_java_lang_String_java_util_Map:(parser ? parser : JAVA_NULL) :(elementName ? elementName : JAVA_NULL) :(namespaceURI ? namespaceURI : JAVA_NULL) :(qName ? qName : JAVA_NULL) :(attributeDict ? attributeDict : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didStartElement___crossmobile_ios_foundation_NSXMLParser_java_lang_String_java_lang_String_java_lang_String_java_util_Map:(NSXMLParser*) parser :(NSString*) elementName :(NSString*) namespaceURI :(NSString*) qName :(NSDictionary*) attributeDict \n{\n    [super parser:(parser == JAVA_NULL ? nil : parser) didStartElement:(elementName == JAVA_NULL ? nil : elementName) namespaceURI:(namespaceURI == JAVA_NULL ? nil : namespaceURI) qualifiedName:(qName == JAVA_NULL ? nil : qName) attributes:(attributeDict == JAVA_NULL ? nil : attributeDict)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSXMLParser",
        "java_lang_String",
        "java_util_Map"
      ]
    },
    "didStartMappingPrefix(crossmobile.ios.foundation.NSXMLParser,java.lang.String,java.lang.String)": {
      "reverse": "- (void) parser:(NSXMLParser *) parser didStartMappingPrefix:(NSString *) prefix toURI:(NSString *) namespaceURI\n{\n    [self didStartMappingPrefix___crossmobile_ios_foundation_NSXMLParser_java_lang_String_java_lang_String:(parser ? parser : JAVA_NULL) :(prefix ? prefix : JAVA_NULL) :(namespaceURI ? namespaceURI : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didStartMappingPrefix___crossmobile_ios_foundation_NSXMLParser_java_lang_String_java_lang_String:(NSXMLParser*) parser :(NSString*) prefix :(NSString*) namespaceURI \n{\n    [super parser:(parser == JAVA_NULL ? nil : parser) didStartMappingPrefix:(prefix == JAVA_NULL ? nil : prefix) toURI:(namespaceURI == JAVA_NULL ? nil : namespaceURI)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSXMLParser",
        "java_lang_String"
      ]
    },
    "foundCDATA(crossmobile.ios.foundation.NSXMLParser,crossmobile.ios.foundation.NSData)": {
      "reverse": "- (void) parser:(NSXMLParser *) parser foundCDATA:(NSData *) CDATABlock\n{\n    [self foundCDATA___crossmobile_ios_foundation_NSXMLParser_crossmobile_ios_foundation_NSData:(parser ? parser : JAVA_NULL) :(CDATABlock ? CDATABlock : JAVA_NULL)];\n}\n\n",
      "super": "- (void) foundCDATA___crossmobile_ios_foundation_NSXMLParser_crossmobile_ios_foundation_NSData:(NSXMLParser*) parser :(NSData*) CDATABlock \n{\n    [super parser:(parser == JAVA_NULL ? nil : parser) foundCDATA:(CDATABlock == JAVA_NULL ? nil : CDATABlock)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData",
        "crossmobile_ios_foundation_NSXMLParser"
      ]
    },
    "foundCharacters(crossmobile.ios.foundation.NSXMLParser,java.lang.String)": {
      "reverse": "- (void) parser:(NSXMLParser *) parser foundCharacters:(NSString *) string\n{\n    [self foundCharacters___crossmobile_ios_foundation_NSXMLParser_java_lang_String:(parser ? parser : JAVA_NULL) :(string ? string : JAVA_NULL)];\n}\n\n",
      "super": "- (void) foundCharacters___crossmobile_ios_foundation_NSXMLParser_java_lang_String:(NSXMLParser*) parser :(NSString*) string \n{\n    [super parser:(parser == JAVA_NULL ? nil : parser) foundCharacters:(string == JAVA_NULL ? nil : string)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSXMLParser",
        "java_lang_String"
      ]
    }
  },
  "crossmobile.ios.quartzcore.CAAction": {
    "runActionForKey(java.lang.String,crossmobile.ios.foundation.NSObject,java.util.Map)": {
      "reverse": "- (void) runActionForKey:(NSString *) event object:(id) anObject arguments:(NSDictionary *) dict\n{\n    [self runActionForKey___java_lang_String_crossmobile_ios_foundation_NSObject_java_util_Map:(event ? event : JAVA_NULL) :(anObject ? anObject : JAVA_NULL) :(dict ? dict : JAVA_NULL)];\n}\n\n",
      "super": "- (void) runActionForKey___java_lang_String_crossmobile_ios_foundation_NSObject_java_util_Map:(NSString*) event :(NSObject*) anObject :(NSDictionary*) dict \n{\n    [super runActionForKey:(event == JAVA_NULL ? nil : event) object:(anObject == JAVA_NULL ? nil : anObject) arguments:(dict == JAVA_NULL ? nil : dict)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String",
        "java_util_Map"
      ]
    }
  },
  "crossmobile.ios.quartzcore.CAAnimation": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "animationDidStart(crossmobile.ios.quartzcore.CAAnimation)": {
      "reverse": "- (void) animationDidStart:(CAAnimation *) anim\n{\n    [self animationDidStart___crossmobile_ios_quartzcore_CAAnimation:(anim ? anim : JAVA_NULL)];\n}\n\n",
      "super": "- (void) animationDidStart___crossmobile_ios_quartzcore_CAAnimation:(CAAnimation*) anim \n{\n    [super animationDidStart:(anim == JAVA_NULL ? nil : anim)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_quartzcore_CAAnimation"
      ]
    },
    "animationDidStop(crossmobile.ios.quartzcore.CAAnimation,boolean)": {
      "reverse": "- (void) animationDidStop:(CAAnimation *) theAnimation finished:(BOOL) flag\n{\n    [self animationDidStop___crossmobile_ios_quartzcore_CAAnimation_boolean:(theAnimation ? theAnimation : JAVA_NULL) :flag];\n}\n\n",
      "super": "- (void) animationDidStop___crossmobile_ios_quartzcore_CAAnimation_boolean:(CAAnimation*) theAnimation :(BOOL) flag \n{\n    [super animationDidStop:(theAnimation == JAVA_NULL ? nil : theAnimation) finished:flag];\n}\n\n",
      "supimport": [
        "crossmobile_ios_quartzcore_CAAnimation"
      ]
    },
    "autoreverses()": {
      "reverse": "- (BOOL) autoreverses\n{\n    return [self autoreverses__];\n}\n\n",
      "super": "- (BOOL) autoreverses__\n{\n    return [super autoreverses];\n}\n\n"
    },
    "beginTime()": {
      "reverse": "- (CFTimeInterval) beginTime\n{\n    return [self beginTime__];\n}\n\n",
      "super": "- (double) beginTime__\n{\n    return [super beginTime];\n}\n\n"
    },
    "delegate()": {
      "reverse": "- (id) delegate\n{\n    id re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) delegate__\n{\n    id re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "duration()": {
      "reverse": "- (CFTimeInterval) duration\n{\n    return [self duration__];\n}\n\n",
      "super": "- (double) duration__\n{\n    return [super duration];\n}\n\n"
    },
    "fillMode()": {
      "reverse": "- (NSString *) fillMode\n{\n    NSString * re$ult = [self fillMode__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) fillMode__\n{\n    NSString* re$ult = [super fillMode];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "isRemovedOnCompletion()": {
      "reverse": "- (BOOL) isRemovedOnCompletion\n{\n    return [self isRemovedOnCompletion__];\n}\n\n",
      "super": "- (BOOL) isRemovedOnCompletion__\n{\n    return [super isRemovedOnCompletion];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "repeatCount()": {
      "reverse": "- (float) repeatCount\n{\n    return [self repeatCount__];\n}\n\n",
      "super": "- (float) repeatCount__\n{\n    return [super repeatCount];\n}\n\n"
    },
    "repeatDuration()": {
      "reverse": "- (CFTimeInterval) repeatDuration\n{\n    return [self repeatDuration__];\n}\n\n",
      "super": "- (double) repeatDuration__\n{\n    return [super repeatDuration];\n}\n\n"
    },
    "runActionForKey(java.lang.String,crossmobile.ios.foundation.NSObject,java.util.Map)": {
      "reverse": "- (void) runActionForKey:(NSString *) event object:(id) anObject arguments:(NSDictionary *) dict\n{\n    [self runActionForKey___java_lang_String_crossmobile_ios_foundation_NSObject_java_util_Map:(event ? event : JAVA_NULL) :(anObject ? anObject : JAVA_NULL) :(dict ? dict : JAVA_NULL)];\n}\n\n",
      "super": "- (void) runActionForKey___java_lang_String_crossmobile_ios_foundation_NSObject_java_util_Map:(NSString*) event :(NSObject*) anObject :(NSDictionary*) dict \n{\n    [super runActionForKey:(event == JAVA_NULL ? nil : event) object:(anObject == JAVA_NULL ? nil : anObject) arguments:(dict == JAVA_NULL ? nil : dict)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String",
        "java_util_Map"
      ]
    },
    "setAutoreverses(boolean)": {
      "reverse": "- (void) setAutoreverses:(BOOL) autoreverses\n{\n    [self setAutoreverses___boolean:autoreverses];\n}\n\n",
      "super": "- (void) setAutoreverses___boolean:(BOOL) autoreverses \n{\n    [super setAutoreverses:autoreverses];\n}\n\n"
    },
    "setBeginTime(double)": {
      "reverse": "- (void) setBeginTime:(CFTimeInterval) beginTime\n{\n    [self setBeginTime___double:beginTime];\n}\n\n",
      "super": "- (void) setBeginTime___double:(double) beginTime \n{\n    [super setBeginTime:beginTime];\n}\n\n"
    },
    "setDelegate(crossmobile.ios.foundation.NSObject)": {
      "reverse": "- (void) setDelegate:(id) delegate\n{\n    [self setDelegate___crossmobile_ios_foundation_NSObject:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_foundation_NSObject:(NSObject*) delegate \n{\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "setDuration(double)": {
      "reverse": "- (void) setDuration:(CFTimeInterval) duration\n{\n    [self setDuration___double:duration];\n}\n\n",
      "super": "- (void) setDuration___double:(double) duration \n{\n    [super setDuration:duration];\n}\n\n"
    },
    "setFillMode(java.lang.String)": {
      "reverse": "- (void) setFillMode:(NSString *) fillMode\n{\n    [self setFillMode___java_lang_String:(fillMode ? fillMode : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setFillMode___java_lang_String:(NSString*) fillMode \n{\n    [super setFillMode:(fillMode == JAVA_NULL ? nil : fillMode)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setRemovedOnCompletion(boolean)": {
      "reverse": "- (void) setRemovedOnCompletion:(BOOL) removedOnCompletion\n{\n    [self setRemovedOnCompletion___boolean:removedOnCompletion];\n}\n\n",
      "super": "- (void) setRemovedOnCompletion___boolean:(BOOL) removedOnCompletion \n{\n    [super setRemovedOnCompletion:removedOnCompletion];\n}\n\n"
    },
    "setRepeatCount(float)": {
      "reverse": "- (void) setRepeatCount:(float) repeatCount\n{\n    [self setRepeatCount___float:repeatCount];\n}\n\n",
      "super": "- (void) setRepeatCount___float:(float) repeatCount \n{\n    [super setRepeatCount:repeatCount];\n}\n\n"
    },
    "setRepeatDuration(double)": {
      "reverse": "- (void) setRepeatDuration:(CFTimeInterval) repeatDuration\n{\n    [self setRepeatDuration___double:repeatDuration];\n}\n\n",
      "super": "- (void) setRepeatDuration___double:(double) repeatDuration \n{\n    [super setRepeatDuration:repeatDuration];\n}\n\n"
    },
    "setSpeed(float)": {
      "reverse": "- (void) setSpeed:(float) speed\n{\n    [self setSpeed___float:speed];\n}\n\n",
      "super": "- (void) setSpeed___float:(float) speed \n{\n    [super setSpeed:speed];\n}\n\n"
    },
    "setTimeOffset(double)": {
      "reverse": "- (void) setTimeOffset:(CFTimeInterval) timeOffset\n{\n    [self setTimeOffset___double:timeOffset];\n}\n\n",
      "super": "- (void) setTimeOffset___double:(double) timeOffset \n{\n    [super setTimeOffset:timeOffset];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "speed()": {
      "reverse": "- (float) speed\n{\n    return [self speed__];\n}\n\n",
      "super": "- (float) speed__\n{\n    return [super speed];\n}\n\n"
    },
    "timeOffset()": {
      "reverse": "- (CFTimeInterval) timeOffset\n{\n    return [self timeOffset__];\n}\n\n",
      "super": "- (double) timeOffset__\n{\n    return [super timeOffset];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.quartzcore.CALayer": {
    "addAnimation(crossmobile.ios.quartzcore.CAAnimation,java.lang.String)": {
      "reverse": "- (void) addAnimation:(CAAnimation *) anim forKey:(NSString *) key\n{\n    [self addAnimation___crossmobile_ios_quartzcore_CAAnimation_java_lang_String:(anim ? anim : JAVA_NULL) :(key ? key : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addAnimation___crossmobile_ios_quartzcore_CAAnimation_java_lang_String:(CAAnimation*) anim :(NSString*) key \n{\n    [super addAnimation:(anim == JAVA_NULL ? nil : anim) forKey:(key == JAVA_NULL ? nil : key)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_quartzcore_CAAnimation",
        "java_lang_String"
      ]
    },
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "anchorPoint()": {
      "reverse": "- (CGPoint) anchorPoint\n{\n    crossmobile_ios_coregraphics_CGPoint* re$ult = [self anchorPoint__];\n    CGPoint re$ult$conv = [re$ult getCGPoint];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPoint*) anchorPoint__\n{\n    return [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:[super anchorPoint]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint"
      ]
    },
    "animationForKey(java.lang.String)": {
      "reverse": "- (CAAnimation *) animationForKey:(NSString *) key\n{\n    CAAnimation * re$ult = [self animationForKey___java_lang_String:(key ? key : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (CAAnimation*) animationForKey___java_lang_String:(NSString*) key \n{\n    CAAnimation* re$ult = [super animationForKey:(key == JAVA_NULL ? nil : key)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_quartzcore_CAAnimation",
        "java_lang_String"
      ]
    },
    "animationKeys()": {
      "reverse": "- (NSArray<NSString *> *) animationKeys\n{\n    NSArray<NSString *> * re$ult = [self animationKeys__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) animationKeys__\n{\n    NSArray* re$ult = [super animationKeys];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "delegate()": {
      "reverse": "- (id) delegate\n{\n    id re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) delegate__\n{\n    id re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "mask()": {
      "reverse": "- (CALayer *) mask\n{\n    CALayer * re$ult = [self mask__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (CALayer*) mask__\n{\n    CALayer* re$ult = [super mask];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_quartzcore_CALayer"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeAllAnimations()": {
      "reverse": "- (void) removeAllAnimations\n{\n    [self removeAllAnimations__];\n}\n\n",
      "super": "- (void) removeAllAnimations__\n{\n    [super removeAllAnimations];\n}\n\n"
    },
    "removeAnimationForKey(java.lang.String)": {
      "reverse": "- (void) removeAnimationForKey:(NSString *) key\n{\n    [self removeAnimationForKey___java_lang_String:(key ? key : JAVA_NULL)];\n}\n\n",
      "super": "- (void) removeAnimationForKey___java_lang_String:(NSString*) key \n{\n    [super removeAnimationForKey:(key == JAVA_NULL ? nil : key)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "renderInContext(crossmobile.ios.coregraphics.CGContext)": {
      "reverse": "- (void) renderInContext:(CGContextRef) ctx\n{\n    crossmobile_ios_coregraphics_CGContext* ctx$conv = [[crossmobile_ios_coregraphics_CGContext alloc] initWithCGContext:ctx];\n    [self renderInContext___crossmobile_ios_coregraphics_CGContext:ctx$conv];\n    [ctx$conv release];\n}\n\n",
      "super": "- (void) renderInContext___crossmobile_ios_coregraphics_CGContext:(crossmobile_ios_coregraphics_CGContext*) ctx \n{\n    [super renderInContext:ctx->$reference];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGContext"
      ]
    },
    "setAnchorPoint(crossmobile.ios.coregraphics.CGPoint)": {
      "reverse": "- (void) setAnchorPoint:(CGPoint) anchorPoint\n{\n    crossmobile_ios_coregraphics_CGPoint* anchorPoint$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:anchorPoint];\n    [self setAnchorPoint___crossmobile_ios_coregraphics_CGPoint:anchorPoint$conv];\n    [anchorPoint$conv release];\n}\n\n",
      "super": "- (void) setAnchorPoint___crossmobile_ios_coregraphics_CGPoint:(crossmobile_ios_coregraphics_CGPoint*) anchorPoint \n{\n    [super setAnchorPoint:[anchorPoint getCGPoint]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint"
      ]
    },
    "setDelegate(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) setDelegate:(id) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UIView:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UIView:(UIView*) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "setMask(crossmobile.ios.quartzcore.CALayer)": {
      "reverse": "- (void) setMask:(CALayer *) mask\n{\n    [self setMask___crossmobile_ios_quartzcore_CALayer:(mask ? mask : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setMask___crossmobile_ios_quartzcore_CALayer:(CALayer*) mask \n{\n    [super setMask:(mask == JAVA_NULL ? nil : mask)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_quartzcore_CALayer"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "style()": {
      "reverse": "- (NSDictionary *) style\n{\n    NSDictionary * re$ult = [self style__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDictionary*) style__\n{\n    NSDictionary* re$ult = [super style];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Map"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.quartzcore.CAMediaTiming": {
    "autoreverses()": {
      "reverse": "- (BOOL) autoreverses\n{\n    return [self autoreverses__];\n}\n\n",
      "super": "- (BOOL) autoreverses__\n{\n    return [super autoreverses];\n}\n\n"
    },
    "beginTime()": {
      "reverse": "- (CFTimeInterval) beginTime\n{\n    return [self beginTime__];\n}\n\n",
      "super": "- (double) beginTime__\n{\n    return [super beginTime];\n}\n\n"
    },
    "duration()": {
      "reverse": "- (CFTimeInterval) duration\n{\n    return [self duration__];\n}\n\n",
      "super": "- (double) duration__\n{\n    return [super duration];\n}\n\n"
    },
    "fillMode()": {
      "reverse": "- (NSString *) fillMode\n{\n    NSString * re$ult = [self fillMode__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) fillMode__\n{\n    NSString* re$ult = [super fillMode];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "repeatCount()": {
      "reverse": "- (float) repeatCount\n{\n    return [self repeatCount__];\n}\n\n",
      "super": "- (float) repeatCount__\n{\n    return [super repeatCount];\n}\n\n"
    },
    "repeatDuration()": {
      "reverse": "- (CFTimeInterval) repeatDuration\n{\n    return [self repeatDuration__];\n}\n\n",
      "super": "- (double) repeatDuration__\n{\n    return [super repeatDuration];\n}\n\n"
    },
    "setAutoreverses(boolean)": {
      "reverse": "- (void) setAutoreverses:(BOOL) autoreverses\n{\n    [self setAutoreverses___boolean:autoreverses];\n}\n\n",
      "super": "- (void) setAutoreverses___boolean:(BOOL) autoreverses \n{\n    [super setAutoreverses:autoreverses];\n}\n\n"
    },
    "setBeginTime(double)": {
      "reverse": "- (void) setBeginTime:(CFTimeInterval) beginTime\n{\n    [self setBeginTime___double:beginTime];\n}\n\n",
      "super": "- (void) setBeginTime___double:(double) beginTime \n{\n    [super setBeginTime:beginTime];\n}\n\n"
    },
    "setDuration(double)": {
      "reverse": "- (void) setDuration:(CFTimeInterval) duration\n{\n    [self setDuration___double:duration];\n}\n\n",
      "super": "- (void) setDuration___double:(double) duration \n{\n    [super setDuration:duration];\n}\n\n"
    },
    "setFillMode(java.lang.String)": {
      "reverse": "- (void) setFillMode:(NSString *) fillMode\n{\n    [self setFillMode___java_lang_String:(fillMode ? fillMode : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setFillMode___java_lang_String:(NSString*) fillMode \n{\n    [super setFillMode:(fillMode == JAVA_NULL ? nil : fillMode)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setRepeatCount(float)": {
      "reverse": "- (void) setRepeatCount:(float) repeatCount\n{\n    [self setRepeatCount___float:repeatCount];\n}\n\n",
      "super": "- (void) setRepeatCount___float:(float) repeatCount \n{\n    [super setRepeatCount:repeatCount];\n}\n\n"
    },
    "setRepeatDuration(double)": {
      "reverse": "- (void) setRepeatDuration:(CFTimeInterval) repeatDuration\n{\n    [self setRepeatDuration___double:repeatDuration];\n}\n\n",
      "super": "- (void) setRepeatDuration___double:(double) repeatDuration \n{\n    [super setRepeatDuration:repeatDuration];\n}\n\n"
    },
    "setSpeed(float)": {
      "reverse": "- (void) setSpeed:(float) speed\n{\n    [self setSpeed___float:speed];\n}\n\n",
      "super": "- (void) setSpeed___float:(float) speed \n{\n    [super setSpeed:speed];\n}\n\n"
    },
    "setTimeOffset(double)": {
      "reverse": "- (void) setTimeOffset:(CFTimeInterval) timeOffset\n{\n    [self setTimeOffset___double:timeOffset];\n}\n\n",
      "super": "- (void) setTimeOffset___double:(double) timeOffset \n{\n    [super setTimeOffset:timeOffset];\n}\n\n"
    },
    "speed()": {
      "reverse": "- (float) speed\n{\n    return [self speed__];\n}\n\n",
      "super": "- (float) speed__\n{\n    return [super speed];\n}\n\n"
    },
    "timeOffset()": {
      "reverse": "- (CFTimeInterval) timeOffset\n{\n    return [self timeOffset__];\n}\n\n",
      "super": "- (double) timeOffset__\n{\n    return [super timeOffset];\n}\n\n"
    }
  },
  "crossmobile.ios.quartzcore.CAShapeLayer": {
    "addAnimation(crossmobile.ios.quartzcore.CAAnimation,java.lang.String)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "anchorPoint()": null,
    "animationForKey(java.lang.String)": null,
    "animationKeys()": null,
    "delegate()": null,
    "mask()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "path()": {
      "reverse": "- (CGPathRef) path\n{\n    crossmobile_ios_coregraphics_CGPath* re$ult = [self path__];\n    [re$ult autorelease];\n    return re$ult->$reference;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPath*) path__\n{\n    return [[crossmobile_ios_coregraphics_CGPath alloc] initWithCGPath:[super path]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPath"
      ]
    },
    "removeAllAnimations()": null,
    "removeAnimationForKey(java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "renderInContext(crossmobile.ios.coregraphics.CGContext)": null,
    "setAnchorPoint(crossmobile.ios.coregraphics.CGPoint)": null,
    "setDelegate(crossmobile.ios.uikit.UIView)": null,
    "setMask(crossmobile.ios.quartzcore.CALayer)": null,
    "setPath(crossmobile.ios.coregraphics.CGPath)": {
      "reverse": "- (void) setPath:(CGPathRef) path\n{\n    crossmobile_ios_coregraphics_CGPath* path$conv = [[crossmobile_ios_coregraphics_CGPath alloc] initWithCGPath:path];\n    [self setPath___crossmobile_ios_coregraphics_CGPath:path$conv];\n    [path$conv release];\n}\n\n",
      "super": "- (void) setPath___crossmobile_ios_coregraphics_CGPath:(crossmobile_ios_coregraphics_CGPath*) path \n{\n    [super setPath:path->$reference];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPath"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "style()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.quartzcore.CATransition": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "animationDidStart(crossmobile.ios.quartzcore.CAAnimation)": null,
    "animationDidStop(crossmobile.ios.quartzcore.CAAnimation,boolean)": null,
    "delegate()": null,
    "endProgress()": {
      "reverse": "- (float) endProgress\n{\n    return [self endProgress__];\n}\n\n",
      "super": "- (float) endProgress__\n{\n    return [super endProgress];\n}\n\n"
    },
    "isRemovedOnCompletion()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setDelegate(crossmobile.ios.foundation.NSObject)": null,
    "setEndProgress(float)": {
      "reverse": "- (void) setEndProgress:(float) endProgress\n{\n    [self setEndProgress___float:endProgress];\n}\n\n",
      "super": "- (void) setEndProgress___float:(float) endProgress \n{\n    [super setEndProgress:endProgress];\n}\n\n"
    },
    "setRemovedOnCompletion(boolean)": null,
    "setStartProgress(float)": {
      "reverse": "- (void) setStartProgress:(float) startProgress\n{\n    [self setStartProgress___float:startProgress];\n}\n\n",
      "super": "- (void) setStartProgress___float:(float) startProgress \n{\n    [super setStartProgress:startProgress];\n}\n\n"
    },
    "setSubtype(java.lang.String)": {
      "reverse": "- (void) setSubtype:(NSString *) subtype\n{\n    [self setSubtype___java_lang_String:(subtype ? subtype : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setSubtype___java_lang_String:(NSString*) subtype \n{\n    [super setSubtype:(subtype == JAVA_NULL ? nil : subtype)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setType(java.lang.String)": {
      "reverse": "- (void) setType:(NSString *) type\n{\n    [self setType___java_lang_String:(type ? type : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setType___java_lang_String:(NSString*) type \n{\n    [super setType:(type == JAVA_NULL ? nil : type)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "startProgress()": {
      "reverse": "- (float) startProgress\n{\n    return [self startProgress__];\n}\n\n",
      "super": "- (float) startProgress__\n{\n    return [super startProgress];\n}\n\n"
    },
    "subtype()": {
      "reverse": "- (NSString *) subtype\n{\n    NSString * re$ult = [self subtype__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) subtype__\n{\n    NSString* re$ult = [super subtype];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "type()": {
      "reverse": "- (NSString *) type\n{\n    NSString * re$ult = [self type__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) type__\n{\n    NSString* re$ult = [super type];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.NSLayoutAnchor": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "constraintEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor)": {
      "reverse": "- (NSLayoutConstraint *) constraintEqualToAnchor:(NSLayoutAnchor *) anchor\n{\n    NSLayoutConstraint * re$ult = [self constraintEqualToAnchor___crossmobile_ios_uikit_NSLayoutAnchor:(anchor ? anchor : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintEqualToAnchor___crossmobile_ios_uikit_NSLayoutAnchor:(NSLayoutAnchor*) anchor \n{\n    NSLayoutConstraint* re$ult = [super constraintEqualToAnchor:(anchor == JAVA_NULL ? nil : anchor)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutAnchor",
        "crossmobile_ios_uikit_NSLayoutConstraint"
      ]
    },
    "constraintEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor,double)": {
      "reverse": "- (NSLayoutConstraint *) constraintEqualToAnchor:(NSLayoutAnchor *) anchor constant:(CGFloat) c\n{\n    NSLayoutConstraint * re$ult = [self constraintEqualToAnchor___crossmobile_ios_uikit_NSLayoutAnchor_double:(anchor ? anchor : JAVA_NULL) :c];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintEqualToAnchor___crossmobile_ios_uikit_NSLayoutAnchor_double:(NSLayoutAnchor*) anchor :(double) c \n{\n    NSLayoutConstraint* re$ult = [super constraintEqualToAnchor:(anchor == JAVA_NULL ? nil : anchor) constant:c];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutAnchor",
        "crossmobile_ios_uikit_NSLayoutConstraint"
      ]
    },
    "constraintGreaterThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor)": {
      "reverse": "- (NSLayoutConstraint *) constraintGreaterThanOrEqualToAnchor:(NSLayoutAnchor *) anchor\n{\n    NSLayoutConstraint * re$ult = [self constraintGreaterThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutAnchor:(anchor ? anchor : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintGreaterThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutAnchor:(NSLayoutAnchor*) anchor \n{\n    NSLayoutConstraint* re$ult = [super constraintGreaterThanOrEqualToAnchor:(anchor == JAVA_NULL ? nil : anchor)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutAnchor",
        "crossmobile_ios_uikit_NSLayoutConstraint"
      ]
    },
    "constraintGreaterThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor,double)": {
      "reverse": "- (NSLayoutConstraint *) constraintGreaterThanOrEqualToAnchor:(NSLayoutAnchor *) anchor constant:(CGFloat) c\n{\n    NSLayoutConstraint * re$ult = [self constraintGreaterThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutAnchor_double:(anchor ? anchor : JAVA_NULL) :c];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintGreaterThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutAnchor_double:(NSLayoutAnchor*) anchor :(double) c \n{\n    NSLayoutConstraint* re$ult = [super constraintGreaterThanOrEqualToAnchor:(anchor == JAVA_NULL ? nil : anchor) constant:c];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutAnchor",
        "crossmobile_ios_uikit_NSLayoutConstraint"
      ]
    },
    "constraintLessThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor)": {
      "reverse": "- (NSLayoutConstraint *) constraintLessThanOrEqualToAnchor:(NSLayoutAnchor *) anchor\n{\n    NSLayoutConstraint * re$ult = [self constraintLessThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutAnchor:(anchor ? anchor : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintLessThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutAnchor:(NSLayoutAnchor*) anchor \n{\n    NSLayoutConstraint* re$ult = [super constraintLessThanOrEqualToAnchor:(anchor == JAVA_NULL ? nil : anchor)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutAnchor",
        "crossmobile_ios_uikit_NSLayoutConstraint"
      ]
    },
    "constraintLessThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor,double)": {
      "reverse": "- (NSLayoutConstraint *) constraintLessThanOrEqualToAnchor:(NSLayoutAnchor *) anchor constant:(CGFloat) c\n{\n    NSLayoutConstraint * re$ult = [self constraintLessThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutAnchor_double:(anchor ? anchor : JAVA_NULL) :c];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintLessThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutAnchor_double:(NSLayoutAnchor*) anchor :(double) c \n{\n    NSLayoutConstraint* re$ult = [super constraintLessThanOrEqualToAnchor:(anchor == JAVA_NULL ? nil : anchor) constant:c];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutAnchor",
        "crossmobile_ios_uikit_NSLayoutConstraint"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.NSLayoutConstraint": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "constant()": {
      "reverse": "- (CGFloat) constant\n{\n    return [self constant__];\n}\n\n",
      "super": "- (double) constant__\n{\n    return [super constant];\n}\n\n"
    },
    "firstAttribute()": {
      "reverse": "- (NSLayoutAttribute) firstAttribute\n{\n    return [self firstAttribute__];\n}\n\n",
      "super": "- (int) firstAttribute__\n{\n    return [super firstAttribute];\n}\n\n"
    },
    "firstItem()": {
      "reverse": "- (id) firstItem\n{\n    id re$ult = [self firstItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) firstItem__\n{\n    id re$ult = [super firstItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "identifier()": {
      "reverse": "- (NSString *) identifier\n{\n    NSString * re$ult = [self identifier__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) identifier__\n{\n    NSString* re$ult = [super identifier];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "isActive()": {
      "reverse": "- (BOOL) isActive\n{\n    return [self isActive__];\n}\n\n",
      "super": "- (BOOL) isActive__\n{\n    return [super isActive];\n}\n\n"
    },
    "multiplier()": {
      "reverse": "- (CGFloat) multiplier\n{\n    return [self multiplier__];\n}\n\n",
      "super": "- (double) multiplier__\n{\n    return [super multiplier];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "priority()": {
      "reverse": "- (UILayoutPriority) priority\n{\n    return [self priority__];\n}\n\n",
      "super": "- (float) priority__\n{\n    return [super priority];\n}\n\n"
    },
    "relation()": {
      "reverse": "- (NSLayoutRelation) relation\n{\n    return [self relation__];\n}\n\n",
      "super": "- (int) relation__\n{\n    return [super relation];\n}\n\n"
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "secondAttribute()": {
      "reverse": "- (NSLayoutAttribute) secondAttribute\n{\n    return [self secondAttribute__];\n}\n\n",
      "super": "- (int) secondAttribute__\n{\n    return [super secondAttribute];\n}\n\n"
    },
    "secondItem()": {
      "reverse": "- (id) secondItem\n{\n    id re$ult = [self secondItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) secondItem__\n{\n    id re$ult = [super secondItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "setActive(boolean)": {
      "reverse": "- (void) setActive:(BOOL) active\n{\n    [self setActive___boolean:active];\n}\n\n",
      "super": "- (void) setActive___boolean:(BOOL) active \n{\n    [super setActive:active];\n}\n\n"
    },
    "setConstant(double)": {
      "reverse": "- (void) setConstant:(CGFloat) constant\n{\n    [self setConstant___double:constant];\n}\n\n",
      "super": "- (void) setConstant___double:(double) constant \n{\n    [super setConstant:constant];\n}\n\n"
    },
    "setIdentifier(java.lang.String)": {
      "reverse": "- (void) setIdentifier:(NSString *) identifier\n{\n    [self setIdentifier___java_lang_String:(identifier ? identifier : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setIdentifier___java_lang_String:(NSString*) identifier \n{\n    [super setIdentifier:(identifier == JAVA_NULL ? nil : identifier)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setPriority(float)": {
      "reverse": "- (void) setPriority:(UILayoutPriority) priority\n{\n    [self setPriority___float:priority];\n}\n\n",
      "super": "- (void) setPriority___float:(float) priority \n{\n    [super setPriority:priority];\n}\n\n"
    },
    "setShouldBeArchived(boolean)": {
      "reverse": "- (void) setShouldBeArchived:(BOOL) shouldBeArchived\n{\n    [self setShouldBeArchived___boolean:shouldBeArchived];\n}\n\n",
      "super": "- (void) setShouldBeArchived___boolean:(BOOL) shouldBeArchived \n{\n    [super setShouldBeArchived:shouldBeArchived];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "shouldBeArchived()": {
      "reverse": "- (BOOL) shouldBeArchived\n{\n    return [self shouldBeArchived__];\n}\n\n",
      "super": "- (BOOL) shouldBeArchived__\n{\n    return [super shouldBeArchived];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.NSLayoutDimension": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "constraintEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor)": null,
    "constraintEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor,double)": null,
    "constraintEqualToAnchor(crossmobile.ios.uikit.NSLayoutDimension,double)": {
      "reverse": "- (NSLayoutConstraint *) constraintEqualToAnchor:(NSLayoutDimension *) anchor multiplier:(CGFloat) m\n{\n    NSLayoutConstraint * re$ult = [self constraintEqualToAnchor___crossmobile_ios_uikit_NSLayoutDimension_double:(anchor ? anchor : JAVA_NULL) :m];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintEqualToAnchor___crossmobile_ios_uikit_NSLayoutDimension_double:(NSLayoutDimension*) anchor :(double) m \n{\n    NSLayoutConstraint* re$ult = [super constraintEqualToAnchor:(anchor == JAVA_NULL ? nil : anchor) multiplier:m];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutConstraint",
        "crossmobile_ios_uikit_NSLayoutDimension"
      ]
    },
    "constraintEqualToAnchor(crossmobile.ios.uikit.NSLayoutDimension,double,double)": {
      "reverse": "- (NSLayoutConstraint *) constraintEqualToAnchor:(NSLayoutDimension *) anchor multiplier:(CGFloat) m constant:(CGFloat) c\n{\n    NSLayoutConstraint * re$ult = [self constraintEqualToAnchor___crossmobile_ios_uikit_NSLayoutDimension_double_double:(anchor ? anchor : JAVA_NULL) :m :c];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintEqualToAnchor___crossmobile_ios_uikit_NSLayoutDimension_double_double:(NSLayoutDimension*) anchor :(double) m :(double) c \n{\n    NSLayoutConstraint* re$ult = [super constraintEqualToAnchor:(anchor == JAVA_NULL ? nil : anchor) multiplier:m constant:c];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutConstraint",
        "crossmobile_ios_uikit_NSLayoutDimension"
      ]
    },
    "constraintEqualToConstant(double)": {
      "reverse": "- (NSLayoutConstraint *) constraintEqualToConstant:(CGFloat) c\n{\n    NSLayoutConstraint * re$ult = [self constraintEqualToConstant___double:c];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintEqualToConstant___double:(double) c \n{\n    NSLayoutConstraint* re$ult = [super constraintEqualToConstant:c];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutConstraint"
      ]
    },
    "constraintGreaterThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor)": null,
    "constraintGreaterThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor,double)": null,
    "constraintGreaterThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutDimension,double)": {
      "reverse": "- (NSLayoutConstraint *) constraintGreaterThanOrEqualToAnchor:(NSLayoutDimension *) anchor multiplier:(CGFloat) m\n{\n    NSLayoutConstraint * re$ult = [self constraintGreaterThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutDimension_double:(anchor ? anchor : JAVA_NULL) :m];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintGreaterThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutDimension_double:(NSLayoutDimension*) anchor :(double) m \n{\n    NSLayoutConstraint* re$ult = [super constraintGreaterThanOrEqualToAnchor:(anchor == JAVA_NULL ? nil : anchor) multiplier:m];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutConstraint",
        "crossmobile_ios_uikit_NSLayoutDimension"
      ]
    },
    "constraintGreaterThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutDimension,double,double)": {
      "reverse": "- (NSLayoutConstraint *) constraintGreaterThanOrEqualToAnchor:(NSLayoutDimension *) anchor multiplier:(CGFloat) m constant:(CGFloat) c\n{\n    NSLayoutConstraint * re$ult = [self constraintGreaterThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutDimension_double_double:(anchor ? anchor : JAVA_NULL) :m :c];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintGreaterThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutDimension_double_double:(NSLayoutDimension*) anchor :(double) m :(double) c \n{\n    NSLayoutConstraint* re$ult = [super constraintGreaterThanOrEqualToAnchor:(anchor == JAVA_NULL ? nil : anchor) multiplier:m constant:c];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutConstraint",
        "crossmobile_ios_uikit_NSLayoutDimension"
      ]
    },
    "constraintGreaterThanOrEqualToConstant(double)": {
      "reverse": "- (NSLayoutConstraint *) constraintGreaterThanOrEqualToConstant:(CGFloat) c\n{\n    NSLayoutConstraint * re$ult = [self constraintGreaterThanOrEqualToConstant___double:c];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintGreaterThanOrEqualToConstant___double:(double) c \n{\n    NSLayoutConstraint* re$ult = [super constraintGreaterThanOrEqualToConstant:c];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutConstraint"
      ]
    },
    "constraintLessThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor)": null,
    "constraintLessThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor,double)": null,
    "constraintLessThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutDimension,double)": {
      "reverse": "- (NSLayoutConstraint *) constraintLessThanOrEqualToAnchor:(NSLayoutDimension *) anchor multiplier:(CGFloat) m\n{\n    NSLayoutConstraint * re$ult = [self constraintLessThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutDimension_double:(anchor ? anchor : JAVA_NULL) :m];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintLessThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutDimension_double:(NSLayoutDimension*) anchor :(double) m \n{\n    NSLayoutConstraint* re$ult = [super constraintLessThanOrEqualToAnchor:(anchor == JAVA_NULL ? nil : anchor) multiplier:m];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutConstraint",
        "crossmobile_ios_uikit_NSLayoutDimension"
      ]
    },
    "constraintLessThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutDimension,double,double)": {
      "reverse": "- (NSLayoutConstraint *) constraintLessThanOrEqualToAnchor:(NSLayoutDimension *) anchor multiplier:(CGFloat) m constant:(CGFloat) c\n{\n    NSLayoutConstraint * re$ult = [self constraintLessThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutDimension_double_double:(anchor ? anchor : JAVA_NULL) :m :c];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintLessThanOrEqualToAnchor___crossmobile_ios_uikit_NSLayoutDimension_double_double:(NSLayoutDimension*) anchor :(double) m :(double) c \n{\n    NSLayoutConstraint* re$ult = [super constraintLessThanOrEqualToAnchor:(anchor == JAVA_NULL ? nil : anchor) multiplier:m constant:c];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutConstraint",
        "crossmobile_ios_uikit_NSLayoutDimension"
      ]
    },
    "constraintLessThanOrEqualToConstant(double)": {
      "reverse": "- (NSLayoutConstraint *) constraintLessThanOrEqualToConstant:(CGFloat) c\n{\n    NSLayoutConstraint * re$ult = [self constraintLessThanOrEqualToConstant___double:c];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutConstraint*) constraintLessThanOrEqualToConstant___double:(double) c \n{\n    NSLayoutConstraint* re$ult = [super constraintLessThanOrEqualToConstant:c];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutConstraint"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.NSLayoutXAxisAnchor": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "constraintEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor)": null,
    "constraintEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor,double)": null,
    "constraintGreaterThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor)": null,
    "constraintGreaterThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor,double)": null,
    "constraintLessThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor)": null,
    "constraintLessThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor,double)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.NSLayoutYAxisAnchor": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "constraintEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor)": null,
    "constraintEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor,double)": null,
    "constraintGreaterThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor)": null,
    "constraintGreaterThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor,double)": null,
    "constraintLessThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor)": null,
    "constraintLessThanOrEqualToAnchor(crossmobile.ios.uikit.NSLayoutAnchor,double)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIAcceleration": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "timestamp()": {
      "reverse": "- (NSTimeInterval) timestamp\n{\n    return [self timestamp__];\n}\n\n",
      "super": "- (double) timestamp__\n{\n    return [super timestamp];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "x()": {
      "reverse": "- (UIAccelerationValue) x\n{\n    return [self x__];\n}\n\n",
      "super": "- (double) x__\n{\n    return [super x];\n}\n\n"
    },
    "y()": {
      "reverse": "- (UIAccelerationValue) y\n{\n    return [self y__];\n}\n\n",
      "super": "- (double) y__\n{\n    return [super y];\n}\n\n"
    },
    "z()": {
      "reverse": "- (UIAccelerationValue) z\n{\n    return [self z__];\n}\n\n",
      "super": "- (double) z__\n{\n    return [super z];\n}\n\n"
    }
  },
  "crossmobile.ios.uikit.UIAccelerometer": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setDelegate(crossmobile.ios.uikit.UIAccelerometerDelegate)": {
      "reverse": "- (void) setDelegate:(id<UIAccelerometerDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UIAccelerometerDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UIAccelerometerDelegate:(id<UIAccelerometerDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIAccelerometerDelegate"
      ]
    },
    "setUpdateInterval(double)": {
      "reverse": "- (void) setUpdateInterval:(NSTimeInterval) updateInterval\n{\n    [self setUpdateInterval___double:updateInterval];\n}\n\n",
      "super": "- (void) setUpdateInterval___double:(double) updateInterval \n{\n    [super setUpdateInterval:updateInterval];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIAccelerometerDelegate": {
    "didAccelerate(crossmobile.ios.uikit.UIAccelerometer,crossmobile.ios.uikit.UIAcceleration)": {
      "reverse": "- (void) accelerometer:(UIAccelerometer *) accelerometer didAccelerate:(UIAcceleration *) acceleration\n{\n    [self didAccelerate___crossmobile_ios_uikit_UIAccelerometer_crossmobile_ios_uikit_UIAcceleration:(accelerometer ? accelerometer : JAVA_NULL) :(acceleration ? acceleration : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didAccelerate___crossmobile_ios_uikit_UIAccelerometer_crossmobile_ios_uikit_UIAcceleration:(UIAccelerometer*) accelerometer :(UIAcceleration*) acceleration \n{\n    [super accelerometer:(accelerometer == JAVA_NULL ? nil : accelerometer) didAccelerate:(acceleration == JAVA_NULL ? nil : acceleration)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIAcceleration",
        "crossmobile_ios_uikit_UIAccelerometer"
      ]
    }
  },
  "crossmobile.ios.uikit.UIAccessibilityIdentification": {
    "accessibilityIdentifier()": {
      "reverse": "- (NSString *) accessibilityIdentifier\n{\n    NSString * re$ult = [self accessibilityIdentifier__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) accessibilityIdentifier__\n{\n    NSString* re$ult = [super accessibilityIdentifier];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setAccessibilityIdentifier(java.lang.String)": {
      "reverse": "- (void) setAccessibilityIdentifier:(NSString *) accessibilityIdentifier\n{\n    [self setAccessibilityIdentifier___java_lang_String:(accessibilityIdentifier ? accessibilityIdentifier : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setAccessibilityIdentifier___java_lang_String:(NSString*) accessibilityIdentifier \n{\n    [super setAccessibilityIdentifier:(accessibilityIdentifier == JAVA_NULL ? nil : accessibilityIdentifier)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    }
  },
  "crossmobile.ios.uikit.UIActionSheet": {
    "accessibilityIdentifier()": null,
    "addButtonWithTitle(java.lang.String)": {
      "reverse": "- (NSInteger) addButtonWithTitle:(NSString *) title\n{\n    return [self addButtonWithTitle___java_lang_String:(title ? title : JAVA_NULL)];\n}\n\n",
      "super": "- (int) addButtonWithTitle___java_lang_String:(NSString*) title \n{\n    return [super addButtonWithTitle:(title == JAVA_NULL ? nil : title)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "cancelButtonIndex()": {
      "reverse": "- (NSInteger) cancelButtonIndex\n{\n    return [self cancelButtonIndex__];\n}\n\n",
      "super": "- (int) cancelButtonIndex__\n{\n    return [super cancelButtonIndex];\n}\n\n"
    },
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "delegate()": {
      "reverse": "- (id<UIActionSheetDelegate>) delegate\n{\n    id<UIActionSheetDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UIActionSheetDelegate>) delegate__\n{\n    id<UIActionSheetDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIActionSheetDelegate"
      ]
    },
    "destructiveButtonIndex()": {
      "reverse": "- (NSInteger) destructiveButtonIndex\n{\n    return [self destructiveButtonIndex__];\n}\n\n",
      "super": "- (int) destructiveButtonIndex__\n{\n    return [super destructiveButtonIndex];\n}\n\n"
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "dismissWithClickedButtonIndex(int,boolean)": {
      "reverse": "- (void) dismissWithClickedButtonIndex:(NSInteger) buttonIndex animated:(BOOL) animated\n{\n    [self dismissWithClickedButtonIndex___int_boolean:buttonIndex :animated];\n}\n\n",
      "super": "- (void) dismissWithClickedButtonIndex___int_boolean:(int) buttonIndex :(BOOL) animated \n{\n    [super dismissWithClickedButtonIndex:buttonIndex animated:animated];\n}\n\n"
    },
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "firstOtherButtonIndex()": {
      "reverse": "- (NSInteger) firstOtherButtonIndex\n{\n    return [self firstOtherButtonIndex__];\n}\n\n",
      "super": "- (int) firstOtherButtonIndex__\n{\n    return [super firstOtherButtonIndex];\n}\n\n"
    },
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "numberOfButtons()": {
      "reverse": "- (NSInteger) numberOfButtons\n{\n    return [self numberOfButtons__];\n}\n\n",
      "super": "- (int) numberOfButtons__\n{\n    return [super numberOfButtons];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setDelegate(crossmobile.ios.uikit.UIActionSheetDelegate)": {
      "reverse": "- (void) setDelegate:(id<UIActionSheetDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UIActionSheetDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UIActionSheetDelegate:(id<UIActionSheetDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIActionSheetDelegate"
      ]
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTitle(java.lang.String)": {
      "reverse": "- (void) setTitle:(NSString *) title\n{\n    [self setTitle___java_lang_String:(title ? title : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTitle___java_lang_String:(NSString*) title \n{\n    [super setTitle:(title == JAVA_NULL ? nil : title)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "showFromTabBar(crossmobile.ios.uikit.UITabBar)": {
      "reverse": "- (void) showFromTabBar:(UITabBar *) view\n{\n    [self showFromTabBar___crossmobile_ios_uikit_UITabBar:(view ? view : JAVA_NULL)];\n}\n\n",
      "super": "- (void) showFromTabBar___crossmobile_ios_uikit_UITabBar:(UITabBar*) view \n{\n    [super showFromTabBar:(view == JAVA_NULL ? nil : view)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBar"
      ]
    },
    "showFromToolbar(crossmobile.ios.uikit.UIToolbar)": {
      "reverse": "- (void) showFromToolbar:(UIToolbar *) view\n{\n    [self showFromToolbar___crossmobile_ios_uikit_UIToolbar:(view ? view : JAVA_NULL)];\n}\n\n",
      "super": "- (void) showFromToolbar___crossmobile_ios_uikit_UIToolbar:(UIToolbar*) view \n{\n    [super showFromToolbar:(view == JAVA_NULL ? nil : view)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIToolbar"
      ]
    },
    "showInView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) showInView:(UIView *) view\n{\n    [self showInView___crossmobile_ios_uikit_UIView:(view ? view : JAVA_NULL)];\n}\n\n",
      "super": "- (void) showInView___crossmobile_ios_uikit_UIView:(UIView*) view \n{\n    [super showInView:(view == JAVA_NULL ? nil : view)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "title()": {
      "reverse": "- (NSString *) title\n{\n    NSString * re$ult = [self title__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) title__\n{\n    NSString* re$ult = [super title];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UIActionSheetDelegate": {
    "cancel(crossmobile.ios.uikit.UIActionSheet)": {
      "reverse": "- (void) actionSheetCancel:(UIActionSheet *) actionSheet\n{\n    [self cancel___crossmobile_ios_uikit_UIActionSheet:(actionSheet ? actionSheet : JAVA_NULL)];\n}\n\n",
      "super": "- (void) cancel___crossmobile_ios_uikit_UIActionSheet:(UIActionSheet*) actionSheet \n{\n    [super actionSheetCancel:(actionSheet == JAVA_NULL ? nil : actionSheet)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIActionSheet"
      ]
    },
    "clickedButtonAtIndex(crossmobile.ios.uikit.UIActionSheet,int)": {
      "reverse": "- (void) actionSheet:(UIActionSheet *) actionSheet clickedButtonAtIndex:(NSInteger) buttonIndex\n{\n    [self clickedButtonAtIndex___crossmobile_ios_uikit_UIActionSheet_int:(actionSheet ? actionSheet : JAVA_NULL) :buttonIndex];\n}\n\n",
      "super": "- (void) clickedButtonAtIndex___crossmobile_ios_uikit_UIActionSheet_int:(UIActionSheet*) actionSheet :(int) buttonIndex \n{\n    [super actionSheet:(actionSheet == JAVA_NULL ? nil : actionSheet) clickedButtonAtIndex:buttonIndex];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIActionSheet"
      ]
    },
    "didDismissWithButtonIndex(crossmobile.ios.uikit.UIActionSheet,int)": {
      "reverse": "- (void) actionSheet:(UIActionSheet *) actionSheet didDismissWithButtonIndex:(NSInteger) buttonIndex\n{\n    [self didDismissWithButtonIndex___crossmobile_ios_uikit_UIActionSheet_int:(actionSheet ? actionSheet : JAVA_NULL) :buttonIndex];\n}\n\n",
      "super": "- (void) didDismissWithButtonIndex___crossmobile_ios_uikit_UIActionSheet_int:(UIActionSheet*) actionSheet :(int) buttonIndex \n{\n    [super actionSheet:(actionSheet == JAVA_NULL ? nil : actionSheet) didDismissWithButtonIndex:buttonIndex];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIActionSheet"
      ]
    },
    "didPresentActionSheet(crossmobile.ios.uikit.UIActionSheet)": {
      "reverse": "- (void) didPresentActionSheet:(UIActionSheet *) actionSheet\n{\n    [self didPresentActionSheet___crossmobile_ios_uikit_UIActionSheet:(actionSheet ? actionSheet : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didPresentActionSheet___crossmobile_ios_uikit_UIActionSheet:(UIActionSheet*) actionSheet \n{\n    [super didPresentActionSheet:(actionSheet == JAVA_NULL ? nil : actionSheet)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIActionSheet"
      ]
    },
    "willDismissWithButtonIndex(crossmobile.ios.uikit.UIActionSheet,int)": {
      "reverse": "- (void) actionSheet:(UIActionSheet *) actionSheet willDismissWithButtonIndex:(NSInteger) buttonIndex\n{\n    [self willDismissWithButtonIndex___crossmobile_ios_uikit_UIActionSheet_int:(actionSheet ? actionSheet : JAVA_NULL) :buttonIndex];\n}\n\n",
      "super": "- (void) willDismissWithButtonIndex___crossmobile_ios_uikit_UIActionSheet_int:(UIActionSheet*) actionSheet :(int) buttonIndex \n{\n    [super actionSheet:(actionSheet == JAVA_NULL ? nil : actionSheet) willDismissWithButtonIndex:buttonIndex];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIActionSheet"
      ]
    },
    "willPresentActionSheet(crossmobile.ios.uikit.UIActionSheet)": {
      "reverse": "- (void) willPresentActionSheet:(UIActionSheet *) actionSheet\n{\n    [self willPresentActionSheet___crossmobile_ios_uikit_UIActionSheet:(actionSheet ? actionSheet : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willPresentActionSheet___crossmobile_ios_uikit_UIActionSheet:(UIActionSheet*) actionSheet \n{\n    [super willPresentActionSheet:(actionSheet == JAVA_NULL ? nil : actionSheet)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIActionSheet"
      ]
    }
  },
  "crossmobile.ios.uikit.UIActivity": {
    "activityDidFinish(boolean)": {
      "reverse": "- (void) activityDidFinish:(BOOL) completed\n{\n    [self activityDidFinish___boolean:completed];\n}\n\n",
      "super": "- (void) activityDidFinish___boolean:(BOOL) completed \n{\n    [super activityDidFinish:completed];\n}\n\n"
    },
    "activityImage()": {
      "reverse": "- (UIImage *) activityImage\n{\n    UIImage * re$ult = [self activityImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) activityImage__\n{\n    UIImage* re$ult = [super activityImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "activityTitle()": {
      "reverse": "- (NSString *) activityTitle\n{\n    NSString * re$ult = [self activityTitle__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) activityTitle__\n{\n    NSString* re$ult = [super activityTitle];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "activityType()": {
      "reverse": "- (UIActivityType) activityType\n{\n    UIActivityType re$ult = [self activityType__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) activityType__\n{\n    NSString* re$ult = [super activityType];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "activityViewController()": {
      "reverse": "- (UIViewController *) activityViewController\n{\n    UIViewController * re$ult = [self activityViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) activityViewController__\n{\n    UIViewController* re$ult = [super activityViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "canPerformWithActivityItems(java.util.List)": {
      "reverse": "- (BOOL) canPerformWithActivityItems:(NSArray *) activityItems\n{\n    return [self canPerformWithActivityItems___java_util_List:(activityItems ? activityItems : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) canPerformWithActivityItems___java_util_List:(NSArray*) activityItems \n{\n    return [super canPerformWithActivityItems:(activityItems == JAVA_NULL ? nil : activityItems)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "performActivity()": {
      "reverse": "- (void) performActivity\n{\n    [self performActivity__];\n}\n\n",
      "super": "- (void) performActivity__\n{\n    [super performActivity];\n}\n\n"
    },
    "prepareWithActivityItems(java.util.List)": {
      "reverse": "- (void) prepareWithActivityItems:(NSArray *) activityItems\n{\n    [self prepareWithActivityItems___java_util_List:(activityItems ? activityItems : JAVA_NULL)];\n}\n\n",
      "super": "- (void) prepareWithActivityItems___java_util_List:(NSArray*) activityItems \n{\n    [super prepareWithActivityItems:(activityItems == JAVA_NULL ? nil : activityItems)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIActivityIndicatorView": {
    "accessibilityIdentifier()": null,
    "activityIndicatorViewStyle()": {
      "reverse": "- (UIActivityIndicatorViewStyle) activityIndicatorViewStyle\n{\n    return [self activityIndicatorViewStyle__];\n}\n\n",
      "super": "- (int) activityIndicatorViewStyle__\n{\n    return [super activityIndicatorViewStyle];\n}\n\n"
    },
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "color()": {
      "reverse": "- (UIColor *) color\n{\n    UIColor * re$ult = [self color__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) color__\n{\n    UIColor* re$ult = [super color];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hidesWhenStopped()": {
      "reverse": "- (BOOL) hidesWhenStopped\n{\n    return [self hidesWhenStopped__];\n}\n\n",
      "super": "- (BOOL) hidesWhenStopped__\n{\n    return [super hidesWhenStopped];\n}\n\n"
    },
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isAnimating()": {
      "reverse": "- (BOOL) isAnimating\n{\n    return [self isAnimating__];\n}\n\n",
      "super": "- (BOOL) isAnimating__\n{\n    return [super isAnimating];\n}\n\n"
    },
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setActivityIndicatorViewStyle(int)": {
      "reverse": "- (void) setActivityIndicatorViewStyle:(UIActivityIndicatorViewStyle) activityIndicatorViewStyle\n{\n    [self setActivityIndicatorViewStyle___int:activityIndicatorViewStyle];\n}\n\n",
      "super": "- (void) setActivityIndicatorViewStyle___int:(int) activityIndicatorViewStyle \n{\n    [super setActivityIndicatorViewStyle:activityIndicatorViewStyle];\n}\n\n"
    },
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setColor:(UIColor *) color\n{\n    [self setColor___crossmobile_ios_uikit_UIColor:(color ? color : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setColor___crossmobile_ios_uikit_UIColor:(UIColor*) color \n{\n    [super setColor:(color == JAVA_NULL ? nil : color)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHidesWhenStopped(boolean)": {
      "reverse": "- (void) setHidesWhenStopped:(BOOL) hidesWhenStopped\n{\n    [self setHidesWhenStopped___boolean:hidesWhenStopped];\n}\n\n",
      "super": "- (void) setHidesWhenStopped___boolean:(BOOL) hidesWhenStopped \n{\n    [super setHidesWhenStopped:hidesWhenStopped];\n}\n\n"
    },
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "startAnimating()": {
      "reverse": "- (void) startAnimating\n{\n    [self startAnimating__];\n}\n\n",
      "super": "- (void) startAnimating__\n{\n    [super startAnimating];\n}\n\n"
    },
    "stopAnimating()": {
      "reverse": "- (void) stopAnimating\n{\n    [self stopAnimating__];\n}\n\n",
      "super": "- (void) stopAnimating__\n{\n    [super stopAnimating];\n}\n\n"
    },
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UIActivityViewController": {
    "addChildViewController(crossmobile.ios.uikit.UIViewController)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "additionalSafeAreaInsets()": null,
    "allowedChildViewControllersForUnwindingFromSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": null,
    "automaticallyAdjustsScrollViewInsets()": null,
    "becomeFirstResponder()": null,
    "beginAppearanceTransition(boolean,boolean)": null,
    "bottomLayoutGuide()": null,
    "childViewControllerContainingSegueSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": null,
    "childViewControllerForStatusBarHidden()": null,
    "childViewControllerForStatusBarStyle()": null,
    "childViewControllers()": null,
    "contentSizeForViewInPopover()": null,
    "definesPresentationContext()": null,
    "didReceiveMemoryWarning()": null,
    "didRotateFromInterfaceOrientation(int)": null,
    "disablesAutomaticKeyboardDismissal()": null,
    "dismissModalViewControllerAnimated(boolean)": null,
    "edgesForExtendedLayout()": null,
    "editButtonItem()": null,
    "endAppearanceTransition()": null,
    "excludedActivityTypes()": {
      "reverse": "- (NSArray<UIActivityType> *) excludedActivityTypes\n{\n    NSArray<UIActivityType> * re$ult = [self excludedActivityTypes__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) excludedActivityTypes__\n{\n    NSArray* re$ult = [super excludedActivityTypes];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "extensionContext()": null,
    "hidesBottomBarWhenPushed()": null,
    "interfaceOrientation()": null,
    "isEditing()": null,
    "isFirstResponder()": null,
    "isModalInPopover()": null,
    "isViewLoaded()": null,
    "loadView()": null,
    "loadViewIfNeeded()": null,
    "modalPresentationStyle()": null,
    "modalTransitionStyle()": null,
    "navigationController()": null,
    "navigationItem()": null,
    "nextResponder()": null,
    "nibName()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "parentViewController()": null,
    "performSegueWithIdentifier(java.lang.String,java.lang.Object)": null,
    "preferredInterfaceOrientationForPresentation()": null,
    "preferredStatusBarStyle()": null,
    "prefersStatusBarHidden()": null,
    "prepareForSegue(crossmobile.ios.uikit.UIStoryboardSegue,java.lang.Object)": null,
    "presentModalViewController(crossmobile.ios.uikit.UIViewController,boolean)": null,
    "presentedViewController()": null,
    "presentingViewController()": null,
    "providesPresentationContextTransitionStyle()": null,
    "removeFromParentViewController()": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rotatingFooterView()": null,
    "rotatingHeaderView()": null,
    "setAdditionalSafeAreaInsets(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setAutomaticallyAdjustsScrollViewInsets(boolean)": null,
    "setContentSizeForViewInPopover(crossmobile.ios.coregraphics.CGSize)": null,
    "setDefinesPresentationContext(boolean)": null,
    "setEdgesForExtendedLayout(int)": null,
    "setEditing(boolean)": null,
    "setEditing(boolean,boolean)": null,
    "setExcludedActivityTypes(java.util.List)": {
      "reverse": "- (void) setExcludedActivityTypes:(NSArray<UIActivityType> *) excludedActivityTypes\n{\n    [self setExcludedActivityTypes___java_util_List:(excludedActivityTypes ? excludedActivityTypes : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setExcludedActivityTypes___java_util_List:(NSArray*) excludedActivityTypes \n{\n    [super setExcludedActivityTypes:(excludedActivityTypes == JAVA_NULL ? nil : excludedActivityTypes)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setHidesBottomBarWhenPushed(boolean)": null,
    "setModalInPopover(boolean)": null,
    "setModalPresentationStyle(int)": null,
    "setModalTransitionStyle(int)": null,
    "setNeedsStatusBarAppearanceUpdate()": null,
    "setProvidesPresentationContextTransitionStyle(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setTabBarItem(crossmobile.ios.uikit.UITabBarItem)": null,
    "setTitle(java.lang.String)": null,
    "setToolbarItems(java.util.List)": null,
    "setToolbarItems(java.util.List,boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "setView(crossmobile.ios.uikit.UIView)": null,
    "setWantsFullScreenLayout(boolean)": null,
    "shouldAutomaticallyForwardAppearanceMethods()": null,
    "shouldAutorotate()": null,
    "shouldAutorotateToInterfaceOrientation(int)": null,
    "shouldPerformSegueWithIdentifier(java.lang.String,java.lang.Object)": null,
    "showDetailViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": null,
    "showViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": null,
    "splitViewController()": null,
    "storyboard()": null,
    "supportedInterfaceOrientations()": null,
    "tabBarController()": null,
    "tabBarItem()": null,
    "title()": null,
    "toolbarItems()": null,
    "topLayoutGuide()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "view()": null,
    "viewDidAppear(boolean)": null,
    "viewDidDisappear(boolean)": null,
    "viewDidLayoutSubviews()": null,
    "viewDidLoad()": null,
    "viewDidUnload()": null,
    "viewIfLoaded()": null,
    "viewSafeAreaInsetsDidChange()": null,
    "viewWillAppear(boolean)": null,
    "viewWillDisappear(boolean)": null,
    "viewWillLayoutSubviews()": null,
    "wantsFullScreenLayout()": null,
    "willAnimateRotationToInterfaceOrientation(int,double)": null,
    "willRotateToInterfaceOrientation(int,double)": null
  },
  "crossmobile.ios.uikit.UIAlertAction": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "isEnabled()": {
      "reverse": "- (BOOL) isEnabled\n{\n    return [self isEnabled__];\n}\n\n",
      "super": "- (BOOL) isEnabled__\n{\n    return [super isEnabled];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setEnabled(boolean)": {
      "reverse": "- (void) setEnabled:(BOOL) enabled\n{\n    [self setEnabled___boolean:enabled];\n}\n\n",
      "super": "- (void) setEnabled___boolean:(BOOL) enabled \n{\n    [super setEnabled:enabled];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "style()": {
      "reverse": "- (UIAlertActionStyle) style\n{\n    return [self style__];\n}\n\n",
      "super": "- (int) style__\n{\n    return [super style];\n}\n\n"
    },
    "title()": {
      "reverse": "- (NSString *) title\n{\n    NSString * re$ult = [self title__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) title__\n{\n    NSString* re$ult = [super title];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIAlertController": {
    "actions()": {
      "reverse": "- (NSArray<UIAlertAction *> *) actions\n{\n    NSArray<UIAlertAction *> * re$ult = [self actions__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) actions__\n{\n    NSArray* re$ult = [super actions];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "addAction(crossmobile.ios.uikit.UIAlertAction)": {
      "reverse": "- (void) addAction:(UIAlertAction *) action\n{\n    [self addAction___crossmobile_ios_uikit_UIAlertAction:(action ? action : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addAction___crossmobile_ios_uikit_UIAlertAction:(UIAlertAction*) action \n{\n    [super addAction:(action == JAVA_NULL ? nil : action)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIAlertAction"
      ]
    },
    "addChildViewController(crossmobile.ios.uikit.UIViewController)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "additionalSafeAreaInsets()": null,
    "allowedChildViewControllersForUnwindingFromSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": null,
    "automaticallyAdjustsScrollViewInsets()": null,
    "becomeFirstResponder()": null,
    "beginAppearanceTransition(boolean,boolean)": null,
    "bottomLayoutGuide()": null,
    "childViewControllerContainingSegueSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": null,
    "childViewControllerForStatusBarHidden()": null,
    "childViewControllerForStatusBarStyle()": null,
    "childViewControllers()": null,
    "contentSizeForViewInPopover()": null,
    "definesPresentationContext()": null,
    "didReceiveMemoryWarning()": null,
    "didRotateFromInterfaceOrientation(int)": null,
    "disablesAutomaticKeyboardDismissal()": null,
    "dismissModalViewControllerAnimated(boolean)": null,
    "edgesForExtendedLayout()": null,
    "editButtonItem()": null,
    "endAppearanceTransition()": null,
    "extensionContext()": null,
    "hidesBottomBarWhenPushed()": null,
    "interfaceOrientation()": null,
    "isEditing()": null,
    "isFirstResponder()": null,
    "isModalInPopover()": null,
    "isViewLoaded()": null,
    "loadView()": null,
    "loadViewIfNeeded()": null,
    "message()": {
      "reverse": "- (NSString *) message\n{\n    NSString * re$ult = [self message__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) message__\n{\n    NSString* re$ult = [super message];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "modalPresentationStyle()": null,
    "modalTransitionStyle()": null,
    "navigationController()": null,
    "navigationItem()": null,
    "nextResponder()": null,
    "nibName()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "parentViewController()": null,
    "performSegueWithIdentifier(java.lang.String,java.lang.Object)": null,
    "preferredInterfaceOrientationForPresentation()": null,
    "preferredStatusBarStyle()": null,
    "preferredStyle()": {
      "reverse": "- (UIAlertControllerStyle) preferredStyle\n{\n    return [self preferredStyle__];\n}\n\n",
      "super": "- (int) preferredStyle__\n{\n    return [super preferredStyle];\n}\n\n"
    },
    "prefersStatusBarHidden()": null,
    "prepareForSegue(crossmobile.ios.uikit.UIStoryboardSegue,java.lang.Object)": null,
    "presentModalViewController(crossmobile.ios.uikit.UIViewController,boolean)": null,
    "presentedViewController()": null,
    "presentingViewController()": null,
    "providesPresentationContextTransitionStyle()": null,
    "removeFromParentViewController()": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rotatingFooterView()": null,
    "rotatingHeaderView()": null,
    "setAdditionalSafeAreaInsets(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setAutomaticallyAdjustsScrollViewInsets(boolean)": null,
    "setContentSizeForViewInPopover(crossmobile.ios.coregraphics.CGSize)": null,
    "setDefinesPresentationContext(boolean)": null,
    "setEdgesForExtendedLayout(int)": null,
    "setEditing(boolean)": null,
    "setEditing(boolean,boolean)": null,
    "setHidesBottomBarWhenPushed(boolean)": null,
    "setMessage(java.lang.String)": {
      "reverse": "- (void) setMessage:(NSString *) message\n{\n    [self setMessage___java_lang_String:(message ? message : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setMessage___java_lang_String:(NSString*) message \n{\n    [super setMessage:(message == JAVA_NULL ? nil : message)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setModalInPopover(boolean)": null,
    "setModalPresentationStyle(int)": null,
    "setModalTransitionStyle(int)": null,
    "setNeedsStatusBarAppearanceUpdate()": null,
    "setProvidesPresentationContextTransitionStyle(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setTabBarItem(crossmobile.ios.uikit.UITabBarItem)": null,
    "setTitle(java.lang.String)": null,
    "setToolbarItems(java.util.List)": null,
    "setToolbarItems(java.util.List,boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "setView(crossmobile.ios.uikit.UIView)": null,
    "setWantsFullScreenLayout(boolean)": null,
    "shouldAutomaticallyForwardAppearanceMethods()": null,
    "shouldAutorotate()": null,
    "shouldAutorotateToInterfaceOrientation(int)": null,
    "shouldPerformSegueWithIdentifier(java.lang.String,java.lang.Object)": null,
    "showDetailViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": null,
    "showViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": null,
    "splitViewController()": null,
    "storyboard()": null,
    "supportedInterfaceOrientations()": null,
    "tabBarController()": null,
    "tabBarItem()": null,
    "textFields()": {
      "reverse": "- (NSArray<UITextField *> *) textFields\n{\n    NSArray<UITextField *> * re$ult = [self textFields__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) textFields__\n{\n    NSArray* re$ult = [super textFields];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "title()": null,
    "toolbarItems()": null,
    "topLayoutGuide()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "view()": null,
    "viewDidAppear(boolean)": null,
    "viewDidDisappear(boolean)": null,
    "viewDidLayoutSubviews()": null,
    "viewDidLoad()": null,
    "viewDidUnload()": null,
    "viewIfLoaded()": null,
    "viewSafeAreaInsetsDidChange()": null,
    "viewWillAppear(boolean)": null,
    "viewWillDisappear(boolean)": null,
    "viewWillLayoutSubviews()": null,
    "wantsFullScreenLayout()": null,
    "willAnimateRotationToInterfaceOrientation(int,double)": null,
    "willRotateToInterfaceOrientation(int,double)": null
  },
  "crossmobile.ios.uikit.UIAlertView": {
    "accessibilityIdentifier()": null,
    "addButtonWithTitle(java.lang.String)": {
      "reverse": "- (NSInteger) addButtonWithTitle:(NSString *) title\n{\n    return [self addButtonWithTitle___java_lang_String:(title ? title : JAVA_NULL)];\n}\n\n",
      "super": "- (int) addButtonWithTitle___java_lang_String:(NSString*) title \n{\n    return [super addButtonWithTitle:(title == JAVA_NULL ? nil : title)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alertViewStyle()": {
      "reverse": "- (UIAlertViewStyle) alertViewStyle\n{\n    return [self alertViewStyle__];\n}\n\n",
      "super": "- (int) alertViewStyle__\n{\n    return [super alertViewStyle];\n}\n\n"
    },
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "delegate()": {
      "reverse": "- (id) delegate\n{\n    id re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) delegate__\n{\n    id re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "message()": {
      "reverse": "- (NSString *) message\n{\n    NSString * re$ult = [self message__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) message__\n{\n    NSString* re$ult = [super message];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlertViewStyle(int)": {
      "reverse": "- (void) setAlertViewStyle:(UIAlertViewStyle) alertViewStyle\n{\n    [self setAlertViewStyle___int:alertViewStyle];\n}\n\n",
      "super": "- (void) setAlertViewStyle___int:(int) alertViewStyle \n{\n    [super setAlertViewStyle:alertViewStyle];\n}\n\n"
    },
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setDelegate(crossmobile.ios.uikit.UIAlertViewDelegate)": {
      "reverse": "- (void) setDelegate:(id) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UIAlertViewDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UIAlertViewDelegate:(id<UIAlertViewDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMessage(java.lang.String)": {
      "reverse": "- (void) setMessage:(NSString *) message\n{\n    [self setMessage___java_lang_String:(message ? message : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setMessage___java_lang_String:(NSString*) message \n{\n    [super setMessage:(message == JAVA_NULL ? nil : message)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTitle(java.lang.String)": {
      "reverse": "- (void) setTitle:(NSString *) title\n{\n    [self setTitle___java_lang_String:(title ? title : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTitle___java_lang_String:(NSString*) title \n{\n    [super setTitle:(title == JAVA_NULL ? nil : title)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "show()": {
      "reverse": "- (void) show\n{\n    [self show__];\n}\n\n",
      "super": "- (void) show__\n{\n    [super show];\n}\n\n"
    },
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "textFieldAtIndex(int)": {
      "reverse": "- (UITextField *) textFieldAtIndex:(NSInteger) textFieldIndex\n{\n    UITextField * re$ult = [self textFieldAtIndex___int:textFieldIndex];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UITextField*) textFieldAtIndex___int:(int) textFieldIndex \n{\n    UITextField* re$ult = [super textFieldAtIndex:textFieldIndex];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextField"
      ]
    },
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "title()": {
      "reverse": "- (NSString *) title\n{\n    NSString * re$ult = [self title__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) title__\n{\n    NSString* re$ult = [super title];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UIAlertViewDelegate": {
    "clickedButtonAtIndex(crossmobile.ios.uikit.UIAlertView,int)": {
      "reverse": "- (void) alertView:(UIAlertView *) alertView clickedButtonAtIndex:(NSInteger) buttonIndex\n{\n    [self clickedButtonAtIndex___crossmobile_ios_uikit_UIAlertView_int:(alertView ? alertView : JAVA_NULL) :buttonIndex];\n}\n\n",
      "super": "- (void) clickedButtonAtIndex___crossmobile_ios_uikit_UIAlertView_int:(UIAlertView*) alertView :(int) buttonIndex \n{\n    [super alertView:(alertView == JAVA_NULL ? nil : alertView) clickedButtonAtIndex:buttonIndex];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIAlertView"
      ]
    }
  },
  "crossmobile.ios.uikit.UIApplication": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "applicationIconBadgeNumber()": {
      "reverse": "- (NSInteger) applicationIconBadgeNumber\n{\n    return [self applicationIconBadgeNumber__];\n}\n\n",
      "super": "- (int) applicationIconBadgeNumber__\n{\n    return [super applicationIconBadgeNumber];\n}\n\n"
    },
    "applicationState()": {
      "reverse": "- (UIApplicationState) applicationState\n{\n    return [self applicationState__];\n}\n\n",
      "super": "- (int) applicationState__\n{\n    return [super applicationState];\n}\n\n"
    },
    "becomeFirstResponder()": null,
    "canOpenURL(crossmobile.ios.foundation.NSURL)": {
      "reverse": "- (BOOL) canOpenURL:(NSURL *) url\n{\n    return [self canOpenURL___crossmobile_ios_foundation_NSURL:(url ? url : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) canOpenURL___crossmobile_ios_foundation_NSURL:(NSURL*) url \n{\n    return [super canOpenURL:(url == JAVA_NULL ? nil : url)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL"
      ]
    },
    "currentUserNotificationSettings()": {
      "reverse": "- (UIUserNotificationSettings *) currentUserNotificationSettings\n{\n    UIUserNotificationSettings * re$ult = [self currentUserNotificationSettings__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIUserNotificationSettings*) currentUserNotificationSettings__\n{\n    UIUserNotificationSettings* re$ult = [super currentUserNotificationSettings];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIUserNotificationSettings"
      ]
    },
    "delegate()": {
      "reverse": "- (id<UIApplicationDelegate>) delegate\n{\n    id<UIApplicationDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UIApplicationDelegate>) delegate__\n{\n    id<UIApplicationDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplicationDelegate"
      ]
    },
    "enabledRemoteNotificationTypes()": {
      "reverse": "- (UIRemoteNotificationType) enabledRemoteNotificationTypes\n{\n    return [self enabledRemoteNotificationTypes__];\n}\n\n",
      "super": "- (int) enabledRemoteNotificationTypes__\n{\n    return [super enabledRemoteNotificationTypes];\n}\n\n"
    },
    "isFirstResponder()": null,
    "isIdleTimerDisabled()": {
      "reverse": "- (BOOL) isIdleTimerDisabled\n{\n    return [self isIdleTimerDisabled__];\n}\n\n",
      "super": "- (BOOL) isIdleTimerDisabled__\n{\n    return [super isIdleTimerDisabled];\n}\n\n"
    },
    "isNetworkActivityIndicatorVisible()": {
      "reverse": "- (BOOL) isNetworkActivityIndicatorVisible\n{\n    return [self isNetworkActivityIndicatorVisible__];\n}\n\n",
      "super": "- (BOOL) isNetworkActivityIndicatorVisible__\n{\n    return [super isNetworkActivityIndicatorVisible];\n}\n\n"
    },
    "isStatusBarHidden()": {
      "reverse": "- (BOOL) isStatusBarHidden\n{\n    return [self isStatusBarHidden__];\n}\n\n",
      "super": "- (BOOL) isStatusBarHidden__\n{\n    return [super isStatusBarHidden];\n}\n\n"
    },
    "keyWindow()": {
      "reverse": "- (UIWindow *) keyWindow\n{\n    UIWindow * re$ult = [self keyWindow__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIWindow*) keyWindow__\n{\n    UIWindow* re$ult = [super keyWindow];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIWindow"
      ]
    },
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "openURL(crossmobile.ios.foundation.NSURL)": {
      "reverse": "- (BOOL) openURL:(NSURL *) url\n{\n    return [self openURL___crossmobile_ios_foundation_NSURL:(url ? url : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) openURL___crossmobile_ios_foundation_NSURL:(NSURL*) url \n{\n    return [super openURL:(url == JAVA_NULL ? nil : url)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL"
      ]
    },
    "registerForRemoteNotificationTypes(int)": {
      "reverse": "- (void) registerForRemoteNotificationTypes:(UIRemoteNotificationType) types\n{\n    [self registerForRemoteNotificationTypes___int:types];\n}\n\n",
      "super": "- (void) registerForRemoteNotificationTypes___int:(int) types \n{\n    [super registerForRemoteNotificationTypes:types];\n}\n\n"
    },
    "registerForRemoteNotifications()": {
      "reverse": "- (void) registerForRemoteNotifications\n{\n    [self registerForRemoteNotifications__];\n}\n\n",
      "super": "- (void) registerForRemoteNotifications__\n{\n    [super registerForRemoteNotifications];\n}\n\n"
    },
    "registerUserNotificationSettings(crossmobile.ios.uikit.UIUserNotificationSettings)": {
      "reverse": "- (void) registerUserNotificationSettings:(UIUserNotificationSettings *) notificationSettings\n{\n    [self registerUserNotificationSettings___crossmobile_ios_uikit_UIUserNotificationSettings:(notificationSettings ? notificationSettings : JAVA_NULL)];\n}\n\n",
      "super": "- (void) registerUserNotificationSettings___crossmobile_ios_uikit_UIUserNotificationSettings:(UIUserNotificationSettings*) notificationSettings \n{\n    [super registerUserNotificationSettings:(notificationSettings == JAVA_NULL ? nil : notificationSettings)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIUserNotificationSettings"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "setApplicationIconBadgeNumber(int)": {
      "reverse": "- (void) setApplicationIconBadgeNumber:(NSInteger) applicationIconBadgeNumber\n{\n    [self setApplicationIconBadgeNumber___int:applicationIconBadgeNumber];\n}\n\n",
      "super": "- (void) setApplicationIconBadgeNumber___int:(int) applicationIconBadgeNumber \n{\n    [super setApplicationIconBadgeNumber:applicationIconBadgeNumber];\n}\n\n"
    },
    "setDelegate(crossmobile.ios.uikit.UIApplicationDelegate)": {
      "reverse": "- (void) setDelegate:(id<UIApplicationDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UIApplicationDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UIApplicationDelegate:(id<UIApplicationDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplicationDelegate"
      ]
    },
    "setIdleTimerDisabled(boolean)": {
      "reverse": "- (void) setIdleTimerDisabled:(BOOL) idleTimerDisabled\n{\n    [self setIdleTimerDisabled___boolean:idleTimerDisabled];\n}\n\n",
      "super": "- (void) setIdleTimerDisabled___boolean:(BOOL) idleTimerDisabled \n{\n    [super setIdleTimerDisabled:idleTimerDisabled];\n}\n\n"
    },
    "setNetworkActivityIndicatorVisible(boolean)": {
      "reverse": "- (void) setNetworkActivityIndicatorVisible:(BOOL) networkActivityIndicatorVisible\n{\n    [self setNetworkActivityIndicatorVisible___boolean:networkActivityIndicatorVisible];\n}\n\n",
      "super": "- (void) setNetworkActivityIndicatorVisible___boolean:(BOOL) networkActivityIndicatorVisible \n{\n    [super setNetworkActivityIndicatorVisible:networkActivityIndicatorVisible];\n}\n\n"
    },
    "setStatusBarHidden(boolean,boolean)": {
      "reverse": "- (void) setStatusBarHidden:(BOOL) hidden animated:(BOOL) animated\n{\n    [self setStatusBarHidden___boolean_boolean:hidden :animated];\n}\n\n",
      "super": "- (void) setStatusBarHidden___boolean_boolean:(BOOL) hidden :(BOOL) animated \n{\n    [super setStatusBarHidden:hidden animated:animated];\n}\n\n"
    },
    "setStatusBarOrientation(int,boolean)": {
      "reverse": "- (void) setStatusBarOrientation:(UIInterfaceOrientation) interfaceOrientation animated:(BOOL) animated\n{\n    [self setStatusBarOrientation___int_boolean:interfaceOrientation :animated];\n}\n\n",
      "super": "- (void) setStatusBarOrientation___int_boolean:(int) interfaceOrientation :(BOOL) animated \n{\n    [super setStatusBarOrientation:interfaceOrientation animated:animated];\n}\n\n"
    },
    "setStatusBarStyle(int,boolean)": {
      "reverse": "- (void) setStatusBarStyle:(UIStatusBarStyle) statusBarStyle animated:(BOOL) animated\n{\n    [self setStatusBarStyle___int_boolean:statusBarStyle :animated];\n}\n\n",
      "super": "- (void) setStatusBarStyle___int_boolean:(int) statusBarStyle :(BOOL) animated \n{\n    [super setStatusBarStyle:statusBarStyle animated:animated];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "statusBarOrientation()": {
      "reverse": "- (UIInterfaceOrientation) statusBarOrientation\n{\n    return [self statusBarOrientation__];\n}\n\n",
      "super": "- (int) statusBarOrientation__\n{\n    return [super statusBarOrientation];\n}\n\n"
    },
    "statusBarStyle()": {
      "reverse": "- (UIStatusBarStyle) statusBarStyle\n{\n    return [self statusBarStyle__];\n}\n\n",
      "super": "- (int) statusBarStyle__\n{\n    return [super statusBarStyle];\n}\n\n"
    },
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "unregisterForRemoteNotifications()": {
      "reverse": "- (void) unregisterForRemoteNotifications\n{\n    [self unregisterForRemoteNotifications__];\n}\n\n",
      "super": "- (void) unregisterForRemoteNotifications__\n{\n    [super unregisterForRemoteNotifications];\n}\n\n"
    },
    "userInterfaceLayoutDirection()": {
      "reverse": "- (UIUserInterfaceLayoutDirection) userInterfaceLayoutDirection\n{\n    return [self userInterfaceLayoutDirection__];\n}\n\n",
      "super": "- (int) userInterfaceLayoutDirection__\n{\n    return [super userInterfaceLayoutDirection];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "windows()": {
      "reverse": "- (NSArray<__kindof UIWindow *> *) windows\n{\n    NSArray<__kindof UIWindow *> * re$ult = [self windows__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) windows__\n{\n    NSArray* re$ult = [super windows];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    }
  },
  "crossmobile.ios.uikit.UIApplicationDelegate": {
    "didBecomeActive(crossmobile.ios.uikit.UIApplication)": {
      "reverse": "- (void) applicationDidBecomeActive:(UIApplication *) application\n{\n    [self didBecomeActive___crossmobile_ios_uikit_UIApplication:(application ? application : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didBecomeActive___crossmobile_ios_uikit_UIApplication:(UIApplication*) application \n{\n    [super applicationDidBecomeActive:(application == JAVA_NULL ? nil : application)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "didChangeStatusBarFrame(crossmobile.ios.uikit.UIApplication,crossmobile.ios.coregraphics.CGRect)": {
      "reverse": "- (void) application:(UIApplication *) application didChangeStatusBarFrame:(CGRect) oldStatusBarFrame\n{\n    crossmobile_ios_coregraphics_CGRect* oldStatusBarFrame$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:oldStatusBarFrame];\n    [self didChangeStatusBarFrame___crossmobile_ios_uikit_UIApplication_crossmobile_ios_coregraphics_CGRect:(application ? application : JAVA_NULL) :oldStatusBarFrame$conv];\n    [oldStatusBarFrame$conv release];\n}\n\n",
      "super": "- (void) didChangeStatusBarFrame___crossmobile_ios_uikit_UIApplication_crossmobile_ios_coregraphics_CGRect:(UIApplication*) application :(crossmobile_ios_coregraphics_CGRect*) oldStatusBarFrame \n{\n    [super application:(application == JAVA_NULL ? nil : application) didChangeStatusBarFrame:[oldStatusBarFrame getCGRect]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect",
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "didChangeStatusBarOrientation(crossmobile.ios.uikit.UIApplication,int)": {
      "reverse": "- (void) application:(UIApplication *) application didChangeStatusBarOrientation:(UIInterfaceOrientation) oldStatusBarOrientation\n{\n    [self didChangeStatusBarOrientation___crossmobile_ios_uikit_UIApplication_int:(application ? application : JAVA_NULL) :oldStatusBarOrientation];\n}\n\n",
      "super": "- (void) didChangeStatusBarOrientation___crossmobile_ios_uikit_UIApplication_int:(UIApplication*) application :(int) oldStatusBarOrientation \n{\n    [super application:(application == JAVA_NULL ? nil : application) didChangeStatusBarOrientation:oldStatusBarOrientation];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "didEnterBackground(crossmobile.ios.uikit.UIApplication)": {
      "reverse": "- (void) applicationDidEnterBackground:(UIApplication *) application\n{\n    [self didEnterBackground___crossmobile_ios_uikit_UIApplication:(application ? application : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didEnterBackground___crossmobile_ios_uikit_UIApplication:(UIApplication*) application \n{\n    [super applicationDidEnterBackground:(application == JAVA_NULL ? nil : application)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "didFailToRegisterForRemoteNotificationsWithError(crossmobile.ios.uikit.UIApplication,crossmobile.ios.foundation.NSError)": {
      "reverse": "- (void) application:(UIApplication *) application didFailToRegisterForRemoteNotificationsWithError:(NSError *) error\n{\n    [self didFailToRegisterForRemoteNotificationsWithError___crossmobile_ios_uikit_UIApplication_crossmobile_ios_foundation_NSError:(application ? application : JAVA_NULL) :(error ? error : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didFailToRegisterForRemoteNotificationsWithError___crossmobile_ios_uikit_UIApplication_crossmobile_ios_foundation_NSError:(UIApplication*) application :(NSError*) error \n{\n    [super application:(application == JAVA_NULL ? nil : application) didFailToRegisterForRemoteNotificationsWithError:(error == JAVA_NULL ? nil : error)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSError",
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "didFinishLaunchingWithOptions(crossmobile.ios.uikit.UIApplication,java.util.Map)": {
      "reverse": "- (BOOL) application:(UIApplication *) application didFinishLaunchingWithOptions:(NSDictionary *) launchOptions\n{\n    return [self didFinishLaunchingWithOptions___crossmobile_ios_uikit_UIApplication_java_util_Map:(application ? application : JAVA_NULL) :(launchOptions ? launchOptions : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) didFinishLaunchingWithOptions___crossmobile_ios_uikit_UIApplication_java_util_Map:(UIApplication*) application :(NSDictionary*) launchOptions \n{\n    return [super application:(application == JAVA_NULL ? nil : application) didFinishLaunchingWithOptions:(launchOptions == JAVA_NULL ? nil : launchOptions)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication",
        "java_util_Map"
      ]
    },
    "didReceiveLocalNotification(crossmobile.ios.uikit.UIApplication,crossmobile.ios.uikit.UILocalNotification)": {
      "reverse": "- (void) application:(UIApplication *) application didReceiveLocalNotification:(UILocalNotification *) notification\n{\n    [self didReceiveLocalNotification___crossmobile_ios_uikit_UIApplication_crossmobile_ios_uikit_UILocalNotification:(application ? application : JAVA_NULL) :(notification ? notification : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didReceiveLocalNotification___crossmobile_ios_uikit_UIApplication_crossmobile_ios_uikit_UILocalNotification:(UIApplication*) application :(UILocalNotification*) notification \n{\n    [super application:(application == JAVA_NULL ? nil : application) didReceiveLocalNotification:(notification == JAVA_NULL ? nil : notification)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication",
        "crossmobile_ios_uikit_UILocalNotification"
      ]
    },
    "didReceiveMemoryWarning(crossmobile.ios.uikit.UIApplication)": {
      "reverse": "- (void) applicationDidReceiveMemoryWarning:(UIApplication *) application\n{\n    [self didReceiveMemoryWarning___crossmobile_ios_uikit_UIApplication:(application ? application : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didReceiveMemoryWarning___crossmobile_ios_uikit_UIApplication:(UIApplication*) application \n{\n    [super applicationDidReceiveMemoryWarning:(application == JAVA_NULL ? nil : application)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "didReceiveRemoteNotification(crossmobile.ios.uikit.UIApplication,java.util.Map)": {
      "reverse": "- (void) application:(UIApplication *) application didReceiveRemoteNotification:(NSDictionary *) userInfo\n{\n    [self didReceiveRemoteNotification___crossmobile_ios_uikit_UIApplication_java_util_Map:(application ? application : JAVA_NULL) :(userInfo ? userInfo : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didReceiveRemoteNotification___crossmobile_ios_uikit_UIApplication_java_util_Map:(UIApplication*) application :(NSDictionary*) userInfo \n{\n    [super application:(application == JAVA_NULL ? nil : application) didReceiveRemoteNotification:(userInfo == JAVA_NULL ? nil : userInfo)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication",
        "java_util_Map"
      ]
    },
    "didReceiveRemoteNotificationFetchCompletionHandler(crossmobile.ios.uikit.UIApplication,java.util.Map,org.robovm.objc.block.VoidBlock1)": {
      "reverse": "- (void) application:(UIApplication *) application didReceiveRemoteNotification:(NSDictionary *) userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult result)) completionHandler\n{\n    CM_Block_Reverse_cmioslayer_0* completionHandler$conv = [[CM_Block_Reverse_cmioslayer_0 alloc] initWithCMBlock:completionHandler];\n    [self didReceiveRemoteNotificationFetchCompletionHandler___crossmobile_ios_uikit_UIApplication_java_util_Map_org_robovm_objc_block_VoidBlock1:(application ? application : JAVA_NULL) :(userInfo ? userInfo : JAVA_NULL) :completionHandler$conv];\n    [completionHandler$conv release];\n}\n\n",
      "revimport": [
        "CM_Block_Reverse_cmioslayer_0"
      ],
      "super": "- (void) didReceiveRemoteNotificationFetchCompletionHandler___crossmobile_ios_uikit_UIApplication_java_util_Map_org_robovm_objc_block_VoidBlock1:(UIApplication*) application :(NSDictionary*) userInfo :(id<org_robovm_objc_block_VoidBlock1>) completionHandler \n{\n    [super application:(application == JAVA_NULL ? nil : application) didReceiveRemoteNotification:(userInfo == JAVA_NULL ? nil : userInfo) fetchCompletionHandler:(completionHandler == JAVA_NULL ? nil : ^(UIBackgroundFetchResult result) {\n        java_lang_Integer* result$conv = [[java_lang_Integer alloc] initWithInt:result];\n        [completionHandler invoke___java_lang_Object:result$conv];\n        [result$conv release];\n    })];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication",
        "java_util_Map",
        "org_robovm_objc_block_VoidBlock1"
      ]
    },
    "didRegisterForRemoteNotificationsWithDeviceToken(crossmobile.ios.uikit.UIApplication,crossmobile.ios.foundation.NSData)": {
      "reverse": "- (void) application:(UIApplication *) application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *) deviceToken\n{\n    [self didRegisterForRemoteNotificationsWithDeviceToken___crossmobile_ios_uikit_UIApplication_crossmobile_ios_foundation_NSData:(application ? application : JAVA_NULL) :(deviceToken ? deviceToken : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didRegisterForRemoteNotificationsWithDeviceToken___crossmobile_ios_uikit_UIApplication_crossmobile_ios_foundation_NSData:(UIApplication*) application :(NSData*) deviceToken \n{\n    [super application:(application == JAVA_NULL ? nil : application) didRegisterForRemoteNotificationsWithDeviceToken:(deviceToken == JAVA_NULL ? nil : deviceToken)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSData",
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "didRegisterUserNotificationSettings(crossmobile.ios.uikit.UIApplication,crossmobile.ios.uikit.UIUserNotificationSettings)": {
      "reverse": "- (void) application:(UIApplication *) application didRegisterUserNotificationSettings:(UIUserNotificationSettings *) notificationSettings\n{\n    [self didRegisterUserNotificationSettings___crossmobile_ios_uikit_UIApplication_crossmobile_ios_uikit_UIUserNotificationSettings:(application ? application : JAVA_NULL) :(notificationSettings ? notificationSettings : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didRegisterUserNotificationSettings___crossmobile_ios_uikit_UIApplication_crossmobile_ios_uikit_UIUserNotificationSettings:(UIApplication*) application :(UIUserNotificationSettings*) notificationSettings \n{\n    [super application:(application == JAVA_NULL ? nil : application) didRegisterUserNotificationSettings:(notificationSettings == JAVA_NULL ? nil : notificationSettings)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication",
        "crossmobile_ios_uikit_UIUserNotificationSettings"
      ]
    },
    "handleActionWithIdentifierForLocalNotification(crossmobile.ios.uikit.UIApplication,java.lang.String,crossmobile.ios.uikit.UILocalNotification,java.lang.Runnable)": {
      "reverse": "- (void) application:(UIApplication *) application handleActionWithIdentifier:(NSString *) identifier forLocalNotification:(UILocalNotification *) notification completionHandler:(void (^)(void)) completionHandler\n{\n    CM_Block_Reverse_cmioslayer_1* completionHandler$conv = [[CM_Block_Reverse_cmioslayer_1 alloc] initWithCMBlock:completionHandler];\n    [self handleActionWithIdentifierForLocalNotification___crossmobile_ios_uikit_UIApplication_java_lang_String_crossmobile_ios_uikit_UILocalNotification_java_lang_Runnable:(application ? application : JAVA_NULL) :(identifier ? identifier : JAVA_NULL) :(notification ? notification : JAVA_NULL) :completionHandler$conv];\n    [completionHandler$conv release];\n}\n\n",
      "revimport": [
        "CM_Block_Reverse_cmioslayer_1"
      ],
      "super": "- (void) handleActionWithIdentifierForLocalNotification___crossmobile_ios_uikit_UIApplication_java_lang_String_crossmobile_ios_uikit_UILocalNotification_java_lang_Runnable:(UIApplication*) application :(NSString*) identifier :(UILocalNotification*) notification :(id<java_lang_Runnable>) completionHandler \n{\n    [super application:(application == JAVA_NULL ? nil : application) handleActionWithIdentifier:(identifier == JAVA_NULL ? nil : identifier) forLocalNotification:(notification == JAVA_NULL ? nil : notification) completionHandler:(completionHandler == JAVA_NULL ? nil : ^{\n        [completionHandler run__];\n    })];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication",
        "crossmobile_ios_uikit_UILocalNotification",
        "java_lang_Runnable",
        "java_lang_String"
      ]
    },
    "handleActionWithIdentifierForRemoteNotification(crossmobile.ios.uikit.UIApplication,java.lang.String,java.util.Map,java.lang.Runnable)": {
      "reverse": "- (void) application:(UIApplication *) application handleActionWithIdentifier:(NSString *) identifier forRemoteNotification:(NSDictionary *) userInfo completionHandler:(void (^)(void)) completionHandler\n{\n    CM_Block_Reverse_cmioslayer_2* completionHandler$conv = [[CM_Block_Reverse_cmioslayer_2 alloc] initWithCMBlock:completionHandler];\n    [self handleActionWithIdentifierForRemoteNotification___crossmobile_ios_uikit_UIApplication_java_lang_String_java_util_Map_java_lang_Runnable:(application ? application : JAVA_NULL) :(identifier ? identifier : JAVA_NULL) :(userInfo ? userInfo : JAVA_NULL) :completionHandler$conv];\n    [completionHandler$conv release];\n}\n\n",
      "revimport": [
        "CM_Block_Reverse_cmioslayer_2"
      ],
      "super": "- (void) handleActionWithIdentifierForRemoteNotification___crossmobile_ios_uikit_UIApplication_java_lang_String_java_util_Map_java_lang_Runnable:(UIApplication*) application :(NSString*) identifier :(NSDictionary*) userInfo :(id<java_lang_Runnable>) completionHandler \n{\n    [super application:(application == JAVA_NULL ? nil : application) handleActionWithIdentifier:(identifier == JAVA_NULL ? nil : identifier) forRemoteNotification:(userInfo == JAVA_NULL ? nil : userInfo) completionHandler:(completionHandler == JAVA_NULL ? nil : ^{\n        [completionHandler run__];\n    })];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication",
        "java_lang_Runnable",
        "java_lang_String",
        "java_util_Map"
      ]
    },
    "openURL(crossmobile.ios.uikit.UIApplication,crossmobile.ios.foundation.NSURL,java.lang.String,java.lang.Object)": {
      "reverse": "- (BOOL) application:(UIApplication *) application openURL:(NSURL *) url sourceApplication:(NSString *) sourceApplication annotation:(id) annotation\n{\n    return [self openURL___crossmobile_ios_uikit_UIApplication_crossmobile_ios_foundation_NSURL_java_lang_String_java_lang_Object:(application ? application : JAVA_NULL) :(url ? url : JAVA_NULL) :(sourceApplication ? sourceApplication : JAVA_NULL) :(annotation ? annotation : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) openURL___crossmobile_ios_uikit_UIApplication_crossmobile_ios_foundation_NSURL_java_lang_String_java_lang_Object:(UIApplication*) application :(NSURL*) url :(NSString*) sourceApplication :(id) annotation \n{\n    return [super application:(application == JAVA_NULL ? nil : application) openURL:(url == JAVA_NULL ? nil : url) sourceApplication:(sourceApplication == JAVA_NULL ? nil : sourceApplication) annotation:(annotation == JAVA_NULL ? nil : annotation)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSURL",
        "crossmobile_ios_uikit_UIApplication",
        "java_lang_Object",
        "java_lang_String"
      ]
    },
    "protectedDataDidBecomeAvailable(crossmobile.ios.uikit.UIApplication)": {
      "reverse": "- (void) applicationProtectedDataDidBecomeAvailable:(UIApplication *) application\n{\n    [self protectedDataDidBecomeAvailable___crossmobile_ios_uikit_UIApplication:(application ? application : JAVA_NULL)];\n}\n\n",
      "super": "- (void) protectedDataDidBecomeAvailable___crossmobile_ios_uikit_UIApplication:(UIApplication*) application \n{\n    [super applicationProtectedDataDidBecomeAvailable:(application == JAVA_NULL ? nil : application)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "protectedDataWillBecomeUnavailable(crossmobile.ios.uikit.UIApplication)": {
      "reverse": "- (void) applicationProtectedDataWillBecomeUnavailable:(UIApplication *) application\n{\n    [self protectedDataWillBecomeUnavailable___crossmobile_ios_uikit_UIApplication:(application ? application : JAVA_NULL)];\n}\n\n",
      "super": "- (void) protectedDataWillBecomeUnavailable___crossmobile_ios_uikit_UIApplication:(UIApplication*) application \n{\n    [super applicationProtectedDataWillBecomeUnavailable:(application == JAVA_NULL ? nil : application)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "setWindow(crossmobile.ios.uikit.UIWindow)": {
      "reverse": "- (void) setWindow:(UIWindow *) window\n{\n    [self setWindow___crossmobile_ios_uikit_UIWindow:(window ? window : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setWindow___crossmobile_ios_uikit_UIWindow:(UIWindow*) window \n{\n    [super setWindow:(window == JAVA_NULL ? nil : window)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIWindow"
      ]
    },
    "significantTimeChange(crossmobile.ios.uikit.UIApplication)": {
      "reverse": "- (void) applicationSignificantTimeChange:(UIApplication *) application\n{\n    [self significantTimeChange___crossmobile_ios_uikit_UIApplication:(application ? application : JAVA_NULL)];\n}\n\n",
      "super": "- (void) significantTimeChange___crossmobile_ios_uikit_UIApplication:(UIApplication*) application \n{\n    [super applicationSignificantTimeChange:(application == JAVA_NULL ? nil : application)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "willChangeStatusBarFrame(crossmobile.ios.uikit.UIApplication,crossmobile.ios.coregraphics.CGRect)": {
      "reverse": "- (void) application:(UIApplication *) application willChangeStatusBarFrame:(CGRect) newStatusBarFrame\n{\n    crossmobile_ios_coregraphics_CGRect* newStatusBarFrame$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:newStatusBarFrame];\n    [self willChangeStatusBarFrame___crossmobile_ios_uikit_UIApplication_crossmobile_ios_coregraphics_CGRect:(application ? application : JAVA_NULL) :newStatusBarFrame$conv];\n    [newStatusBarFrame$conv release];\n}\n\n",
      "super": "- (void) willChangeStatusBarFrame___crossmobile_ios_uikit_UIApplication_crossmobile_ios_coregraphics_CGRect:(UIApplication*) application :(crossmobile_ios_coregraphics_CGRect*) newStatusBarFrame \n{\n    [super application:(application == JAVA_NULL ? nil : application) willChangeStatusBarFrame:[newStatusBarFrame getCGRect]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect",
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "willChangeStatusBarOrientation(crossmobile.ios.uikit.UIApplication,int,double)": {
      "reverse": "- (void) application:(UIApplication *) application willChangeStatusBarOrientation:(UIInterfaceOrientation) newStatusBarOrientation duration:(NSTimeInterval) duration\n{\n    [self willChangeStatusBarOrientation___crossmobile_ios_uikit_UIApplication_int_double:(application ? application : JAVA_NULL) :newStatusBarOrientation :duration];\n}\n\n",
      "super": "- (void) willChangeStatusBarOrientation___crossmobile_ios_uikit_UIApplication_int_double:(UIApplication*) application :(int) newStatusBarOrientation :(double) duration \n{\n    [super application:(application == JAVA_NULL ? nil : application) willChangeStatusBarOrientation:newStatusBarOrientation duration:duration];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "willEnterForeground(crossmobile.ios.uikit.UIApplication)": {
      "reverse": "- (void) applicationWillEnterForeground:(UIApplication *) application\n{\n    [self willEnterForeground___crossmobile_ios_uikit_UIApplication:(application ? application : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willEnterForeground___crossmobile_ios_uikit_UIApplication:(UIApplication*) application \n{\n    [super applicationWillEnterForeground:(application == JAVA_NULL ? nil : application)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "willResignActive(crossmobile.ios.uikit.UIApplication)": {
      "reverse": "- (void) applicationWillResignActive:(UIApplication *) application\n{\n    [self willResignActive___crossmobile_ios_uikit_UIApplication:(application ? application : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willResignActive___crossmobile_ios_uikit_UIApplication:(UIApplication*) application \n{\n    [super applicationWillResignActive:(application == JAVA_NULL ? nil : application)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "willTerminate(crossmobile.ios.uikit.UIApplication)": {
      "reverse": "- (void) applicationWillTerminate:(UIApplication *) application\n{\n    [self willTerminate___crossmobile_ios_uikit_UIApplication:(application ? application : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willTerminate___crossmobile_ios_uikit_UIApplication:(UIApplication*) application \n{\n    [super applicationWillTerminate:(application == JAVA_NULL ? nil : application)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIApplication"
      ]
    },
    "window()": {
      "reverse": "- (UIWindow *) window\n{\n    UIWindow * re$ult = [self window__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIWindow*) window__\n{\n    UIWindow* re$ult = [super window];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIWindow"
      ]
    }
  },
  "crossmobile.ios.uikit.UIBarButtonItem": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "customView()": {
      "reverse": "- (UIView *) customView\n{\n    UIView * re$ult = [self customView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) customView__\n{\n    UIView* re$ult = [super customView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "image()": null,
    "imageInsets()": null,
    "isEnabled()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "possibleTitles()": {
      "reverse": "- (NSSet<NSString *> *) possibleTitles\n{\n    NSSet<NSString *> * re$ult = [self possibleTitles__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSSet*) possibleTitles__\n{\n    NSSet* re$ult = [super possibleTitles];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Set"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setCustomView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) setCustomView:(UIView *) customView\n{\n    [self setCustomView___crossmobile_ios_uikit_UIView:(customView ? customView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setCustomView___crossmobile_ios_uikit_UIView:(UIView*) customView \n{\n    [super setCustomView:(customView == JAVA_NULL ? nil : customView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "setEnabled(boolean)": null,
    "setImage(crossmobile.ios.uikit.UIImage)": null,
    "setImageInsets(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setPossibleTitles(java.util.Set)": {
      "reverse": "- (void) setPossibleTitles:(NSSet<NSString *> *) possibleTitles\n{\n    [self setPossibleTitles___java_util_Set:(possibleTitles ? possibleTitles : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setPossibleTitles___java_util_Set:(NSSet*) possibleTitles \n{\n    [super setPossibleTitles:(possibleTitles == JAVA_NULL ? nil : possibleTitles)];\n}\n\n",
      "supimport": [
        "java_util_Set"
      ]
    },
    "setStyle(int)": {
      "reverse": "- (void) setStyle:(UIBarButtonItemStyle) style\n{\n    [self setStyle___int:style];\n}\n\n",
      "super": "- (void) setStyle___int:(int) style \n{\n    [super setStyle:style];\n}\n\n"
    },
    "setTag(int)": null,
    "setTarget(java.lang.Runnable)": {
      "reverse": "- (void) setTarget:(id) target\n{\n    [self setTarget___java_lang_Runnable:(target ? target : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTarget___java_lang_Runnable:(id<java_lang_Runnable>) target \n{\n    objc_setAssociatedObject(self, @selector(setTarget:), target, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setTarget:(target == JAVA_NULL ? nil : target)];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "setTitle(java.lang.String)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "setWidth(double)": {
      "reverse": "- (void) setWidth:(CGFloat) width\n{\n    [self setWidth___double:width];\n}\n\n",
      "super": "- (void) setWidth___double:(double) width \n{\n    [super setWidth:width];\n}\n\n"
    },
    "style()": {
      "reverse": "- (UIBarButtonItemStyle) style\n{\n    return [self style__];\n}\n\n",
      "super": "- (int) style__\n{\n    return [super style];\n}\n\n"
    },
    "tag()": null,
    "target()": {
      "reverse": "- (id) target\n{\n    id re$ult = [self target__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) target__\n{\n    id re$ult = [super target];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "title()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "width()": {
      "reverse": "- (CGFloat) width\n{\n    return [self width__];\n}\n\n",
      "super": "- (double) width__\n{\n    return [super width];\n}\n\n"
    }
  },
  "crossmobile.ios.uikit.UIBarItem": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "image()": {
      "reverse": "- (UIImage *) image\n{\n    UIImage * re$ult = [self image__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) image__\n{\n    UIImage* re$ult = [super image];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "imageInsets()": {
      "reverse": "- (UIEdgeInsets) imageInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* re$ult = [self imageInsets__];\n    UIEdgeInsets re$ult$conv = [re$ult getUIEdgeInsets];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_uikit_UIEdgeInsets*) imageInsets__\n{\n    return [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:[super imageInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "isEnabled()": {
      "reverse": "- (BOOL) isEnabled\n{\n    return [self isEnabled__];\n}\n\n",
      "super": "- (BOOL) isEnabled__\n{\n    return [super isEnabled];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setEnabled(boolean)": {
      "reverse": "- (void) setEnabled:(BOOL) enabled\n{\n    [self setEnabled___boolean:enabled];\n}\n\n",
      "super": "- (void) setEnabled___boolean:(BOOL) enabled \n{\n    [super setEnabled:enabled];\n}\n\n"
    },
    "setImage(crossmobile.ios.uikit.UIImage)": {
      "reverse": "- (void) setImage:(UIImage *) image\n{\n    [self setImage___crossmobile_ios_uikit_UIImage:(image ? image : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setImage___crossmobile_ios_uikit_UIImage:(UIImage*) image \n{\n    [super setImage:(image == JAVA_NULL ? nil : image)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setImageInsets(crossmobile.ios.uikit.UIEdgeInsets)": {
      "reverse": "- (void) setImageInsets:(UIEdgeInsets) imageInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* imageInsets$conv = [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:imageInsets];\n    [self setImageInsets___crossmobile_ios_uikit_UIEdgeInsets:imageInsets$conv];\n    [imageInsets$conv release];\n}\n\n",
      "super": "- (void) setImageInsets___crossmobile_ios_uikit_UIEdgeInsets:(crossmobile_ios_uikit_UIEdgeInsets*) imageInsets \n{\n    [super setImageInsets:[imageInsets getUIEdgeInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "setTag(int)": {
      "reverse": "- (void) setTag:(NSInteger) tag\n{\n    [self setTag___int:tag];\n}\n\n",
      "super": "- (void) setTag___int:(int) tag \n{\n    [super setTag:tag];\n}\n\n"
    },
    "setTitle(java.lang.String)": {
      "reverse": "- (void) setTitle:(NSString *) title\n{\n    [self setTitle___java_lang_String:(title ? title : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTitle___java_lang_String:(NSString*) title \n{\n    [super setTitle:(title == JAVA_NULL ? nil : title)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "tag()": {
      "reverse": "- (NSInteger) tag\n{\n    return [self tag__];\n}\n\n",
      "super": "- (int) tag__\n{\n    return [super tag];\n}\n\n"
    },
    "title()": {
      "reverse": "- (NSString *) title\n{\n    NSString * re$ult = [self title__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) title__\n{\n    NSString* re$ult = [super title];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIButton": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "addTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "adjustsImageWhenDisabled()": {
      "reverse": "- (BOOL) adjustsImageWhenDisabled\n{\n    return [self adjustsImageWhenDisabled__];\n}\n\n",
      "super": "- (BOOL) adjustsImageWhenDisabled__\n{\n    return [super adjustsImageWhenDisabled];\n}\n\n"
    },
    "adjustsImageWhenHighlighted()": {
      "reverse": "- (BOOL) adjustsImageWhenHighlighted\n{\n    return [self adjustsImageWhenHighlighted__];\n}\n\n",
      "super": "- (BOOL) adjustsImageWhenHighlighted__\n{\n    return [super adjustsImageWhenHighlighted];\n}\n\n"
    },
    "allTargets()": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "backgroundImageForState(int)": {
      "reverse": "- (UIImage *) backgroundImageForState:(UIControlState) state\n{\n    UIImage * re$ult = [self backgroundImageForState___int:state];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) backgroundImageForState___int:(int) state \n{\n    UIImage* re$ult = [super backgroundImageForState:state];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "buttonType()": {
      "reverse": "- (UIButtonType) buttonType\n{\n    return [self buttonType__];\n}\n\n",
      "super": "- (int) buttonType__\n{\n    return [super buttonType];\n}\n\n"
    },
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentEdgeInsets()": {
      "reverse": "- (UIEdgeInsets) contentEdgeInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* re$ult = [self contentEdgeInsets__];\n    UIEdgeInsets re$ult$conv = [re$ult getUIEdgeInsets];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_uikit_UIEdgeInsets*) contentEdgeInsets__\n{\n    return [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:[super contentEdgeInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "contentHorizontalAlignment()": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "contentVerticalAlignment()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "currentBackgroundImage()": {
      "reverse": "- (UIImage *) currentBackgroundImage\n{\n    UIImage * re$ult = [self currentBackgroundImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) currentBackgroundImage__\n{\n    UIImage* re$ult = [super currentBackgroundImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "currentImage()": {
      "reverse": "- (UIImage *) currentImage\n{\n    UIImage * re$ult = [self currentImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) currentImage__\n{\n    UIImage* re$ult = [super currentImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "currentTitle()": {
      "reverse": "- (NSString *) currentTitle\n{\n    NSString * re$ult = [self currentTitle__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) currentTitle__\n{\n    NSString* re$ult = [super currentTitle];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "currentTitleColor()": {
      "reverse": "- (UIColor *) currentTitleColor\n{\n    UIColor * re$ult = [self currentTitleColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) currentTitleColor__\n{\n    UIColor* re$ult = [super currentTitleColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "currentTitleShadowColor()": {
      "reverse": "- (UIColor *) currentTitleShadowColor\n{\n    UIColor * re$ult = [self currentTitleShadowColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) currentTitleShadowColor__\n{\n    UIColor* re$ult = [super currentTitleShadowColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "imageEdgeInsets()": {
      "reverse": "- (UIEdgeInsets) imageEdgeInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* re$ult = [self imageEdgeInsets__];\n    UIEdgeInsets re$ult$conv = [re$ult getUIEdgeInsets];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_uikit_UIEdgeInsets*) imageEdgeInsets__\n{\n    return [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:[super imageEdgeInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "imageForState(int)": {
      "reverse": "- (UIImage *) imageForState:(UIControlState) state\n{\n    UIImage * re$ult = [self imageForState___int:state];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) imageForState___int:(int) state \n{\n    UIImage* re$ult = [super imageForState:state];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "imageView()": {
      "reverse": "- (UIImageView *) imageView\n{\n    UIImageView * re$ult = [self imageView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImageView*) imageView__\n{\n    UIImageView* re$ult = [super imageView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImageView"
      ]
    },
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isEnabled()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isHighlighted()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isSelected()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendActionsForControlEvents(int)": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAdjustsImageWhenDisabled(boolean)": {
      "reverse": "- (void) setAdjustsImageWhenDisabled:(BOOL) adjustsImageWhenDisabled\n{\n    [self setAdjustsImageWhenDisabled___boolean:adjustsImageWhenDisabled];\n}\n\n",
      "super": "- (void) setAdjustsImageWhenDisabled___boolean:(BOOL) adjustsImageWhenDisabled \n{\n    [super setAdjustsImageWhenDisabled:adjustsImageWhenDisabled];\n}\n\n"
    },
    "setAdjustsImageWhenHighlighted(boolean)": {
      "reverse": "- (void) setAdjustsImageWhenHighlighted:(BOOL) adjustsImageWhenHighlighted\n{\n    [self setAdjustsImageWhenHighlighted___boolean:adjustsImageWhenHighlighted];\n}\n\n",
      "super": "- (void) setAdjustsImageWhenHighlighted___boolean:(BOOL) adjustsImageWhenHighlighted \n{\n    [super setAdjustsImageWhenHighlighted:adjustsImageWhenHighlighted];\n}\n\n"
    },
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBackgroundImage(crossmobile.ios.uikit.UIImage,int)": {
      "reverse": "- (void) setBackgroundImage:(UIImage *) image forState:(UIControlState) state\n{\n    [self setBackgroundImage___crossmobile_ios_uikit_UIImage_int:(image ? image : JAVA_NULL) :state];\n}\n\n",
      "super": "- (void) setBackgroundImage___crossmobile_ios_uikit_UIImage_int:(UIImage*) image :(int) state \n{\n    [super setBackgroundImage:(image == JAVA_NULL ? nil : image) forState:state];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentEdgeInsets(crossmobile.ios.uikit.UIEdgeInsets)": {
      "reverse": "- (void) setContentEdgeInsets:(UIEdgeInsets) contentEdgeInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* contentEdgeInsets$conv = [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:contentEdgeInsets];\n    [self setContentEdgeInsets___crossmobile_ios_uikit_UIEdgeInsets:contentEdgeInsets$conv];\n    [contentEdgeInsets$conv release];\n}\n\n",
      "super": "- (void) setContentEdgeInsets___crossmobile_ios_uikit_UIEdgeInsets:(crossmobile_ios_uikit_UIEdgeInsets*) contentEdgeInsets \n{\n    [super setContentEdgeInsets:[contentEdgeInsets getUIEdgeInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "setContentHorizontalAlignment(int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setContentVerticalAlignment(int)": null,
    "setEnabled(boolean)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHighlighted(boolean)": null,
    "setImage(crossmobile.ios.uikit.UIImage,int)": {
      "reverse": "- (void) setImage:(UIImage *) image forState:(UIControlState) state\n{\n    [self setImage___crossmobile_ios_uikit_UIImage_int:(image ? image : JAVA_NULL) :state];\n}\n\n",
      "super": "- (void) setImage___crossmobile_ios_uikit_UIImage_int:(UIImage*) image :(int) state \n{\n    [super setImage:(image == JAVA_NULL ? nil : image) forState:state];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setImageEdgeInsets(crossmobile.ios.uikit.UIEdgeInsets)": {
      "reverse": "- (void) setImageEdgeInsets:(UIEdgeInsets) imageEdgeInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* imageEdgeInsets$conv = [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:imageEdgeInsets];\n    [self setImageEdgeInsets___crossmobile_ios_uikit_UIEdgeInsets:imageEdgeInsets$conv];\n    [imageEdgeInsets$conv release];\n}\n\n",
      "super": "- (void) setImageEdgeInsets___crossmobile_ios_uikit_UIEdgeInsets:(crossmobile_ios_uikit_UIEdgeInsets*) imageEdgeInsets \n{\n    [super setImageEdgeInsets:[imageEdgeInsets getUIEdgeInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setSelected(boolean)": null,
    "setShowsTouchWhenHighlighted(boolean)": {
      "reverse": "- (void) setShowsTouchWhenHighlighted:(BOOL) showsTouchWhenHighlighted\n{\n    [self setShowsTouchWhenHighlighted___boolean:showsTouchWhenHighlighted];\n}\n\n",
      "super": "- (void) setShowsTouchWhenHighlighted___boolean:(BOOL) showsTouchWhenHighlighted \n{\n    [super setShowsTouchWhenHighlighted:showsTouchWhenHighlighted];\n}\n\n"
    },
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTitle(java.lang.String,int)": {
      "reverse": "- (void) setTitle:(NSString *) title forState:(UIControlState) state\n{\n    [self setTitle___java_lang_String_int:(title ? title : JAVA_NULL) :state];\n}\n\n",
      "super": "- (void) setTitle___java_lang_String_int:(NSString*) title :(int) state \n{\n    [super setTitle:(title == JAVA_NULL ? nil : title) forState:state];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTitleColor(crossmobile.ios.uikit.UIColor,int)": {
      "reverse": "- (void) setTitleColor:(UIColor *) color forState:(UIControlState) state\n{\n    [self setTitleColor___crossmobile_ios_uikit_UIColor_int:(color ? color : JAVA_NULL) :state];\n}\n\n",
      "super": "- (void) setTitleColor___crossmobile_ios_uikit_UIColor_int:(UIColor*) color :(int) state \n{\n    [super setTitleColor:(color == JAVA_NULL ? nil : color) forState:state];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setTitleEdgeInsets(crossmobile.ios.uikit.UIEdgeInsets)": {
      "reverse": "- (void) setTitleEdgeInsets:(UIEdgeInsets) titleEdgeInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* titleEdgeInsets$conv = [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:titleEdgeInsets];\n    [self setTitleEdgeInsets___crossmobile_ios_uikit_UIEdgeInsets:titleEdgeInsets$conv];\n    [titleEdgeInsets$conv release];\n}\n\n",
      "super": "- (void) setTitleEdgeInsets___crossmobile_ios_uikit_UIEdgeInsets:(crossmobile_ios_uikit_UIEdgeInsets*) titleEdgeInsets \n{\n    [super setTitleEdgeInsets:[titleEdgeInsets getUIEdgeInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "setTitleShadowColor(crossmobile.ios.uikit.UIColor,int)": {
      "reverse": "- (void) setTitleShadowColor:(UIColor *) color forState:(UIControlState) state\n{\n    [self setTitleShadowColor___crossmobile_ios_uikit_UIColor_int:(color ? color : JAVA_NULL) :state];\n}\n\n",
      "super": "- (void) setTitleShadowColor___crossmobile_ios_uikit_UIColor_int:(UIColor*) color :(int) state \n{\n    [super setTitleShadowColor:(color == JAVA_NULL ? nil : color) forState:state];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "showsTouchWhenHighlighted()": {
      "reverse": "- (BOOL) showsTouchWhenHighlighted\n{\n    return [self showsTouchWhenHighlighted__];\n}\n\n",
      "super": "- (BOOL) showsTouchWhenHighlighted__\n{\n    return [super showsTouchWhenHighlighted];\n}\n\n"
    },
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "state()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "titleColorForState(int)": {
      "reverse": "- (UIColor *) titleColorForState:(UIControlState) state\n{\n    UIColor * re$ult = [self titleColorForState___int:state];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) titleColorForState___int:(int) state \n{\n    UIColor* re$ult = [super titleColorForState:state];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "titleEdgeInsets()": {
      "reverse": "- (UIEdgeInsets) titleEdgeInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* re$ult = [self titleEdgeInsets__];\n    UIEdgeInsets re$ult$conv = [re$ult getUIEdgeInsets];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_uikit_UIEdgeInsets*) titleEdgeInsets__\n{\n    return [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:[super titleEdgeInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "titleForState(int)": {
      "reverse": "- (NSString *) titleForState:(UIControlState) state\n{\n    NSString * re$ult = [self titleForState___int:state];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) titleForState___int:(int) state \n{\n    NSString* re$ult = [super titleForState:state];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "titleLabel()": {
      "reverse": "- (UILabel *) titleLabel\n{\n    UILabel * re$ult = [self titleLabel__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UILabel*) titleLabel__\n{\n    UILabel* re$ult = [super titleLabel];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UILabel"
      ]
    },
    "titleShadowColorForState(int)": {
      "reverse": "- (UIColor *) titleShadowColorForState:(UIControlState) state\n{\n    UIColor * re$ult = [self titleShadowColorForState___int:state];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) titleShadowColorForState___int:(int) state \n{\n    UIColor* re$ult = [super titleShadowColorForState:state];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UIColor": {
    "CGColor()": {
      "reverse": "- (CGColorRef) CGColor\n{\n    crossmobile_ios_coregraphics_CGColor* re$ult = [self CGColor__];\n    [re$ult autorelease];\n    return re$ult->$reference;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGColor*) CGColor__\n{\n    return [[crossmobile_ios_coregraphics_CGColor alloc] initWithCGColor:[super CGColor]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGColor"
      ]
    },
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIControl": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "addTarget(crossmobile.ios.uikit.UIControlDelegate,int)": {
      "reverse": "- (void) addTarget:(id) target action:(SEL) action forControlEvents:(UIControlEvents) controlEvents\n{\n    [self addTarget___crossmobile_ios_uikit_UIControlDelegate_int:(target ? target : JAVA_NULL) :action :controlEvents];\n}\n\n",
      "super": "- (void) addTarget___crossmobile_ios_uikit_UIControlDelegate_int:(id<crossmobile_ios_uikit_UIControlDelegate>) target :(int) controlEvents \n{\n    if (target == JAVA_NULL)\n        return;\n    if (controlEvents == 0)\n        return;\n    objc_setAssociatedObject(self, (void*)target, target, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super addTarget:(target == JAVA_NULL ? nil : target) action:@selector(exec___crossmobile_ios_uikit_UIControl_crossmobile_ios_uikit_UIEvent::) forControlEvents:controlEvents];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_reflect_Method"
      ]
    },
    "allTargets()": {
      "reverse": "- (NSSet *) allTargets\n{\n    NSSet * re$ult = [self allTargets__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSSet*) allTargets__\n{\n    NSSet* re$ult = [super allTargets];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Set"
      ]
    },
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHorizontalAlignment()": {
      "reverse": "- (UIControlContentHorizontalAlignment) contentHorizontalAlignment\n{\n    return [self contentHorizontalAlignment__];\n}\n\n",
      "super": "- (int) contentHorizontalAlignment__\n{\n    return [super contentHorizontalAlignment];\n}\n\n"
    },
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "contentVerticalAlignment()": {
      "reverse": "- (UIControlContentVerticalAlignment) contentVerticalAlignment\n{\n    return [self contentVerticalAlignment__];\n}\n\n",
      "super": "- (int) contentVerticalAlignment__\n{\n    return [super contentVerticalAlignment];\n}\n\n"
    },
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isEnabled()": {
      "reverse": "- (BOOL) isEnabled\n{\n    return [self isEnabled__];\n}\n\n",
      "super": "- (BOOL) isEnabled__\n{\n    return [super isEnabled];\n}\n\n"
    },
    "isFirstResponder()": null,
    "isHidden()": null,
    "isHighlighted()": {
      "reverse": "- (BOOL) isHighlighted\n{\n    return [self isHighlighted__];\n}\n\n",
      "super": "- (BOOL) isHighlighted__\n{\n    return [super isHighlighted];\n}\n\n"
    },
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isSelected()": {
      "reverse": "- (BOOL) isSelected\n{\n    return [self isSelected__];\n}\n\n",
      "super": "- (BOOL) isSelected__\n{\n    return [super isSelected];\n}\n\n"
    },
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.uikit.UIControlDelegate,int)": {
      "reverse": "- (void) removeTarget:(id) target action:(SEL) action forControlEvents:(UIControlEvents) controlEvents\n{\n    [self removeTarget___crossmobile_ios_uikit_UIControlDelegate_int:(target ? target : JAVA_NULL) :action :controlEvents];\n}\n\n",
      "super": "- (void) removeTarget___crossmobile_ios_uikit_UIControlDelegate_int:(id<crossmobile_ios_uikit_UIControlDelegate>) target :(int) controlEvents \n{\n    if (target == JAVA_NULL)\n        return;\n    if (controlEvents == 0)\n        return;\n    objc_setAssociatedObject(self, (void*)target, nil, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super removeTarget:(target == JAVA_NULL ? nil : target) action:@selector(exec___crossmobile_ios_uikit_UIControl_crossmobile_ios_uikit_UIEvent::) forControlEvents:controlEvents];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_reflect_Method"
      ]
    },
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendActionsForControlEvents(int)": {
      "reverse": "- (void) sendActionsForControlEvents:(UIControlEvents) controlEvents\n{\n    [self sendActionsForControlEvents___int:controlEvents];\n}\n\n",
      "super": "- (void) sendActionsForControlEvents___int:(int) controlEvents \n{\n    [super sendActionsForControlEvents:controlEvents];\n}\n\n"
    },
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHorizontalAlignment(int)": {
      "reverse": "- (void) setContentHorizontalAlignment:(UIControlContentHorizontalAlignment) contentHorizontalAlignment\n{\n    [self setContentHorizontalAlignment___int:contentHorizontalAlignment];\n}\n\n",
      "super": "- (void) setContentHorizontalAlignment___int:(int) contentHorizontalAlignment \n{\n    [super setContentHorizontalAlignment:contentHorizontalAlignment];\n}\n\n"
    },
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setContentVerticalAlignment(int)": {
      "reverse": "- (void) setContentVerticalAlignment:(UIControlContentVerticalAlignment) contentVerticalAlignment\n{\n    [self setContentVerticalAlignment___int:contentVerticalAlignment];\n}\n\n",
      "super": "- (void) setContentVerticalAlignment___int:(int) contentVerticalAlignment \n{\n    [super setContentVerticalAlignment:contentVerticalAlignment];\n}\n\n"
    },
    "setEnabled(boolean)": {
      "reverse": "- (void) setEnabled:(BOOL) enabled\n{\n    [self setEnabled___boolean:enabled];\n}\n\n",
      "super": "- (void) setEnabled___boolean:(BOOL) enabled \n{\n    [super setEnabled:enabled];\n}\n\n"
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHighlighted(boolean)": {
      "reverse": "- (void) setHighlighted:(BOOL) highlighted\n{\n    [self setHighlighted___boolean:highlighted];\n}\n\n",
      "super": "- (void) setHighlighted___boolean:(BOOL) highlighted \n{\n    [super setHighlighted:highlighted];\n}\n\n"
    },
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setSelected(boolean)": {
      "reverse": "- (void) setSelected:(BOOL) selected\n{\n    [self setSelected___boolean:selected];\n}\n\n",
      "super": "- (void) setSelected___boolean:(BOOL) selected \n{\n    [super setSelected:selected];\n}\n\n"
    },
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "state()": {
      "reverse": "- (UIControlState) state\n{\n    return [self state__];\n}\n\n",
      "super": "- (int) state__\n{\n    return [super state];\n}\n\n"
    },
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UIDatePicker": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "addTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "allTargets()": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "calendar()": {
      "reverse": "- (NSCalendar *) calendar\n{\n    NSCalendar * re$ult = [self calendar__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSCalendar*) calendar__\n{\n    NSCalendar* re$ult = [super calendar];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSCalendar"
      ]
    },
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHorizontalAlignment()": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "contentVerticalAlignment()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "countDownDuration()": {
      "reverse": "- (NSTimeInterval) countDownDuration\n{\n    return [self countDownDuration__];\n}\n\n",
      "super": "- (double) countDownDuration__\n{\n    return [super countDownDuration];\n}\n\n"
    },
    "date()": {
      "reverse": "- (NSDate *) date\n{\n    NSDate * re$ult = [self date__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDate*) date__\n{\n    NSDate* re$ult = [super date];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate"
      ]
    },
    "datePickerMode()": {
      "reverse": "- (UIDatePickerMode) datePickerMode\n{\n    return [self datePickerMode__];\n}\n\n",
      "super": "- (int) datePickerMode__\n{\n    return [super datePickerMode];\n}\n\n"
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isEnabled()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isHighlighted()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isSelected()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "locale()": {
      "reverse": "- (NSLocale *) locale\n{\n    NSLocale * re$ult = [self locale__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLocale*) locale__\n{\n    NSLocale* re$ult = [super locale];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSLocale"
      ]
    },
    "maskView()": null,
    "maximumDate()": {
      "reverse": "- (NSDate *) maximumDate\n{\n    NSDate * re$ult = [self maximumDate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDate*) maximumDate__\n{\n    NSDate* re$ult = [super maximumDate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate"
      ]
    },
    "minimumDate()": {
      "reverse": "- (NSDate *) minimumDate\n{\n    NSDate * re$ult = [self minimumDate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDate*) minimumDate__\n{\n    NSDate* re$ult = [super minimumDate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate"
      ]
    },
    "minuteInterval()": {
      "reverse": "- (NSInteger) minuteInterval\n{\n    return [self minuteInterval__];\n}\n\n",
      "super": "- (int) minuteInterval__\n{\n    return [super minuteInterval];\n}\n\n"
    },
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendActionsForControlEvents(int)": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCalendar(crossmobile.ios.foundation.NSCalendar)": {
      "reverse": "- (void) setCalendar:(NSCalendar *) calendar\n{\n    [self setCalendar___crossmobile_ios_foundation_NSCalendar:(calendar ? calendar : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setCalendar___crossmobile_ios_foundation_NSCalendar:(NSCalendar*) calendar \n{\n    [super setCalendar:(calendar == JAVA_NULL ? nil : calendar)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSCalendar"
      ]
    },
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHorizontalAlignment(int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setContentVerticalAlignment(int)": null,
    "setCountDownDuration(double)": {
      "reverse": "- (void) setCountDownDuration:(NSTimeInterval) countDownDuration\n{\n    [self setCountDownDuration___double:countDownDuration];\n}\n\n",
      "super": "- (void) setCountDownDuration___double:(double) countDownDuration \n{\n    [super setCountDownDuration:countDownDuration];\n}\n\n"
    },
    "setDate(crossmobile.ios.foundation.NSDate)": {
      "reverse": "- (void) setDate:(NSDate *) date\n{\n    [self setDate___crossmobile_ios_foundation_NSDate:(date ? date : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDate___crossmobile_ios_foundation_NSDate:(NSDate*) date \n{\n    [super setDate:(date == JAVA_NULL ? nil : date)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate"
      ]
    },
    "setDate(crossmobile.ios.foundation.NSDate,boolean)": {
      "reverse": "- (void) setDate:(NSDate *) date animated:(BOOL) animated\n{\n    [self setDate___crossmobile_ios_foundation_NSDate_boolean:(date ? date : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) setDate___crossmobile_ios_foundation_NSDate_boolean:(NSDate*) date :(BOOL) animated \n{\n    [super setDate:(date == JAVA_NULL ? nil : date) animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate"
      ]
    },
    "setDatePickerMode(int)": {
      "reverse": "- (void) setDatePickerMode:(UIDatePickerMode) datePickerMode\n{\n    [self setDatePickerMode___int:datePickerMode];\n}\n\n",
      "super": "- (void) setDatePickerMode___int:(int) datePickerMode \n{\n    [super setDatePickerMode:datePickerMode];\n}\n\n"
    },
    "setEnabled(boolean)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHighlighted(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setLocale(crossmobile.ios.foundation.NSLocale)": {
      "reverse": "- (void) setLocale:(NSLocale *) locale\n{\n    [self setLocale___crossmobile_ios_foundation_NSLocale:(locale ? locale : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setLocale___crossmobile_ios_foundation_NSLocale:(NSLocale*) locale \n{\n    [super setLocale:(locale == JAVA_NULL ? nil : locale)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSLocale"
      ]
    },
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMaximumDate(crossmobile.ios.foundation.NSDate)": {
      "reverse": "- (void) setMaximumDate:(NSDate *) maximumDate\n{\n    [self setMaximumDate___crossmobile_ios_foundation_NSDate:(maximumDate ? maximumDate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setMaximumDate___crossmobile_ios_foundation_NSDate:(NSDate*) maximumDate \n{\n    [super setMaximumDate:(maximumDate == JAVA_NULL ? nil : maximumDate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate"
      ]
    },
    "setMinimumDate(crossmobile.ios.foundation.NSDate)": {
      "reverse": "- (void) setMinimumDate:(NSDate *) minimumDate\n{\n    [self setMinimumDate___crossmobile_ios_foundation_NSDate:(minimumDate ? minimumDate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setMinimumDate___crossmobile_ios_foundation_NSDate:(NSDate*) minimumDate \n{\n    [super setMinimumDate:(minimumDate == JAVA_NULL ? nil : minimumDate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate"
      ]
    },
    "setMinuteInterval(int)": {
      "reverse": "- (void) setMinuteInterval:(NSInteger) minuteInterval\n{\n    [self setMinuteInterval___int:minuteInterval];\n}\n\n",
      "super": "- (void) setMinuteInterval___int:(int) minuteInterval \n{\n    [super setMinuteInterval:minuteInterval];\n}\n\n"
    },
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setSelected(boolean)": null,
    "setTag(int)": null,
    "setTimeZone(crossmobile.ios.foundation.NSTimeZone)": {
      "reverse": "- (void) setTimeZone:(NSTimeZone *) timeZone\n{\n    [self setTimeZone___crossmobile_ios_foundation_NSTimeZone:(timeZone ? timeZone : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTimeZone___crossmobile_ios_foundation_NSTimeZone:(NSTimeZone*) timeZone \n{\n    [super setTimeZone:(timeZone == JAVA_NULL ? nil : timeZone)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSTimeZone"
      ]
    },
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "state()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "timeZone()": {
      "reverse": "- (NSTimeZone *) timeZone\n{\n    NSTimeZone * re$ult = [self timeZone__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSTimeZone*) timeZone__\n{\n    NSTimeZone* re$ult = [super timeZone];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSTimeZone"
      ]
    },
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UIDevice": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "batteryLevel()": {
      "reverse": "- (float) batteryLevel\n{\n    return [self batteryLevel__];\n}\n\n",
      "super": "- (float) batteryLevel__\n{\n    return [super batteryLevel];\n}\n\n"
    },
    "batteryState()": {
      "reverse": "- (UIDeviceBatteryState) batteryState\n{\n    return [self batteryState__];\n}\n\n",
      "super": "- (int) batteryState__\n{\n    return [super batteryState];\n}\n\n"
    },
    "beginGeneratingDeviceOrientationNotifications()": {
      "reverse": "- (void) beginGeneratingDeviceOrientationNotifications\n{\n    [self beginGeneratingDeviceOrientationNotifications__];\n}\n\n",
      "super": "- (void) beginGeneratingDeviceOrientationNotifications__\n{\n    [super beginGeneratingDeviceOrientationNotifications];\n}\n\n"
    },
    "endGeneratingDeviceOrientationNotifications()": {
      "reverse": "- (void) endGeneratingDeviceOrientationNotifications\n{\n    [self endGeneratingDeviceOrientationNotifications__];\n}\n\n",
      "super": "- (void) endGeneratingDeviceOrientationNotifications__\n{\n    [super endGeneratingDeviceOrientationNotifications];\n}\n\n"
    },
    "identifierForVendor()": {
      "reverse": "- (NSUUID *) identifierForVendor\n{\n    NSUUID * re$ult = [self identifierForVendor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSUUID*) identifierForVendor__\n{\n    NSUUID* re$ult = [super identifierForVendor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSUUID"
      ]
    },
    "isBatteryMonitoringEnabled()": {
      "reverse": "- (BOOL) isBatteryMonitoringEnabled\n{\n    return [self isBatteryMonitoringEnabled__];\n}\n\n",
      "super": "- (BOOL) isBatteryMonitoringEnabled__\n{\n    return [super isBatteryMonitoringEnabled];\n}\n\n"
    },
    "isGeneratingDeviceOrientationNotifications()": {
      "reverse": "- (BOOL) isGeneratingDeviceOrientationNotifications\n{\n    return [self isGeneratingDeviceOrientationNotifications__];\n}\n\n",
      "super": "- (BOOL) isGeneratingDeviceOrientationNotifications__\n{\n    return [super isGeneratingDeviceOrientationNotifications];\n}\n\n"
    },
    "isMultitaskingSupported()": {
      "reverse": "- (BOOL) isMultitaskingSupported\n{\n    return [self isMultitaskingSupported__];\n}\n\n",
      "super": "- (BOOL) isMultitaskingSupported__\n{\n    return [super isMultitaskingSupported];\n}\n\n"
    },
    "isProximityMonitoringEnabled()": {
      "reverse": "- (BOOL) isProximityMonitoringEnabled\n{\n    return [self isProximityMonitoringEnabled__];\n}\n\n",
      "super": "- (BOOL) isProximityMonitoringEnabled__\n{\n    return [super isProximityMonitoringEnabled];\n}\n\n"
    },
    "localizedModel()": {
      "reverse": "- (NSString *) localizedModel\n{\n    NSString * re$ult = [self localizedModel__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) localizedModel__\n{\n    NSString* re$ult = [super localizedModel];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "model()": {
      "reverse": "- (NSString *) model\n{\n    NSString * re$ult = [self model__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) model__\n{\n    NSString* re$ult = [super model];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "name()": {
      "reverse": "- (NSString *) name\n{\n    NSString * re$ult = [self name__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) name__\n{\n    NSString* re$ult = [super name];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "orientation()": {
      "reverse": "- (UIDeviceOrientation) orientation\n{\n    return [self orientation__];\n}\n\n",
      "super": "- (int) orientation__\n{\n    return [super orientation];\n}\n\n"
    },
    "proximityState()": {
      "reverse": "- (BOOL) proximityState\n{\n    return [self proximityState__];\n}\n\n",
      "super": "- (BOOL) proximityState__\n{\n    return [super proximityState];\n}\n\n"
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setBatteryMonitoringEnabled(boolean)": {
      "reverse": "- (void) setBatteryMonitoringEnabled:(BOOL) batteryMonitoringEnabled\n{\n    [self setBatteryMonitoringEnabled___boolean:batteryMonitoringEnabled];\n}\n\n",
      "super": "- (void) setBatteryMonitoringEnabled___boolean:(BOOL) batteryMonitoringEnabled \n{\n    [super setBatteryMonitoringEnabled:batteryMonitoringEnabled];\n}\n\n"
    },
    "setProximityMonitoringEnabled(boolean)": {
      "reverse": "- (void) setProximityMonitoringEnabled:(BOOL) proximityMonitoringEnabled\n{\n    [self setProximityMonitoringEnabled___boolean:proximityMonitoringEnabled];\n}\n\n",
      "super": "- (void) setProximityMonitoringEnabled___boolean:(BOOL) proximityMonitoringEnabled \n{\n    [super setProximityMonitoringEnabled:proximityMonitoringEnabled];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "systemName()": {
      "reverse": "- (NSString *) systemName\n{\n    NSString * re$ult = [self systemName__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) systemName__\n{\n    NSString* re$ult = [super systemName];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "systemVersion()": {
      "reverse": "- (NSString *) systemVersion\n{\n    NSString * re$ult = [self systemVersion__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) systemVersion__\n{\n    NSString* re$ult = [super systemVersion];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "userInterfaceIdiom()": {
      "reverse": "- (UIUserInterfaceIdiom) userInterfaceIdiom\n{\n    return [self userInterfaceIdiom__];\n}\n\n",
      "super": "- (int) userInterfaceIdiom__\n{\n    return [super userInterfaceIdiom];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIEvent": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "allTouches()": {
      "reverse": "- (NSSet<UITouch *> *) allTouches\n{\n    NSSet<UITouch *> * re$ult = [self allTouches__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSSet*) allTouches__\n{\n    NSSet* re$ult = [super allTouches];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Set"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "subtype()": {
      "reverse": "- (UIEventSubtype) subtype\n{\n    return [self subtype__];\n}\n\n",
      "super": "- (int) subtype__\n{\n    return [super subtype];\n}\n\n"
    },
    "timestamp()": {
      "reverse": "- (NSTimeInterval) timestamp\n{\n    return [self timestamp__];\n}\n\n",
      "super": "- (double) timestamp__\n{\n    return [super timestamp];\n}\n\n"
    },
    "type()": {
      "reverse": "- (UIEventType) type\n{\n    return [self type__];\n}\n\n",
      "super": "- (int) type__\n{\n    return [super type];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIFont": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "ascender()": {
      "reverse": "- (CGFloat) ascender\n{\n    return [self ascender__];\n}\n\n",
      "super": "- (double) ascender__\n{\n    return [super ascender];\n}\n\n"
    },
    "capHeight()": {
      "reverse": "- (CGFloat) capHeight\n{\n    return [self capHeight__];\n}\n\n",
      "super": "- (double) capHeight__\n{\n    return [super capHeight];\n}\n\n"
    },
    "descender()": {
      "reverse": "- (CGFloat) descender\n{\n    return [self descender__];\n}\n\n",
      "super": "- (double) descender__\n{\n    return [super descender];\n}\n\n"
    },
    "familyName()": {
      "reverse": "- (NSString *) familyName\n{\n    NSString * re$ult = [self familyName__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) familyName__\n{\n    NSString* re$ult = [super familyName];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "fontName()": {
      "reverse": "- (NSString *) fontName\n{\n    NSString * re$ult = [self fontName__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) fontName__\n{\n    NSString* re$ult = [super fontName];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "fontWithSize(double)": {
      "reverse": "- (UIFont *) fontWithSize:(CGFloat) fontSize\n{\n    UIFont * re$ult = [self fontWithSize___double:fontSize];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIFont*) fontWithSize___double:(double) fontSize \n{\n    UIFont* re$ult = [super fontWithSize:fontSize];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIFont"
      ]
    },
    "leading()": {
      "reverse": "- (CGFloat) leading\n{\n    return [self leading__];\n}\n\n",
      "super": "- (double) leading__\n{\n    return [super leading];\n}\n\n"
    },
    "lineHeight()": {
      "reverse": "- (CGFloat) lineHeight\n{\n    return [self lineHeight__];\n}\n\n",
      "super": "- (double) lineHeight__\n{\n    return [super lineHeight];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "pointSize()": {
      "reverse": "- (CGFloat) pointSize\n{\n    return [self pointSize__];\n}\n\n",
      "super": "- (double) pointSize__\n{\n    return [super pointSize];\n}\n\n"
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "xHeight()": {
      "reverse": "- (CGFloat) xHeight\n{\n    return [self xHeight__];\n}\n\n",
      "super": "- (double) xHeight__\n{\n    return [super xHeight];\n}\n\n"
    }
  },
  "crossmobile.ios.uikit.UIGestureRecognizer": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addTarget(crossmobile.ios.foundation.NSSelector)": {
      "reverse": "- (void) addTarget:(id) target action:(SEL) action\n{\n    [self addTarget___crossmobile_ios_foundation_NSSelector:(target ? target : JAVA_NULL) :action];\n}\n\n",
      "super": "- (void) addTarget___crossmobile_ios_foundation_NSSelector:(id<crossmobile_ios_foundation_NSSelector>) target \n{\n    objc_setAssociatedObject(self, (void*)target, target, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super addTarget:(target == JAVA_NULL ? nil : target) action:@selector(exec___java_lang_Object:)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_reflect_Method"
      ]
    },
    "canBePreventedByGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": {
      "reverse": "- (BOOL) canBePreventedByGestureRecognizer:(UIGestureRecognizer *) preventingGestureRecognizer\n{\n    return [self canBePreventedByGestureRecognizer___crossmobile_ios_uikit_UIGestureRecognizer:(preventingGestureRecognizer ? preventingGestureRecognizer : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) canBePreventedByGestureRecognizer___crossmobile_ios_uikit_UIGestureRecognizer:(UIGestureRecognizer*) preventingGestureRecognizer \n{\n    return [super canBePreventedByGestureRecognizer:(preventingGestureRecognizer == JAVA_NULL ? nil : preventingGestureRecognizer)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIGestureRecognizer"
      ]
    },
    "canPreventGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": {
      "reverse": "- (BOOL) canPreventGestureRecognizer:(UIGestureRecognizer *) preventedGestureRecognizer\n{\n    return [self canPreventGestureRecognizer___crossmobile_ios_uikit_UIGestureRecognizer:(preventedGestureRecognizer ? preventedGestureRecognizer : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) canPreventGestureRecognizer___crossmobile_ios_uikit_UIGestureRecognizer:(UIGestureRecognizer*) preventedGestureRecognizer \n{\n    return [super canPreventGestureRecognizer:(preventedGestureRecognizer == JAVA_NULL ? nil : preventedGestureRecognizer)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIGestureRecognizer"
      ]
    },
    "cancelsTouchesInView()": {
      "reverse": "- (BOOL) cancelsTouchesInView\n{\n    return [self cancelsTouchesInView__];\n}\n\n",
      "super": "- (BOOL) cancelsTouchesInView__\n{\n    return [super cancelsTouchesInView];\n}\n\n"
    },
    "delaysTouchesBegan()": {
      "reverse": "- (BOOL) delaysTouchesBegan\n{\n    return [self delaysTouchesBegan__];\n}\n\n",
      "super": "- (BOOL) delaysTouchesBegan__\n{\n    return [super delaysTouchesBegan];\n}\n\n"
    },
    "delaysTouchesEnded()": {
      "reverse": "- (BOOL) delaysTouchesEnded\n{\n    return [self delaysTouchesEnded__];\n}\n\n",
      "super": "- (BOOL) delaysTouchesEnded__\n{\n    return [super delaysTouchesEnded];\n}\n\n"
    },
    "delegate()": {
      "reverse": "- (id<UIGestureRecognizerDelegate>) delegate\n{\n    id<UIGestureRecognizerDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UIGestureRecognizerDelegate>) delegate__\n{\n    id<UIGestureRecognizerDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIGestureRecognizerDelegate"
      ]
    },
    "isEnabled()": {
      "reverse": "- (BOOL) isEnabled\n{\n    return [self isEnabled__];\n}\n\n",
      "super": "- (BOOL) isEnabled__\n{\n    return [super isEnabled];\n}\n\n"
    },
    "locationInView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (CGPoint) locationInView:(UIView *) view\n{\n    crossmobile_ios_coregraphics_CGPoint* re$ult = [self locationInView___crossmobile_ios_uikit_UIView:(view ? view : JAVA_NULL)];\n    CGPoint re$ult$conv = [re$ult getCGPoint];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPoint*) locationInView___crossmobile_ios_uikit_UIView:(UIView*) view \n{\n    return [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:[super locationInView:(view == JAVA_NULL ? nil : view)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "locationOfTouch(int,crossmobile.ios.uikit.UIView)": {
      "reverse": "- (CGPoint) locationOfTouch:(NSUInteger) touchIndex inView:(UIView *) view\n{\n    crossmobile_ios_coregraphics_CGPoint* re$ult = [self locationOfTouch___int_crossmobile_ios_uikit_UIView:touchIndex :(view ? view : JAVA_NULL)];\n    CGPoint re$ult$conv = [re$ult getCGPoint];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPoint*) locationOfTouch___int_crossmobile_ios_uikit_UIView:(int) touchIndex :(UIView*) view \n{\n    return [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:[super locationOfTouch:touchIndex inView:(view == JAVA_NULL ? nil : view)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "numberOfTouches()": {
      "reverse": "- (NSUInteger) numberOfTouches\n{\n    return [self numberOfTouches__];\n}\n\n",
      "super": "- (int) numberOfTouches__\n{\n    return [super numberOfTouches];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.foundation.NSSelector)": {
      "reverse": "- (void) removeTarget:(id) target action:(SEL) action\n{\n    [self removeTarget___crossmobile_ios_foundation_NSSelector:(target ? target : JAVA_NULL) :action];\n}\n\n",
      "super": "- (void) removeTarget___crossmobile_ios_foundation_NSSelector:(id<crossmobile_ios_foundation_NSSelector>) target \n{\n    objc_setAssociatedObject(self, (void*)target, nil, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super removeTarget:(target == JAVA_NULL ? nil : target) action:@selector(exec___java_lang_Object:)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_reflect_Method"
      ]
    },
    "requireGestureRecognizerToFail(crossmobile.ios.uikit.UIGestureRecognizer)": {
      "reverse": "- (void) requireGestureRecognizerToFail:(UIGestureRecognizer *) otherGestureRecognizer\n{\n    [self requireGestureRecognizerToFail___crossmobile_ios_uikit_UIGestureRecognizer:(otherGestureRecognizer ? otherGestureRecognizer : JAVA_NULL)];\n}\n\n",
      "super": "- (void) requireGestureRecognizerToFail___crossmobile_ios_uikit_UIGestureRecognizer:(UIGestureRecognizer*) otherGestureRecognizer \n{\n    [super requireGestureRecognizerToFail:(otherGestureRecognizer == JAVA_NULL ? nil : otherGestureRecognizer)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIGestureRecognizer"
      ]
    },
    "reset()": {
      "reverse": "- (void) reset\n{\n    [self reset__];\n}\n\n",
      "super": "- (void) reset__\n{\n    [super reset];\n}\n\n"
    },
    "setCancelsTouchesInView(boolean)": {
      "reverse": "- (void) setCancelsTouchesInView:(BOOL) cancelsTouchesInView\n{\n    [self setCancelsTouchesInView___boolean:cancelsTouchesInView];\n}\n\n",
      "super": "- (void) setCancelsTouchesInView___boolean:(BOOL) cancelsTouchesInView \n{\n    [super setCancelsTouchesInView:cancelsTouchesInView];\n}\n\n"
    },
    "setDelaysTouchesBegan(boolean)": {
      "reverse": "- (void) setDelaysTouchesBegan:(BOOL) delaysTouchesBegan\n{\n    [self setDelaysTouchesBegan___boolean:delaysTouchesBegan];\n}\n\n",
      "super": "- (void) setDelaysTouchesBegan___boolean:(BOOL) delaysTouchesBegan \n{\n    [super setDelaysTouchesBegan:delaysTouchesBegan];\n}\n\n"
    },
    "setDelaysTouchesEnded(boolean)": {
      "reverse": "- (void) setDelaysTouchesEnded:(BOOL) delaysTouchesEnded\n{\n    [self setDelaysTouchesEnded___boolean:delaysTouchesEnded];\n}\n\n",
      "super": "- (void) setDelaysTouchesEnded___boolean:(BOOL) delaysTouchesEnded \n{\n    [super setDelaysTouchesEnded:delaysTouchesEnded];\n}\n\n"
    },
    "setDelegate(crossmobile.ios.uikit.UIGestureRecognizerDelegate)": {
      "reverse": "- (void) setDelegate:(id<UIGestureRecognizerDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UIGestureRecognizerDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UIGestureRecognizerDelegate:(id<UIGestureRecognizerDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIGestureRecognizerDelegate"
      ]
    },
    "setEnabled(boolean)": {
      "reverse": "- (void) setEnabled:(BOOL) enabled\n{\n    [self setEnabled___boolean:enabled];\n}\n\n",
      "super": "- (void) setEnabled___boolean:(BOOL) enabled \n{\n    [super setEnabled:enabled];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "state()": {
      "reverse": "- (UIGestureRecognizerState) state\n{\n    return [self state__];\n}\n\n",
      "super": "- (int) state__\n{\n    return [super state];\n}\n\n"
    },
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": {
      "reverse": "- (void) touchesBegan:(NSSet<UITouch *> *) touches withEvent:(UIEvent *) event\n{\n    [self touchesBegan___java_util_Set_crossmobile_ios_uikit_UIEvent:(touches ? touches : JAVA_NULL) :(event ? event : JAVA_NULL)];\n}\n\n",
      "super": "- (void) touchesBegan___java_util_Set_crossmobile_ios_uikit_UIEvent:(NSSet*) touches :(UIEvent*) event \n{\n    [super touchesBegan:(touches == JAVA_NULL ? nil : touches) withEvent:(event == JAVA_NULL ? nil : event)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEvent",
        "java_util_Set"
      ]
    },
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": {
      "reverse": "- (void) touchesCancelled:(NSSet<UITouch *> *) touches withEvent:(UIEvent *) event\n{\n    [self touchesCancelled___java_util_Set_crossmobile_ios_uikit_UIEvent:(touches ? touches : JAVA_NULL) :(event ? event : JAVA_NULL)];\n}\n\n",
      "super": "- (void) touchesCancelled___java_util_Set_crossmobile_ios_uikit_UIEvent:(NSSet*) touches :(UIEvent*) event \n{\n    [super touchesCancelled:(touches == JAVA_NULL ? nil : touches) withEvent:(event == JAVA_NULL ? nil : event)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEvent",
        "java_util_Set"
      ]
    },
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": {
      "reverse": "- (void) touchesEnded:(NSSet<UITouch *> *) touches withEvent:(UIEvent *) event\n{\n    [self touchesEnded___java_util_Set_crossmobile_ios_uikit_UIEvent:(touches ? touches : JAVA_NULL) :(event ? event : JAVA_NULL)];\n}\n\n",
      "super": "- (void) touchesEnded___java_util_Set_crossmobile_ios_uikit_UIEvent:(NSSet*) touches :(UIEvent*) event \n{\n    [super touchesEnded:(touches == JAVA_NULL ? nil : touches) withEvent:(event == JAVA_NULL ? nil : event)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEvent",
        "java_util_Set"
      ]
    },
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": {
      "reverse": "- (void) touchesMoved:(NSSet<UITouch *> *) touches withEvent:(UIEvent *) event\n{\n    [self touchesMoved___java_util_Set_crossmobile_ios_uikit_UIEvent:(touches ? touches : JAVA_NULL) :(event ? event : JAVA_NULL)];\n}\n\n",
      "super": "- (void) touchesMoved___java_util_Set_crossmobile_ios_uikit_UIEvent:(NSSet*) touches :(UIEvent*) event \n{\n    [super touchesMoved:(touches == JAVA_NULL ? nil : touches) withEvent:(event == JAVA_NULL ? nil : event)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEvent",
        "java_util_Set"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "view()": {
      "reverse": "- (UIView *) view\n{\n    UIView * re$ult = [self view__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) view__\n{\n    UIView* re$ult = [super view];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    }
  },
  "crossmobile.ios.uikit.UIGestureRecognizerDelegate": {
    "shouldBegin(crossmobile.ios.uikit.UIGestureRecognizer)": {
      "reverse": "- (BOOL) gestureRecognizerShouldBegin:(UIGestureRecognizer *) gestureRecognizer\n{\n    return [self shouldBegin___crossmobile_ios_uikit_UIGestureRecognizer:(gestureRecognizer ? gestureRecognizer : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldBegin___crossmobile_ios_uikit_UIGestureRecognizer:(UIGestureRecognizer*) gestureRecognizer \n{\n    return [super gestureRecognizerShouldBegin:(gestureRecognizer == JAVA_NULL ? nil : gestureRecognizer)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIGestureRecognizer"
      ]
    },
    "shouldReceiveTouch(crossmobile.ios.uikit.UIGestureRecognizer,crossmobile.ios.uikit.UITouch)": {
      "reverse": "- (BOOL) gestureRecognizer:(UIGestureRecognizer *) gestureRecognizer shouldReceiveTouch:(UITouch *) touch\n{\n    return [self shouldReceiveTouch___crossmobile_ios_uikit_UIGestureRecognizer_crossmobile_ios_uikit_UITouch:(gestureRecognizer ? gestureRecognizer : JAVA_NULL) :(touch ? touch : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldReceiveTouch___crossmobile_ios_uikit_UIGestureRecognizer_crossmobile_ios_uikit_UITouch:(UIGestureRecognizer*) gestureRecognizer :(UITouch*) touch \n{\n    return [super gestureRecognizer:(gestureRecognizer == JAVA_NULL ? nil : gestureRecognizer) shouldReceiveTouch:(touch == JAVA_NULL ? nil : touch)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIGestureRecognizer",
        "crossmobile_ios_uikit_UITouch"
      ]
    },
    "shouldRecognizeSimultaneouslyWithGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer,crossmobile.ios.uikit.UIGestureRecognizer)": {
      "reverse": "- (BOOL) gestureRecognizer:(UIGestureRecognizer *) gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *) otherGestureRecognizer\n{\n    return [self shouldRecognizeSimultaneouslyWithGestureRecognizer___crossmobile_ios_uikit_UIGestureRecognizer_crossmobile_ios_uikit_UIGestureRecognizer:(gestureRecognizer ? gestureRecognizer : JAVA_NULL) :(otherGestureRecognizer ? otherGestureRecognizer : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldRecognizeSimultaneouslyWithGestureRecognizer___crossmobile_ios_uikit_UIGestureRecognizer_crossmobile_ios_uikit_UIGestureRecognizer:(UIGestureRecognizer*) gestureRecognizer :(UIGestureRecognizer*) otherGestureRecognizer \n{\n    return [super gestureRecognizer:(gestureRecognizer == JAVA_NULL ? nil : gestureRecognizer) shouldRecognizeSimultaneouslyWithGestureRecognizer:(otherGestureRecognizer == JAVA_NULL ? nil : otherGestureRecognizer)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIGestureRecognizer"
      ]
    }
  },
  "crossmobile.ios.uikit.UIImage": {
    "CGImage()": {
      "reverse": "- (CGImageRef) CGImage\n{\n    crossmobile_ios_coregraphics_CGImage* re$ult = [self CGImage__];\n    [re$ult autorelease];\n    return re$ult->$reference;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGImage*) CGImage__\n{\n    return [[crossmobile_ios_coregraphics_CGImage alloc] initWithCGImage:[super CGImage]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGImage"
      ]
    },
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "drawAtPoint(crossmobile.ios.coregraphics.CGPoint)": {
      "reverse": "- (void) drawAtPoint:(CGPoint) point\n{\n    crossmobile_ios_coregraphics_CGPoint* point$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:point];\n    [self drawAtPoint___crossmobile_ios_coregraphics_CGPoint:point$conv];\n    [point$conv release];\n}\n\n",
      "super": "- (void) drawAtPoint___crossmobile_ios_coregraphics_CGPoint:(crossmobile_ios_coregraphics_CGPoint*) point \n{\n    [super drawAtPoint:[point getCGPoint]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint"
      ]
    },
    "drawInRect(crossmobile.ios.coregraphics.CGRect)": {
      "reverse": "- (void) drawInRect:(CGRect) rect\n{\n    crossmobile_ios_coregraphics_CGRect* rect$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:rect];\n    [self drawInRect___crossmobile_ios_coregraphics_CGRect:rect$conv];\n    [rect$conv release];\n}\n\n",
      "super": "- (void) drawInRect___crossmobile_ios_coregraphics_CGRect:(crossmobile_ios_coregraphics_CGRect*) rect \n{\n    [super drawInRect:[rect getCGRect]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect"
      ]
    },
    "duration()": {
      "reverse": "- (NSTimeInterval) duration\n{\n    return [self duration__];\n}\n\n",
      "super": "- (double) duration__\n{\n    return [super duration];\n}\n\n"
    },
    "imageOrientation()": {
      "reverse": "- (UIImageOrientation) imageOrientation\n{\n    return [self imageOrientation__];\n}\n\n",
      "super": "- (int) imageOrientation__\n{\n    return [super imageOrientation];\n}\n\n"
    },
    "imageWithRenderingMode(int)": {
      "reverse": "- (UIImage *) imageWithRenderingMode:(UIImageRenderingMode) renderingMode\n{\n    UIImage * re$ult = [self imageWithRenderingMode___int:renderingMode];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) imageWithRenderingMode___int:(int) renderingMode \n{\n    UIImage* re$ult = [super imageWithRenderingMode:renderingMode];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "images()": {
      "reverse": "- (NSArray<UIImage *> *) images\n{\n    NSArray<UIImage *> * re$ult = [self images__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) images__\n{\n    NSArray* re$ult = [super images];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "renderingMode()": {
      "reverse": "- (UIImageRenderingMode) renderingMode\n{\n    return [self renderingMode__];\n}\n\n",
      "super": "- (int) renderingMode__\n{\n    return [super renderingMode];\n}\n\n"
    },
    "resizableImageWithCapInsets(crossmobile.ios.uikit.UIEdgeInsets)": {
      "reverse": "- (UIImage *) resizableImageWithCapInsets:(UIEdgeInsets) capInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* capInsets$conv = [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:capInsets];\n    UIImage * re$ult = [self resizableImageWithCapInsets___crossmobile_ios_uikit_UIEdgeInsets:capInsets$conv];\n    [capInsets$conv release];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) resizableImageWithCapInsets___crossmobile_ios_uikit_UIEdgeInsets:(crossmobile_ios_uikit_UIEdgeInsets*) capInsets \n{\n    UIImage* re$ult = [super resizableImageWithCapInsets:[capInsets getUIEdgeInsets]];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets",
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "resizableImageWithCapInsets(crossmobile.ios.uikit.UIEdgeInsets,int)": {
      "reverse": "- (UIImage *) resizableImageWithCapInsets:(UIEdgeInsets) capInsets resizingMode:(UIImageResizingMode) resizingMode\n{\n    crossmobile_ios_uikit_UIEdgeInsets* capInsets$conv = [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:capInsets];\n    UIImage * re$ult = [self resizableImageWithCapInsets___crossmobile_ios_uikit_UIEdgeInsets_int:capInsets$conv :resizingMode];\n    [capInsets$conv release];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) resizableImageWithCapInsets___crossmobile_ios_uikit_UIEdgeInsets_int:(crossmobile_ios_uikit_UIEdgeInsets*) capInsets :(int) resizingMode \n{\n    UIImage* re$ult = [super resizableImageWithCapInsets:[capInsets getUIEdgeInsets] resizingMode:resizingMode];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets",
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "scale()": {
      "reverse": "- (CGFloat) scale\n{\n    return [self scale__];\n}\n\n",
      "super": "- (double) scale__\n{\n    return [super scale];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "size()": {
      "reverse": "- (CGSize) size\n{\n    crossmobile_ios_coregraphics_CGSize* re$ult = [self size__];\n    CGSize re$ult$conv = [re$ult getCGSize];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGSize*) size__\n{\n    return [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:[super size]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "stretchableImageWithLeftCapWidth(int,int)": {
      "reverse": "- (UIImage *) stretchableImageWithLeftCapWidth:(NSInteger) leftCapWidth topCapHeight:(NSInteger) topCapHeight\n{\n    UIImage * re$ult = [self stretchableImageWithLeftCapWidth___int_int:leftCapWidth :topCapHeight];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) stretchableImageWithLeftCapWidth___int_int:(int) leftCapWidth :(int) topCapHeight \n{\n    UIImage* re$ult = [super stretchableImageWithLeftCapWidth:leftCapWidth topCapHeight:topCapHeight];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "supportsSecureCoding()": {
      "reverse": "- (BOOL) supportsSecureCoding\n{\n    return [self supportsSecureCoding__];\n}\n\n",
      "super": "- (BOOL) supportsSecureCoding__\n{\n    return [super supportsSecureCoding];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIImageView": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "animationImages()": {
      "reverse": "- (NSArray<UIImage *> *) animationImages\n{\n    NSArray<UIImage *> * re$ult = [self animationImages__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) animationImages__\n{\n    NSArray* re$ult = [super animationImages];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "highlightedAnimationImages()": {
      "reverse": "- (NSArray<UIImage *> *) highlightedAnimationImages\n{\n    NSArray<UIImage *> * re$ult = [self highlightedAnimationImages__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) highlightedAnimationImages__\n{\n    NSArray* re$ult = [super highlightedAnimationImages];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "highlightedImage()": {
      "reverse": "- (UIImage *) highlightedImage\n{\n    UIImage * re$ult = [self highlightedImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) highlightedImage__\n{\n    UIImage* re$ult = [super highlightedImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "image()": {
      "reverse": "- (UIImage *) image\n{\n    UIImage * re$ult = [self image__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) image__\n{\n    UIImage* re$ult = [super image];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isAnimating()": {
      "reverse": "- (BOOL) isAnimating\n{\n    return [self isAnimating__];\n}\n\n",
      "super": "- (BOOL) isAnimating__\n{\n    return [super isAnimating];\n}\n\n"
    },
    "isFirstResponder()": null,
    "isHidden()": null,
    "isHighlighted()": {
      "reverse": "- (BOOL) isHighlighted\n{\n    return [self isHighlighted__];\n}\n\n",
      "super": "- (BOOL) isHighlighted__\n{\n    return [super isHighlighted];\n}\n\n"
    },
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAnimationImages(java.util.List)": {
      "reverse": "- (void) setAnimationImages:(NSArray<UIImage *> *) animationImages\n{\n    [self setAnimationImages___java_util_List:(animationImages ? animationImages : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setAnimationImages___java_util_List:(NSArray*) animationImages \n{\n    [super setAnimationImages:(animationImages == JAVA_NULL ? nil : animationImages)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHighlighted(boolean)": {
      "reverse": "- (void) setHighlighted:(BOOL) highlighted\n{\n    [self setHighlighted___boolean:highlighted];\n}\n\n",
      "super": "- (void) setHighlighted___boolean:(BOOL) highlighted \n{\n    [super setHighlighted:highlighted];\n}\n\n"
    },
    "setHighlightedAnimationImages(java.util.List)": {
      "reverse": "- (void) setHighlightedAnimationImages:(NSArray<UIImage *> *) highlightedAnimationImages\n{\n    [self setHighlightedAnimationImages___java_util_List:(highlightedAnimationImages ? highlightedAnimationImages : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setHighlightedAnimationImages___java_util_List:(NSArray*) highlightedAnimationImages \n{\n    [super setHighlightedAnimationImages:(highlightedAnimationImages == JAVA_NULL ? nil : highlightedAnimationImages)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setHighlightedImage(crossmobile.ios.uikit.UIImage)": {
      "reverse": "- (void) setHighlightedImage:(UIImage *) highlightedImage\n{\n    [self setHighlightedImage___crossmobile_ios_uikit_UIImage:(highlightedImage ? highlightedImage : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setHighlightedImage___crossmobile_ios_uikit_UIImage:(UIImage*) highlightedImage \n{\n    [super setHighlightedImage:(highlightedImage == JAVA_NULL ? nil : highlightedImage)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setImage(crossmobile.ios.uikit.UIImage)": {
      "reverse": "- (void) setImage:(UIImage *) image\n{\n    [self setImage___crossmobile_ios_uikit_UIImage:(image ? image : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setImage___crossmobile_ios_uikit_UIImage:(UIImage*) image \n{\n    [super setImage:(image == JAVA_NULL ? nil : image)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "startAnimating()": {
      "reverse": "- (void) startAnimating\n{\n    [self startAnimating__];\n}\n\n",
      "super": "- (void) startAnimating__\n{\n    [super startAnimating];\n}\n\n"
    },
    "stopAnimating()": {
      "reverse": "- (void) stopAnimating\n{\n    [self stopAnimating__];\n}\n\n",
      "super": "- (void) stopAnimating__\n{\n    [super stopAnimating];\n}\n\n"
    },
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UILabel": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "adjustsFontSizeToFitWidth()": {
      "reverse": "- (BOOL) adjustsFontSizeToFitWidth\n{\n    return [self adjustsFontSizeToFitWidth__];\n}\n\n",
      "super": "- (BOOL) adjustsFontSizeToFitWidth__\n{\n    return [super adjustsFontSizeToFitWidth];\n}\n\n"
    },
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "baselineAdjustment()": {
      "reverse": "- (UIBaselineAdjustment) baselineAdjustment\n{\n    return [self baselineAdjustment__];\n}\n\n",
      "super": "- (int) baselineAdjustment__\n{\n    return [super baselineAdjustment];\n}\n\n"
    },
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "drawTextInRect(crossmobile.ios.coregraphics.CGRect)": {
      "reverse": "- (void) drawTextInRect:(CGRect) rect\n{\n    crossmobile_ios_coregraphics_CGRect* rect$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:rect];\n    [self drawTextInRect___crossmobile_ios_coregraphics_CGRect:rect$conv];\n    [rect$conv release];\n}\n\n",
      "super": "- (void) drawTextInRect___crossmobile_ios_coregraphics_CGRect:(crossmobile_ios_coregraphics_CGRect*) rect \n{\n    [super drawTextInRect:[rect getCGRect]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect"
      ]
    },
    "font()": {
      "reverse": "- (UIFont *) font\n{\n    UIFont * re$ult = [self font__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIFont*) font__\n{\n    UIFont* re$ult = [super font];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIFont"
      ]
    },
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "highlightedTextColor()": {
      "reverse": "- (UIColor *) highlightedTextColor\n{\n    UIColor * re$ult = [self highlightedTextColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) highlightedTextColor__\n{\n    UIColor* re$ult = [super highlightedTextColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isHighlighted()": {
      "reverse": "- (BOOL) isHighlighted\n{\n    return [self isHighlighted__];\n}\n\n",
      "super": "- (BOOL) isHighlighted__\n{\n    return [super isHighlighted];\n}\n\n"
    },
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "lineBreakMode()": {
      "reverse": "- (NSLineBreakMode) lineBreakMode\n{\n    return [self lineBreakMode__];\n}\n\n",
      "super": "- (int) lineBreakMode__\n{\n    return [super lineBreakMode];\n}\n\n"
    },
    "maskView()": null,
    "minimumScaleFactor()": {
      "reverse": "- (CGFloat) minimumScaleFactor\n{\n    return [self minimumScaleFactor__];\n}\n\n",
      "super": "- (double) minimumScaleFactor__\n{\n    return [super minimumScaleFactor];\n}\n\n"
    },
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "numberOfLines()": {
      "reverse": "- (NSInteger) numberOfLines\n{\n    return [self numberOfLines__];\n}\n\n",
      "super": "- (int) numberOfLines__\n{\n    return [super numberOfLines];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preferredMaxLayoutWidth()": {
      "reverse": "- (CGFloat) preferredMaxLayoutWidth\n{\n    return [self preferredMaxLayoutWidth__];\n}\n\n",
      "super": "- (double) preferredMaxLayoutWidth__\n{\n    return [super preferredMaxLayoutWidth];\n}\n\n"
    },
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAdjustsFontSizeToFitWidth(boolean)": {
      "reverse": "- (void) setAdjustsFontSizeToFitWidth:(BOOL) adjustsFontSizeToFitWidth\n{\n    [self setAdjustsFontSizeToFitWidth___boolean:adjustsFontSizeToFitWidth];\n}\n\n",
      "super": "- (void) setAdjustsFontSizeToFitWidth___boolean:(BOOL) adjustsFontSizeToFitWidth \n{\n    [super setAdjustsFontSizeToFitWidth:adjustsFontSizeToFitWidth];\n}\n\n"
    },
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBaselineAdjustment(int)": {
      "reverse": "- (void) setBaselineAdjustment:(UIBaselineAdjustment) baselineAdjustment\n{\n    [self setBaselineAdjustment___int:baselineAdjustment];\n}\n\n",
      "super": "- (void) setBaselineAdjustment___int:(int) baselineAdjustment \n{\n    [super setBaselineAdjustment:baselineAdjustment];\n}\n\n"
    },
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setFont(crossmobile.ios.uikit.UIFont)": {
      "reverse": "- (void) setFont:(UIFont *) font\n{\n    [self setFont___crossmobile_ios_uikit_UIFont:(font ? font : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setFont___crossmobile_ios_uikit_UIFont:(UIFont*) font \n{\n    [super setFont:(font == JAVA_NULL ? nil : font)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIFont"
      ]
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHighlighted(boolean)": {
      "reverse": "- (void) setHighlighted:(BOOL) highlighted\n{\n    [self setHighlighted___boolean:highlighted];\n}\n\n",
      "super": "- (void) setHighlighted___boolean:(BOOL) highlighted \n{\n    [super setHighlighted:highlighted];\n}\n\n"
    },
    "setHighlightedTextColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setHighlightedTextColor:(UIColor *) highlightedTextColor\n{\n    [self setHighlightedTextColor___crossmobile_ios_uikit_UIColor:(highlightedTextColor ? highlightedTextColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setHighlightedTextColor___crossmobile_ios_uikit_UIColor:(UIColor*) highlightedTextColor \n{\n    [super setHighlightedTextColor:(highlightedTextColor == JAVA_NULL ? nil : highlightedTextColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setLineBreakMode(int)": {
      "reverse": "- (void) setLineBreakMode:(NSLineBreakMode) lineBreakMode\n{\n    [self setLineBreakMode___int:lineBreakMode];\n}\n\n",
      "super": "- (void) setLineBreakMode___int:(int) lineBreakMode \n{\n    [super setLineBreakMode:lineBreakMode];\n}\n\n"
    },
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMinimumScaleFactor(double)": {
      "reverse": "- (void) setMinimumScaleFactor:(CGFloat) minimumScaleFactor\n{\n    [self setMinimumScaleFactor___double:minimumScaleFactor];\n}\n\n",
      "super": "- (void) setMinimumScaleFactor___double:(double) minimumScaleFactor \n{\n    [super setMinimumScaleFactor:minimumScaleFactor];\n}\n\n"
    },
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setNumberOfLines(int)": {
      "reverse": "- (void) setNumberOfLines:(NSInteger) numberOfLines\n{\n    [self setNumberOfLines___int:numberOfLines];\n}\n\n",
      "super": "- (void) setNumberOfLines___int:(int) numberOfLines \n{\n    [super setNumberOfLines:numberOfLines];\n}\n\n"
    },
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreferredMaxLayoutWidth(double)": {
      "reverse": "- (void) setPreferredMaxLayoutWidth:(CGFloat) preferredMaxLayoutWidth\n{\n    [self setPreferredMaxLayoutWidth___double:preferredMaxLayoutWidth];\n}\n\n",
      "super": "- (void) setPreferredMaxLayoutWidth___double:(double) preferredMaxLayoutWidth \n{\n    [super setPreferredMaxLayoutWidth:preferredMaxLayoutWidth];\n}\n\n"
    },
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setShadowColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setShadowColor:(UIColor *) shadowColor\n{\n    [self setShadowColor___crossmobile_ios_uikit_UIColor:(shadowColor ? shadowColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setShadowColor___crossmobile_ios_uikit_UIColor:(UIColor*) shadowColor \n{\n    [super setShadowColor:(shadowColor == JAVA_NULL ? nil : shadowColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setShadowOffset(crossmobile.ios.coregraphics.CGSize)": {
      "reverse": "- (void) setShadowOffset:(CGSize) shadowOffset\n{\n    crossmobile_ios_coregraphics_CGSize* shadowOffset$conv = [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:shadowOffset];\n    [self setShadowOffset___crossmobile_ios_coregraphics_CGSize:shadowOffset$conv];\n    [shadowOffset$conv release];\n}\n\n",
      "super": "- (void) setShadowOffset___crossmobile_ios_coregraphics_CGSize:(crossmobile_ios_coregraphics_CGSize*) shadowOffset \n{\n    [super setShadowOffset:[shadowOffset getCGSize]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "setTag(int)": null,
    "setText(java.lang.String)": {
      "reverse": "- (void) setText:(NSString *) text\n{\n    [self setText___java_lang_String:(text ? text : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setText___java_lang_String:(NSString*) text \n{\n    [super setText:(text == JAVA_NULL ? nil : text)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTextAlignment(int)": {
      "reverse": "- (void) setTextAlignment:(NSTextAlignment) textAlignment\n{\n    [self setTextAlignment___int:textAlignment];\n}\n\n",
      "super": "- (void) setTextAlignment___int:(int) textAlignment \n{\n    [super setTextAlignment:textAlignment];\n}\n\n"
    },
    "setTextColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setTextColor:(UIColor *) textColor\n{\n    [self setTextColor___crossmobile_ios_uikit_UIColor:(textColor ? textColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTextColor___crossmobile_ios_uikit_UIColor:(UIColor*) textColor \n{\n    [super setTextColor:(textColor == JAVA_NULL ? nil : textColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "shadowColor()": {
      "reverse": "- (UIColor *) shadowColor\n{\n    UIColor * re$ult = [self shadowColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) shadowColor__\n{\n    UIColor* re$ult = [super shadowColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "shadowOffset()": {
      "reverse": "- (CGSize) shadowOffset\n{\n    crossmobile_ios_coregraphics_CGSize* re$ult = [self shadowOffset__];\n    CGSize re$ult$conv = [re$ult getCGSize];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGSize*) shadowOffset__\n{\n    return [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:[super shadowOffset]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "text()": {
      "reverse": "- (NSString *) text\n{\n    NSString * re$ult = [self text__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) text__\n{\n    NSString* re$ult = [super text];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "textAlignment()": {
      "reverse": "- (NSTextAlignment) textAlignment\n{\n    return [self textAlignment__];\n}\n\n",
      "super": "- (int) textAlignment__\n{\n    return [super textAlignment];\n}\n\n"
    },
    "textColor()": {
      "reverse": "- (UIColor *) textColor\n{\n    UIColor * re$ult = [self textColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) textColor__\n{\n    UIColor* re$ult = [super textColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "textRectForBounds(crossmobile.ios.coregraphics.CGRect,int)": {
      "reverse": "- (CGRect) textRectForBounds:(CGRect) bounds limitedToNumberOfLines:(NSInteger) numberOfLines\n{\n    crossmobile_ios_coregraphics_CGRect* bounds$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:bounds];\n    crossmobile_ios_coregraphics_CGRect* re$ult = [self textRectForBounds___crossmobile_ios_coregraphics_CGRect_int:bounds$conv :numberOfLines];\n    CGRect re$ult$conv = [re$ult getCGRect];\n    [re$ult release];\n    [bounds$conv release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGRect*) textRectForBounds___crossmobile_ios_coregraphics_CGRect_int:(crossmobile_ios_coregraphics_CGRect*) bounds :(int) numberOfLines \n{\n    return [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:[super textRectForBounds:[bounds getCGRect] limitedToNumberOfLines:numberOfLines]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect"
      ]
    },
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UILayoutGuide": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "bottomAnchor()": {
      "reverse": "- (NSLayoutYAxisAnchor *) bottomAnchor\n{\n    NSLayoutYAxisAnchor * re$ult = [self bottomAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutYAxisAnchor*) bottomAnchor__\n{\n    NSLayoutYAxisAnchor* re$ult = [super bottomAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutYAxisAnchor"
      ]
    },
    "centerXAnchor()": {
      "reverse": "- (NSLayoutXAxisAnchor *) centerXAnchor\n{\n    NSLayoutXAxisAnchor * re$ult = [self centerXAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutXAxisAnchor*) centerXAnchor__\n{\n    NSLayoutXAxisAnchor* re$ult = [super centerXAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutXAxisAnchor"
      ]
    },
    "centerYAnchor()": {
      "reverse": "- (NSLayoutYAxisAnchor *) centerYAnchor\n{\n    NSLayoutYAxisAnchor * re$ult = [self centerYAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutYAxisAnchor*) centerYAnchor__\n{\n    NSLayoutYAxisAnchor* re$ult = [super centerYAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutYAxisAnchor"
      ]
    },
    "heightAnchor()": {
      "reverse": "- (NSLayoutDimension *) heightAnchor\n{\n    NSLayoutDimension * re$ult = [self heightAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutDimension*) heightAnchor__\n{\n    NSLayoutDimension* re$ult = [super heightAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutDimension"
      ]
    },
    "identifier()": {
      "reverse": "- (NSString *) identifier\n{\n    NSString * re$ult = [self identifier__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) identifier__\n{\n    NSString* re$ult = [super identifier];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "layoutFrame()": {
      "reverse": "- (CGRect) layoutFrame\n{\n    crossmobile_ios_coregraphics_CGRect* re$ult = [self layoutFrame__];\n    CGRect re$ult$conv = [re$ult getCGRect];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGRect*) layoutFrame__\n{\n    return [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:[super layoutFrame]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect"
      ]
    },
    "leadingAnchor()": {
      "reverse": "- (NSLayoutXAxisAnchor *) leadingAnchor\n{\n    NSLayoutXAxisAnchor * re$ult = [self leadingAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutXAxisAnchor*) leadingAnchor__\n{\n    NSLayoutXAxisAnchor* re$ult = [super leadingAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutXAxisAnchor"
      ]
    },
    "leftAnchor()": {
      "reverse": "- (NSLayoutXAxisAnchor *) leftAnchor\n{\n    NSLayoutXAxisAnchor * re$ult = [self leftAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutXAxisAnchor*) leftAnchor__\n{\n    NSLayoutXAxisAnchor* re$ult = [super leftAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutXAxisAnchor"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "owningView()": {
      "reverse": "- (UIView *) owningView\n{\n    UIView * re$ult = [self owningView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) owningView__\n{\n    UIView* re$ult = [super owningView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "rightAnchor()": {
      "reverse": "- (NSLayoutXAxisAnchor *) rightAnchor\n{\n    NSLayoutXAxisAnchor * re$ult = [self rightAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutXAxisAnchor*) rightAnchor__\n{\n    NSLayoutXAxisAnchor* re$ult = [super rightAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutXAxisAnchor"
      ]
    },
    "setIdentifier(java.lang.String)": {
      "reverse": "- (void) setIdentifier:(NSString *) identifier\n{\n    [self setIdentifier___java_lang_String:(identifier ? identifier : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setIdentifier___java_lang_String:(NSString*) identifier \n{\n    [super setIdentifier:(identifier == JAVA_NULL ? nil : identifier)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setOwningView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) setOwningView:(UIView *) owningView\n{\n    [self setOwningView___crossmobile_ios_uikit_UIView:(owningView ? owningView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setOwningView___crossmobile_ios_uikit_UIView:(UIView*) owningView \n{\n    [super setOwningView:(owningView == JAVA_NULL ? nil : owningView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "topAnchor()": {
      "reverse": "- (NSLayoutYAxisAnchor *) topAnchor\n{\n    NSLayoutYAxisAnchor * re$ult = [self topAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutYAxisAnchor*) topAnchor__\n{\n    NSLayoutYAxisAnchor* re$ult = [super topAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutYAxisAnchor"
      ]
    },
    "trailingAnchor()": {
      "reverse": "- (NSLayoutXAxisAnchor *) trailingAnchor\n{\n    NSLayoutXAxisAnchor * re$ult = [self trailingAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutXAxisAnchor*) trailingAnchor__\n{\n    NSLayoutXAxisAnchor* re$ult = [super trailingAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutXAxisAnchor"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "widthAnchor()": {
      "reverse": "- (NSLayoutDimension *) widthAnchor\n{\n    NSLayoutDimension * re$ult = [self widthAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutDimension*) widthAnchor__\n{\n    NSLayoutDimension* re$ult = [super widthAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutDimension"
      ]
    }
  },
  "crossmobile.ios.uikit.UILayoutSupport": {
    "bottomAnchor()": {
      "reverse": "- (NSLayoutYAxisAnchor *) bottomAnchor\n{\n    NSLayoutYAxisAnchor * re$ult = [self bottomAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutYAxisAnchor*) bottomAnchor__\n{\n    NSLayoutYAxisAnchor* re$ult = [super bottomAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutYAxisAnchor"
      ]
    },
    "heightAnchor()": {
      "reverse": "- (NSLayoutDimension *) heightAnchor\n{\n    NSLayoutDimension * re$ult = [self heightAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutDimension*) heightAnchor__\n{\n    NSLayoutDimension* re$ult = [super heightAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutDimension"
      ]
    },
    "length()": {
      "reverse": "- (CGFloat) length\n{\n    return [self length__];\n}\n\n",
      "super": "- (double) length__\n{\n    return [super length];\n}\n\n"
    },
    "topAnchor()": {
      "reverse": "- (NSLayoutYAxisAnchor *) topAnchor\n{\n    NSLayoutYAxisAnchor * re$ult = [self topAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutYAxisAnchor*) topAnchor__\n{\n    NSLayoutYAxisAnchor* re$ult = [super topAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutYAxisAnchor"
      ]
    }
  },
  "crossmobile.ios.uikit.UILocalNotification": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "alertAction()": {
      "reverse": "- (NSString *) alertAction\n{\n    NSString * re$ult = [self alertAction__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) alertAction__\n{\n    NSString* re$ult = [super alertAction];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "alertBody()": {
      "reverse": "- (NSString *) alertBody\n{\n    NSString * re$ult = [self alertBody__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) alertBody__\n{\n    NSString* re$ult = [super alertBody];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "alertLaunchImage()": {
      "reverse": "- (NSString *) alertLaunchImage\n{\n    NSString * re$ult = [self alertLaunchImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) alertLaunchImage__\n{\n    NSString* re$ult = [super alertLaunchImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "applicationIconBadgeNumber()": {
      "reverse": "- (NSInteger) applicationIconBadgeNumber\n{\n    return [self applicationIconBadgeNumber__];\n}\n\n",
      "super": "- (int) applicationIconBadgeNumber__\n{\n    return [super applicationIconBadgeNumber];\n}\n\n"
    },
    "fireDate()": {
      "reverse": "- (NSDate *) fireDate\n{\n    NSDate * re$ult = [self fireDate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDate*) fireDate__\n{\n    NSDate* re$ult = [super fireDate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate"
      ]
    },
    "hasAction()": {
      "reverse": "- (BOOL) hasAction\n{\n    return [self hasAction__];\n}\n\n",
      "super": "- (BOOL) hasAction__\n{\n    return [super hasAction];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "repeatCalendar()": {
      "reverse": "- (NSCalendar *) repeatCalendar\n{\n    NSCalendar * re$ult = [self repeatCalendar__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSCalendar*) repeatCalendar__\n{\n    NSCalendar* re$ult = [super repeatCalendar];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSCalendar"
      ]
    },
    "repeatInterval()": {
      "reverse": "- (NSCalendarUnit) repeatInterval\n{\n    return [self repeatInterval__];\n}\n\n",
      "super": "- (int) repeatInterval__\n{\n    return [super repeatInterval];\n}\n\n"
    },
    "setAlertAction(java.lang.String)": {
      "reverse": "- (void) setAlertAction:(NSString *) alertAction\n{\n    [self setAlertAction___java_lang_String:(alertAction ? alertAction : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setAlertAction___java_lang_String:(NSString*) alertAction \n{\n    [super setAlertAction:(alertAction == JAVA_NULL ? nil : alertAction)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setAlertBody(java.lang.String)": {
      "reverse": "- (void) setAlertBody:(NSString *) alertBody\n{\n    [self setAlertBody___java_lang_String:(alertBody ? alertBody : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setAlertBody___java_lang_String:(NSString*) alertBody \n{\n    [super setAlertBody:(alertBody == JAVA_NULL ? nil : alertBody)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setAlertLaunchImage(java.lang.String)": {
      "reverse": "- (void) setAlertLaunchImage:(NSString *) alertLaunchImage\n{\n    [self setAlertLaunchImage___java_lang_String:(alertLaunchImage ? alertLaunchImage : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setAlertLaunchImage___java_lang_String:(NSString*) alertLaunchImage \n{\n    [super setAlertLaunchImage:(alertLaunchImage == JAVA_NULL ? nil : alertLaunchImage)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setApplicationIconBadgeNumber(int)": {
      "reverse": "- (void) setApplicationIconBadgeNumber:(NSInteger) applicationIconBadgeNumber\n{\n    [self setApplicationIconBadgeNumber___int:applicationIconBadgeNumber];\n}\n\n",
      "super": "- (void) setApplicationIconBadgeNumber___int:(int) applicationIconBadgeNumber \n{\n    [super setApplicationIconBadgeNumber:applicationIconBadgeNumber];\n}\n\n"
    },
    "setFireDate(crossmobile.ios.foundation.NSDate)": {
      "reverse": "- (void) setFireDate:(NSDate *) fireDate\n{\n    [self setFireDate___crossmobile_ios_foundation_NSDate:(fireDate ? fireDate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setFireDate___crossmobile_ios_foundation_NSDate:(NSDate*) fireDate \n{\n    [super setFireDate:(fireDate == JAVA_NULL ? nil : fireDate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSDate"
      ]
    },
    "setHasAction(boolean)": {
      "reverse": "- (void) setHasAction:(BOOL) hasAction\n{\n    [self setHasAction___boolean:hasAction];\n}\n\n",
      "super": "- (void) setHasAction___boolean:(BOOL) hasAction \n{\n    [super setHasAction:hasAction];\n}\n\n"
    },
    "setRepeatCalendar(crossmobile.ios.foundation.NSCalendar)": {
      "reverse": "- (void) setRepeatCalendar:(NSCalendar *) repeatCalendar\n{\n    [self setRepeatCalendar___crossmobile_ios_foundation_NSCalendar:(repeatCalendar ? repeatCalendar : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setRepeatCalendar___crossmobile_ios_foundation_NSCalendar:(NSCalendar*) repeatCalendar \n{\n    [super setRepeatCalendar:(repeatCalendar == JAVA_NULL ? nil : repeatCalendar)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSCalendar"
      ]
    },
    "setRepeatInterval(int)": {
      "reverse": "- (void) setRepeatInterval:(NSCalendarUnit) repeatInterval\n{\n    [self setRepeatInterval___int:repeatInterval];\n}\n\n",
      "super": "- (void) setRepeatInterval___int:(int) repeatInterval \n{\n    [super setRepeatInterval:repeatInterval];\n}\n\n"
    },
    "setSoundName(java.lang.String)": {
      "reverse": "- (void) setSoundName:(NSString *) soundName\n{\n    [self setSoundName___java_lang_String:(soundName ? soundName : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setSoundName___java_lang_String:(NSString*) soundName \n{\n    [super setSoundName:(soundName == JAVA_NULL ? nil : soundName)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTimeZone(crossmobile.ios.foundation.NSTimeZone)": {
      "reverse": "- (void) setTimeZone:(NSTimeZone *) timeZone\n{\n    [self setTimeZone___crossmobile_ios_foundation_NSTimeZone:(timeZone ? timeZone : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTimeZone___crossmobile_ios_foundation_NSTimeZone:(NSTimeZone*) timeZone \n{\n    [super setTimeZone:(timeZone == JAVA_NULL ? nil : timeZone)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSTimeZone"
      ]
    },
    "setUserInfo(java.util.Map)": {
      "reverse": "- (void) setUserInfo:(NSDictionary *) userInfo\n{\n    [self setUserInfo___java_util_Map:(userInfo ? userInfo : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setUserInfo___java_util_Map:(NSDictionary*) userInfo \n{\n    [super setUserInfo:(userInfo == JAVA_NULL ? nil : userInfo)];\n}\n\n",
      "supimport": [
        "java_util_Map"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "soundName()": {
      "reverse": "- (NSString *) soundName\n{\n    NSString * re$ult = [self soundName__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) soundName__\n{\n    NSString* re$ult = [super soundName];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "timeZone()": {
      "reverse": "- (NSTimeZone *) timeZone\n{\n    NSTimeZone * re$ult = [self timeZone__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSTimeZone*) timeZone__\n{\n    NSTimeZone* re$ult = [super timeZone];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSTimeZone"
      ]
    },
    "userInfo()": {
      "reverse": "- (NSDictionary *) userInfo\n{\n    NSDictionary * re$ult = [self userInfo__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDictionary*) userInfo__\n{\n    NSDictionary* re$ult = [super userInfo];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Map"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UILongPressGestureRecognizer": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addTarget(crossmobile.ios.foundation.NSSelector)": null,
    "allowableMovement()": {
      "reverse": "- (CGFloat) allowableMovement\n{\n    return [self allowableMovement__];\n}\n\n",
      "super": "- (double) allowableMovement__\n{\n    return [super allowableMovement];\n}\n\n"
    },
    "canBePreventedByGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "canPreventGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "cancelsTouchesInView()": null,
    "delaysTouchesBegan()": null,
    "delaysTouchesEnded()": null,
    "delegate()": null,
    "isEnabled()": null,
    "locationInView(crossmobile.ios.uikit.UIView)": null,
    "locationOfTouch(int,crossmobile.ios.uikit.UIView)": null,
    "minimumPressDuration()": {
      "reverse": "- (CFTimeInterval) minimumPressDuration\n{\n    return [self minimumPressDuration__];\n}\n\n",
      "super": "- (double) minimumPressDuration__\n{\n    return [super minimumPressDuration];\n}\n\n"
    },
    "numberOfTapsRequired()": {
      "reverse": "- (NSUInteger) numberOfTapsRequired\n{\n    return [self numberOfTapsRequired__];\n}\n\n",
      "super": "- (int) numberOfTapsRequired__\n{\n    return [super numberOfTapsRequired];\n}\n\n"
    },
    "numberOfTouches()": null,
    "numberOfTouchesRequired()": {
      "reverse": "- (NSUInteger) numberOfTouchesRequired\n{\n    return [self numberOfTouchesRequired__];\n}\n\n",
      "super": "- (int) numberOfTouchesRequired__\n{\n    return [super numberOfTouchesRequired];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.foundation.NSSelector)": null,
    "requireGestureRecognizerToFail(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "reset()": null,
    "setAllowableMovement(double)": {
      "reverse": "- (void) setAllowableMovement:(CGFloat) allowableMovement\n{\n    [self setAllowableMovement___double:allowableMovement];\n}\n\n",
      "super": "- (void) setAllowableMovement___double:(double) allowableMovement \n{\n    [super setAllowableMovement:allowableMovement];\n}\n\n"
    },
    "setCancelsTouchesInView(boolean)": null,
    "setDelaysTouchesBegan(boolean)": null,
    "setDelaysTouchesEnded(boolean)": null,
    "setDelegate(crossmobile.ios.uikit.UIGestureRecognizerDelegate)": null,
    "setEnabled(boolean)": null,
    "setMinimumPressDuration(double)": {
      "reverse": "- (void) setMinimumPressDuration:(CFTimeInterval) minimumPressDuration\n{\n    [self setMinimumPressDuration___double:minimumPressDuration];\n}\n\n",
      "super": "- (void) setMinimumPressDuration___double:(double) minimumPressDuration \n{\n    [super setMinimumPressDuration:minimumPressDuration];\n}\n\n"
    },
    "setNumberOfTapsRequired(int)": {
      "reverse": "- (void) setNumberOfTapsRequired:(NSUInteger) numberOfTapsRequired\n{\n    [self setNumberOfTapsRequired___int:numberOfTapsRequired];\n}\n\n",
      "super": "- (void) setNumberOfTapsRequired___int:(int) numberOfTapsRequired \n{\n    [super setNumberOfTapsRequired:numberOfTapsRequired];\n}\n\n"
    },
    "setNumberOfTouchesRequired(int)": {
      "reverse": "- (void) setNumberOfTouchesRequired:(NSUInteger) numberOfTouchesRequired\n{\n    [self setNumberOfTouchesRequired___int:numberOfTouchesRequired];\n}\n\n",
      "super": "- (void) setNumberOfTouchesRequired___int:(int) numberOfTouchesRequired \n{\n    [super setNumberOfTouchesRequired:numberOfTouchesRequired];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "state()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "view()": null
  },
  "crossmobile.ios.uikit.UINavigationBar": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backItem()": {
      "reverse": "- (UINavigationItem *) backItem\n{\n    UINavigationItem * re$ult = [self backItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UINavigationItem*) backItem__\n{\n    UINavigationItem* re$ult = [super backItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationItem"
      ]
    },
    "backgroundColor()": null,
    "barStyle()": {
      "reverse": "- (UIBarStyle) barStyle\n{\n    return [self barStyle__];\n}\n\n",
      "super": "- (int) barStyle__\n{\n    return [super barStyle];\n}\n\n"
    },
    "barTintColor()": {
      "reverse": "- (UIColor *) barTintColor\n{\n    UIColor * re$ult = [self barTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) barTintColor__\n{\n    UIColor* re$ult = [super barTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "delegate()": {
      "reverse": "- (id<UINavigationBarDelegate>) delegate\n{\n    id<UINavigationBarDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UINavigationBarDelegate>) delegate__\n{\n    id<UINavigationBarDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationBarDelegate"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isTranslucent()": {
      "reverse": "- (BOOL) isTranslucent\n{\n    return [self isTranslucent__];\n}\n\n",
      "super": "- (BOOL) isTranslucent__\n{\n    return [super isTranslucent];\n}\n\n"
    },
    "isUserInteractionEnabled()": null,
    "items()": {
      "reverse": "- (NSArray<UINavigationItem *> *) items\n{\n    NSArray<UINavigationItem *> * re$ult = [self items__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) items__\n{\n    NSArray* re$ult = [super items];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "popNavigationItemAnimated(boolean)": {
      "reverse": "- (UINavigationItem *) popNavigationItemAnimated:(BOOL) animated\n{\n    UINavigationItem * re$ult = [self popNavigationItemAnimated___boolean:animated];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UINavigationItem*) popNavigationItemAnimated___boolean:(BOOL) animated \n{\n    UINavigationItem* re$ult = [super popNavigationItemAnimated:animated];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationItem"
      ]
    },
    "preservesSuperviewLayoutMargins()": null,
    "pushNavigationItem(crossmobile.ios.uikit.UINavigationItem,boolean)": {
      "reverse": "- (void) pushNavigationItem:(UINavigationItem *) item animated:(BOOL) animated\n{\n    [self pushNavigationItem___crossmobile_ios_uikit_UINavigationItem_boolean:(item ? item : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) pushNavigationItem___crossmobile_ios_uikit_UINavigationItem_boolean:(UINavigationItem*) item :(BOOL) animated \n{\n    [super pushNavigationItem:(item == JAVA_NULL ? nil : item) animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationItem"
      ]
    },
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBarStyle(int)": {
      "reverse": "- (void) setBarStyle:(UIBarStyle) barStyle\n{\n    [self setBarStyle___int:barStyle];\n}\n\n",
      "super": "- (void) setBarStyle___int:(int) barStyle \n{\n    [super setBarStyle:barStyle];\n}\n\n"
    },
    "setBarTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setBarTintColor:(UIColor *) barTintColor\n{\n    [self setBarTintColor___crossmobile_ios_uikit_UIColor:(barTintColor ? barTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setBarTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) barTintColor \n{\n    [super setBarTintColor:(barTintColor == JAVA_NULL ? nil : barTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setDelegate(crossmobile.ios.uikit.UINavigationBarDelegate)": {
      "reverse": "- (void) setDelegate:(id<UINavigationBarDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UINavigationBarDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UINavigationBarDelegate:(id<UINavigationBarDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationBarDelegate"
      ]
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setItems(java.util.List)": {
      "reverse": "- (void) setItems:(NSArray<UINavigationItem *> *) items\n{\n    [self setItems___java_util_List:(items ? items : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setItems___java_util_List:(NSArray*) items \n{\n    [super setItems:(items == JAVA_NULL ? nil : items)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setItems(java.util.List,boolean)": {
      "reverse": "- (void) setItems:(NSArray<UINavigationItem *> *) items animated:(BOOL) animated\n{\n    [self setItems___java_util_List_boolean:(items ? items : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) setItems___java_util_List_boolean:(NSArray*) items :(BOOL) animated \n{\n    [super setItems:(items == JAVA_NULL ? nil : items) animated:animated];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTitleTextAttributes(java.util.Map)": {
      "reverse": "- (void) setTitleTextAttributes:(NSDictionary<NSString *,id> *) titleTextAttributes\n{\n    [self setTitleTextAttributes___java_util_Map:(titleTextAttributes ? titleTextAttributes : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTitleTextAttributes___java_util_Map:(NSDictionary*) titleTextAttributes \n{\n    [super setTitleTextAttributes:(titleTextAttributes == JAVA_NULL ? nil : titleTextAttributes)];\n}\n\n",
      "supimport": [
        "java_util_Map"
      ]
    },
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setTranslucent(boolean)": {
      "reverse": "- (void) setTranslucent:(BOOL) translucent\n{\n    [self setTranslucent___boolean:translucent];\n}\n\n",
      "super": "- (void) setTranslucent___boolean:(BOOL) translucent \n{\n    [super setTranslucent:translucent];\n}\n\n"
    },
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "titleTextAttributes()": {
      "reverse": "- (NSDictionary<NSString *,id> *) titleTextAttributes\n{\n    NSDictionary<NSString *,id> * re$ult = [self titleTextAttributes__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSDictionary*) titleTextAttributes__\n{\n    NSDictionary* re$ult = [super titleTextAttributes];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Map"
      ]
    },
    "topAnchor()": null,
    "topItem()": {
      "reverse": "- (UINavigationItem *) topItem\n{\n    UINavigationItem * re$ult = [self topItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UINavigationItem*) topItem__\n{\n    UINavigationItem* re$ult = [super topItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationItem"
      ]
    },
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UINavigationBarDelegate": {
    "didPopItem(crossmobile.ios.uikit.UINavigationBar,crossmobile.ios.uikit.UINavigationItem)": {
      "reverse": "- (void) navigationBar:(UINavigationBar *) navigationBar didPopItem:(UINavigationItem *) item\n{\n    [self didPopItem___crossmobile_ios_uikit_UINavigationBar_crossmobile_ios_uikit_UINavigationItem:(navigationBar ? navigationBar : JAVA_NULL) :(item ? item : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didPopItem___crossmobile_ios_uikit_UINavigationBar_crossmobile_ios_uikit_UINavigationItem:(UINavigationBar*) navigationBar :(UINavigationItem*) item \n{\n    [super navigationBar:(navigationBar == JAVA_NULL ? nil : navigationBar) didPopItem:(item == JAVA_NULL ? nil : item)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationBar",
        "crossmobile_ios_uikit_UINavigationItem"
      ]
    },
    "didPushItem(crossmobile.ios.uikit.UINavigationBar,crossmobile.ios.uikit.UINavigationItem)": {
      "reverse": "- (void) navigationBar:(UINavigationBar *) navigationBar didPushItem:(UINavigationItem *) item\n{\n    [self didPushItem___crossmobile_ios_uikit_UINavigationBar_crossmobile_ios_uikit_UINavigationItem:(navigationBar ? navigationBar : JAVA_NULL) :(item ? item : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didPushItem___crossmobile_ios_uikit_UINavigationBar_crossmobile_ios_uikit_UINavigationItem:(UINavigationBar*) navigationBar :(UINavigationItem*) item \n{\n    [super navigationBar:(navigationBar == JAVA_NULL ? nil : navigationBar) didPushItem:(item == JAVA_NULL ? nil : item)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationBar",
        "crossmobile_ios_uikit_UINavigationItem"
      ]
    },
    "shouldPopItem(crossmobile.ios.uikit.UINavigationBar,crossmobile.ios.uikit.UINavigationItem)": {
      "reverse": "- (BOOL) navigationBar:(UINavigationBar *) navigationBar shouldPopItem:(UINavigationItem *) item\n{\n    return [self shouldPopItem___crossmobile_ios_uikit_UINavigationBar_crossmobile_ios_uikit_UINavigationItem:(navigationBar ? navigationBar : JAVA_NULL) :(item ? item : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldPopItem___crossmobile_ios_uikit_UINavigationBar_crossmobile_ios_uikit_UINavigationItem:(UINavigationBar*) navigationBar :(UINavigationItem*) item \n{\n    return [super navigationBar:(navigationBar == JAVA_NULL ? nil : navigationBar) shouldPopItem:(item == JAVA_NULL ? nil : item)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationBar",
        "crossmobile_ios_uikit_UINavigationItem"
      ]
    },
    "shouldPushItem(crossmobile.ios.uikit.UINavigationBar,crossmobile.ios.uikit.UINavigationItem)": {
      "reverse": "- (BOOL) navigationBar:(UINavigationBar *) navigationBar shouldPushItem:(UINavigationItem *) item\n{\n    return [self shouldPushItem___crossmobile_ios_uikit_UINavigationBar_crossmobile_ios_uikit_UINavigationItem:(navigationBar ? navigationBar : JAVA_NULL) :(item ? item : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldPushItem___crossmobile_ios_uikit_UINavigationBar_crossmobile_ios_uikit_UINavigationItem:(UINavigationBar*) navigationBar :(UINavigationItem*) item \n{\n    return [super navigationBar:(navigationBar == JAVA_NULL ? nil : navigationBar) shouldPushItem:(item == JAVA_NULL ? nil : item)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationBar",
        "crossmobile_ios_uikit_UINavigationItem"
      ]
    }
  },
  "crossmobile.ios.uikit.UINavigationController": {
    "addChildViewController(crossmobile.ios.uikit.UIViewController)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "additionalSafeAreaInsets()": null,
    "allowedChildViewControllersForUnwindingFromSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": null,
    "automaticallyAdjustsScrollViewInsets()": null,
    "becomeFirstResponder()": null,
    "beginAppearanceTransition(boolean,boolean)": null,
    "bottomLayoutGuide()": null,
    "childViewControllerContainingSegueSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": null,
    "childViewControllerForStatusBarHidden()": null,
    "childViewControllerForStatusBarStyle()": null,
    "childViewControllers()": null,
    "contentSizeForViewInPopover()": null,
    "definesPresentationContext()": null,
    "delegate()": {
      "reverse": "- (id<UINavigationControllerDelegate>) delegate\n{\n    id<UINavigationControllerDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UINavigationControllerDelegate>) delegate__\n{\n    id<UINavigationControllerDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationControllerDelegate"
      ]
    },
    "didReceiveMemoryWarning()": null,
    "didRotateFromInterfaceOrientation(int)": null,
    "disablesAutomaticKeyboardDismissal()": null,
    "dismissModalViewControllerAnimated(boolean)": null,
    "edgesForExtendedLayout()": null,
    "editButtonItem()": null,
    "endAppearanceTransition()": null,
    "extensionContext()": null,
    "hidesBottomBarWhenPushed()": null,
    "interfaceOrientation()": null,
    "isEditing()": null,
    "isFirstResponder()": null,
    "isModalInPopover()": null,
    "isNavigationBarHidden()": {
      "reverse": "- (BOOL) isNavigationBarHidden\n{\n    return [self isNavigationBarHidden__];\n}\n\n",
      "super": "- (BOOL) isNavigationBarHidden__\n{\n    return [super isNavigationBarHidden];\n}\n\n"
    },
    "isToolbarHidden()": {
      "reverse": "- (BOOL) isToolbarHidden\n{\n    return [self isToolbarHidden__];\n}\n\n",
      "super": "- (BOOL) isToolbarHidden__\n{\n    return [super isToolbarHidden];\n}\n\n"
    },
    "isViewLoaded()": null,
    "loadView()": null,
    "loadViewIfNeeded()": null,
    "modalPresentationStyle()": null,
    "modalTransitionStyle()": null,
    "navigationBar()": {
      "reverse": "- (UINavigationBar *) navigationBar\n{\n    UINavigationBar * re$ult = [self navigationBar__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UINavigationBar*) navigationBar__\n{\n    UINavigationBar* re$ult = [super navigationBar];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationBar"
      ]
    },
    "navigationController()": null,
    "navigationItem()": null,
    "nextResponder()": null,
    "nibName()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "parentViewController()": null,
    "performSegueWithIdentifier(java.lang.String,java.lang.Object)": null,
    "popToRootViewControllerAnimated(boolean)": {
      "reverse": "- (NSArray<__kindof UIViewController *> *) popToRootViewControllerAnimated:(BOOL) animated\n{\n    NSArray<__kindof UIViewController *> * re$ult = [self popToRootViewControllerAnimated___boolean:animated];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) popToRootViewControllerAnimated___boolean:(BOOL) animated \n{\n    NSArray* re$ult = [super popToRootViewControllerAnimated:animated];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "popToViewController(crossmobile.ios.uikit.UIViewController,boolean)": {
      "reverse": "- (NSArray<__kindof UIViewController *> *) popToViewController:(UIViewController *) viewController animated:(BOOL) animated\n{\n    NSArray<__kindof UIViewController *> * re$ult = [self popToViewController___crossmobile_ios_uikit_UIViewController_boolean:(viewController ? viewController : JAVA_NULL) :animated];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) popToViewController___crossmobile_ios_uikit_UIViewController_boolean:(UIViewController*) viewController :(BOOL) animated \n{\n    NSArray* re$ult = [super popToViewController:(viewController == JAVA_NULL ? nil : viewController) animated:animated];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController",
        "java_util_List"
      ]
    },
    "popViewControllerAnimated(boolean)": {
      "reverse": "- (UIViewController *) popViewControllerAnimated:(BOOL) animated\n{\n    UIViewController * re$ult = [self popViewControllerAnimated___boolean:animated];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) popViewControllerAnimated___boolean:(BOOL) animated \n{\n    UIViewController* re$ult = [super popViewControllerAnimated:animated];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "preferredInterfaceOrientationForPresentation()": null,
    "preferredStatusBarStyle()": null,
    "prefersStatusBarHidden()": null,
    "prepareForSegue(crossmobile.ios.uikit.UIStoryboardSegue,java.lang.Object)": null,
    "presentModalViewController(crossmobile.ios.uikit.UIViewController,boolean)": null,
    "presentedViewController()": null,
    "presentingViewController()": null,
    "providesPresentationContextTransitionStyle()": null,
    "pushViewController(crossmobile.ios.uikit.UIViewController,boolean)": {
      "reverse": "- (void) pushViewController:(UIViewController *) viewController animated:(BOOL) animated\n{\n    [self pushViewController___crossmobile_ios_uikit_UIViewController_boolean:(viewController ? viewController : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) pushViewController___crossmobile_ios_uikit_UIViewController_boolean:(UIViewController*) viewController :(BOOL) animated \n{\n    [super pushViewController:(viewController == JAVA_NULL ? nil : viewController) animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "removeFromParentViewController()": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rotatingFooterView()": null,
    "rotatingHeaderView()": null,
    "setAdditionalSafeAreaInsets(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setAutomaticallyAdjustsScrollViewInsets(boolean)": null,
    "setContentSizeForViewInPopover(crossmobile.ios.coregraphics.CGSize)": null,
    "setDefinesPresentationContext(boolean)": null,
    "setDelegate(crossmobile.ios.uikit.UINavigationControllerDelegate)": {
      "reverse": "- (void) setDelegate:(id<UINavigationControllerDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UINavigationControllerDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UINavigationControllerDelegate:(id<UINavigationControllerDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationControllerDelegate"
      ]
    },
    "setEdgesForExtendedLayout(int)": null,
    "setEditing(boolean)": null,
    "setEditing(boolean,boolean)": null,
    "setHidesBottomBarWhenPushed(boolean)": null,
    "setModalInPopover(boolean)": null,
    "setModalPresentationStyle(int)": null,
    "setModalTransitionStyle(int)": null,
    "setNavigationBarHidden(boolean)": {
      "reverse": "- (void) setNavigationBarHidden:(BOOL) navigationBarHidden\n{\n    [self setNavigationBarHidden___boolean:navigationBarHidden];\n}\n\n",
      "super": "- (void) setNavigationBarHidden___boolean:(BOOL) navigationBarHidden \n{\n    [super setNavigationBarHidden:navigationBarHidden];\n}\n\n"
    },
    "setNavigationBarHidden(boolean,boolean)": {
      "reverse": "- (void) setNavigationBarHidden:(BOOL) hidden animated:(BOOL) animated\n{\n    [self setNavigationBarHidden___boolean_boolean:hidden :animated];\n}\n\n",
      "super": "- (void) setNavigationBarHidden___boolean_boolean:(BOOL) hidden :(BOOL) animated \n{\n    [super setNavigationBarHidden:hidden animated:animated];\n}\n\n"
    },
    "setNeedsStatusBarAppearanceUpdate()": null,
    "setProvidesPresentationContextTransitionStyle(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setTabBarItem(crossmobile.ios.uikit.UITabBarItem)": null,
    "setTitle(java.lang.String)": null,
    "setToolbarHidden(boolean)": {
      "reverse": "- (void) setToolbarHidden:(BOOL) toolbarHidden\n{\n    [self setToolbarHidden___boolean:toolbarHidden];\n}\n\n",
      "super": "- (void) setToolbarHidden___boolean:(BOOL) toolbarHidden \n{\n    [super setToolbarHidden:toolbarHidden];\n}\n\n"
    },
    "setToolbarHidden(boolean,boolean)": {
      "reverse": "- (void) setToolbarHidden:(BOOL) hidden animated:(BOOL) animated\n{\n    [self setToolbarHidden___boolean_boolean:hidden :animated];\n}\n\n",
      "super": "- (void) setToolbarHidden___boolean_boolean:(BOOL) hidden :(BOOL) animated \n{\n    [super setToolbarHidden:hidden animated:animated];\n}\n\n"
    },
    "setToolbarItems(java.util.List)": null,
    "setToolbarItems(java.util.List,boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "setView(crossmobile.ios.uikit.UIView)": null,
    "setViewControllers(java.util.List)": {
      "reverse": "- (void) setViewControllers:(NSArray<__kindof UIViewController *> *) viewControllers\n{\n    [self setViewControllers___java_util_List:(viewControllers ? viewControllers : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setViewControllers___java_util_List:(NSArray*) viewControllers \n{\n    [super setViewControllers:(viewControllers == JAVA_NULL ? nil : viewControllers)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setViewControllers(java.util.List,boolean)": {
      "reverse": "- (void) setViewControllers:(NSArray<UIViewController *> *) viewControllers animated:(BOOL) animated\n{\n    [self setViewControllers___java_util_List_boolean:(viewControllers ? viewControllers : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) setViewControllers___java_util_List_boolean:(NSArray*) viewControllers :(BOOL) animated \n{\n    [super setViewControllers:(viewControllers == JAVA_NULL ? nil : viewControllers) animated:animated];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setWantsFullScreenLayout(boolean)": null,
    "shouldAutomaticallyForwardAppearanceMethods()": null,
    "shouldAutorotate()": null,
    "shouldAutorotateToInterfaceOrientation(int)": null,
    "shouldPerformSegueWithIdentifier(java.lang.String,java.lang.Object)": null,
    "showDetailViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": null,
    "showViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": null,
    "splitViewController()": null,
    "storyboard()": null,
    "supportedInterfaceOrientations()": null,
    "tabBarController()": null,
    "tabBarItem()": null,
    "title()": null,
    "toolbar()": {
      "reverse": "- (UIToolbar *) toolbar\n{\n    UIToolbar * re$ult = [self toolbar__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIToolbar*) toolbar__\n{\n    UIToolbar* re$ult = [super toolbar];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIToolbar"
      ]
    },
    "toolbarItems()": null,
    "topLayoutGuide()": null,
    "topViewController()": {
      "reverse": "- (UIViewController *) topViewController\n{\n    UIViewController * re$ult = [self topViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) topViewController__\n{\n    UIViewController* re$ult = [super topViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "view()": null,
    "viewControllers()": {
      "reverse": "- (NSArray<__kindof UIViewController *> *) viewControllers\n{\n    NSArray<__kindof UIViewController *> * re$ult = [self viewControllers__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) viewControllers__\n{\n    NSArray* re$ult = [super viewControllers];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "viewDidAppear(boolean)": null,
    "viewDidDisappear(boolean)": null,
    "viewDidLayoutSubviews()": null,
    "viewDidLoad()": null,
    "viewDidUnload()": null,
    "viewIfLoaded()": null,
    "viewSafeAreaInsetsDidChange()": null,
    "viewWillAppear(boolean)": null,
    "viewWillDisappear(boolean)": null,
    "viewWillLayoutSubviews()": null,
    "visibleViewController()": {
      "reverse": "- (UIViewController *) visibleViewController\n{\n    UIViewController * re$ult = [self visibleViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) visibleViewController__\n{\n    UIViewController* re$ult = [super visibleViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "wantsFullScreenLayout()": null,
    "willAnimateRotationToInterfaceOrientation(int,double)": null,
    "willRotateToInterfaceOrientation(int,double)": null
  },
  "crossmobile.ios.uikit.UINavigationControllerDelegate": {
    "didShowViewController(crossmobile.ios.uikit.UINavigationController,crossmobile.ios.uikit.UIViewController,boolean)": {
      "reverse": "- (void) navigationController:(UINavigationController *) navigationController didShowViewController:(UIViewController *) viewController animated:(BOOL) animated\n{\n    [self didShowViewController___crossmobile_ios_uikit_UINavigationController_crossmobile_ios_uikit_UIViewController_boolean:(navigationController ? navigationController : JAVA_NULL) :(viewController ? viewController : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) didShowViewController___crossmobile_ios_uikit_UINavigationController_crossmobile_ios_uikit_UIViewController_boolean:(UINavigationController*) navigationController :(UIViewController*) viewController :(BOOL) animated \n{\n    [super navigationController:(navigationController == JAVA_NULL ? nil : navigationController) didShowViewController:(viewController == JAVA_NULL ? nil : viewController) animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationController",
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "willShowViewController(crossmobile.ios.uikit.UINavigationController,crossmobile.ios.uikit.UIViewController,boolean)": {
      "reverse": "- (void) navigationController:(UINavigationController *) navigationController willShowViewController:(UIViewController *) viewController animated:(BOOL) animated\n{\n    [self willShowViewController___crossmobile_ios_uikit_UINavigationController_crossmobile_ios_uikit_UIViewController_boolean:(navigationController ? navigationController : JAVA_NULL) :(viewController ? viewController : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) willShowViewController___crossmobile_ios_uikit_UINavigationController_crossmobile_ios_uikit_UIViewController_boolean:(UINavigationController*) navigationController :(UIViewController*) viewController :(BOOL) animated \n{\n    [super navigationController:(navigationController == JAVA_NULL ? nil : navigationController) willShowViewController:(viewController == JAVA_NULL ? nil : viewController) animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationController",
        "crossmobile_ios_uikit_UIViewController"
      ]
    }
  },
  "crossmobile.ios.uikit.UINavigationItem": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "backBarButtonItem()": {
      "reverse": "- (UIBarButtonItem *) backBarButtonItem\n{\n    UIBarButtonItem * re$ult = [self backBarButtonItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIBarButtonItem*) backBarButtonItem__\n{\n    UIBarButtonItem* re$ult = [super backBarButtonItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem"
      ]
    },
    "hidesBackButton()": {
      "reverse": "- (BOOL) hidesBackButton\n{\n    return [self hidesBackButton__];\n}\n\n",
      "super": "- (BOOL) hidesBackButton__\n{\n    return [super hidesBackButton];\n}\n\n"
    },
    "leftBarButtonItem()": {
      "reverse": "- (UIBarButtonItem *) leftBarButtonItem\n{\n    UIBarButtonItem * re$ult = [self leftBarButtonItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIBarButtonItem*) leftBarButtonItem__\n{\n    UIBarButtonItem* re$ult = [super leftBarButtonItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "prompt()": {
      "reverse": "- (NSString *) prompt\n{\n    NSString * re$ult = [self prompt__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) prompt__\n{\n    NSString* re$ult = [super prompt];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "rightBarButtonItem()": {
      "reverse": "- (UIBarButtonItem *) rightBarButtonItem\n{\n    UIBarButtonItem * re$ult = [self rightBarButtonItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIBarButtonItem*) rightBarButtonItem__\n{\n    UIBarButtonItem* re$ult = [super rightBarButtonItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem"
      ]
    },
    "setBackBarButtonItem(crossmobile.ios.uikit.UIBarButtonItem)": {
      "reverse": "- (void) setBackBarButtonItem:(UIBarButtonItem *) backBarButtonItem\n{\n    [self setBackBarButtonItem___crossmobile_ios_uikit_UIBarButtonItem:(backBarButtonItem ? backBarButtonItem : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setBackBarButtonItem___crossmobile_ios_uikit_UIBarButtonItem:(UIBarButtonItem*) backBarButtonItem \n{\n    [super setBackBarButtonItem:(backBarButtonItem == JAVA_NULL ? nil : backBarButtonItem)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem"
      ]
    },
    "setHidesBackButton(boolean)": {
      "reverse": "- (void) setHidesBackButton:(BOOL) hidesBackButton\n{\n    [self setHidesBackButton___boolean:hidesBackButton];\n}\n\n",
      "super": "- (void) setHidesBackButton___boolean:(BOOL) hidesBackButton \n{\n    [super setHidesBackButton:hidesBackButton];\n}\n\n"
    },
    "setHidesBackButton(boolean,boolean)": {
      "reverse": "- (void) setHidesBackButton:(BOOL) hidesBackButton animated:(BOOL) animated\n{\n    [self setHidesBackButton___boolean_boolean:hidesBackButton :animated];\n}\n\n",
      "super": "- (void) setHidesBackButton___boolean_boolean:(BOOL) hidesBackButton :(BOOL) animated \n{\n    [super setHidesBackButton:hidesBackButton animated:animated];\n}\n\n"
    },
    "setLeftBarButtonItem(crossmobile.ios.uikit.UIBarButtonItem)": {
      "reverse": "- (void) setLeftBarButtonItem:(UIBarButtonItem *) leftBarButtonItem\n{\n    [self setLeftBarButtonItem___crossmobile_ios_uikit_UIBarButtonItem:(leftBarButtonItem ? leftBarButtonItem : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setLeftBarButtonItem___crossmobile_ios_uikit_UIBarButtonItem:(UIBarButtonItem*) leftBarButtonItem \n{\n    [super setLeftBarButtonItem:(leftBarButtonItem == JAVA_NULL ? nil : leftBarButtonItem)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem"
      ]
    },
    "setLeftBarButtonItem(crossmobile.ios.uikit.UIBarButtonItem,boolean)": {
      "reverse": "- (void) setLeftBarButtonItem:(UIBarButtonItem *) item animated:(BOOL) animated\n{\n    [self setLeftBarButtonItem___crossmobile_ios_uikit_UIBarButtonItem_boolean:(item ? item : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) setLeftBarButtonItem___crossmobile_ios_uikit_UIBarButtonItem_boolean:(UIBarButtonItem*) item :(BOOL) animated \n{\n    [super setLeftBarButtonItem:(item == JAVA_NULL ? nil : item) animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem"
      ]
    },
    "setPrompt(java.lang.String)": {
      "reverse": "- (void) setPrompt:(NSString *) prompt\n{\n    [self setPrompt___java_lang_String:(prompt ? prompt : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setPrompt___java_lang_String:(NSString*) prompt \n{\n    [super setPrompt:(prompt == JAVA_NULL ? nil : prompt)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setRightBarButtonItem(crossmobile.ios.uikit.UIBarButtonItem)": {
      "reverse": "- (void) setRightBarButtonItem:(UIBarButtonItem *) rightBarButtonItem\n{\n    [self setRightBarButtonItem___crossmobile_ios_uikit_UIBarButtonItem:(rightBarButtonItem ? rightBarButtonItem : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setRightBarButtonItem___crossmobile_ios_uikit_UIBarButtonItem:(UIBarButtonItem*) rightBarButtonItem \n{\n    [super setRightBarButtonItem:(rightBarButtonItem == JAVA_NULL ? nil : rightBarButtonItem)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem"
      ]
    },
    "setRightBarButtonItem(crossmobile.ios.uikit.UIBarButtonItem,boolean)": {
      "reverse": "- (void) setRightBarButtonItem:(UIBarButtonItem *) item animated:(BOOL) animated\n{\n    [self setRightBarButtonItem___crossmobile_ios_uikit_UIBarButtonItem_boolean:(item ? item : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) setRightBarButtonItem___crossmobile_ios_uikit_UIBarButtonItem_boolean:(UIBarButtonItem*) item :(BOOL) animated \n{\n    [super setRightBarButtonItem:(item == JAVA_NULL ? nil : item) animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem"
      ]
    },
    "setTitle(java.lang.String)": {
      "reverse": "- (void) setTitle:(NSString *) title\n{\n    [self setTitle___java_lang_String:(title ? title : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTitle___java_lang_String:(NSString*) title \n{\n    [super setTitle:(title == JAVA_NULL ? nil : title)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTitleView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) setTitleView:(UIView *) titleView\n{\n    [self setTitleView___crossmobile_ios_uikit_UIView:(titleView ? titleView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTitleView___crossmobile_ios_uikit_UIView:(UIView*) titleView \n{\n    [super setTitleView:(titleView == JAVA_NULL ? nil : titleView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "title()": {
      "reverse": "- (NSString *) title\n{\n    NSString * re$ult = [self title__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) title__\n{\n    NSString* re$ult = [super title];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "titleView()": {
      "reverse": "- (UIView *) titleView\n{\n    UIView * re$ult = [self titleView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) titleView__\n{\n    UIView* re$ult = [super titleView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UINib": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "instantiateWithOwner(crossmobile.ios.foundation.NSObject,java.util.Map)": {
      "reverse": "- (NSArray *) instantiateWithOwner:(id) ownerOrNil options:(NSDictionary *) optionsOrNil\n{\n    NSArray * re$ult = [self instantiateWithOwner___crossmobile_ios_foundation_NSObject_java_util_Map:(ownerOrNil ? ownerOrNil : JAVA_NULL) :(optionsOrNil ? optionsOrNil : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) instantiateWithOwner___crossmobile_ios_foundation_NSObject_java_util_Map:(NSObject*) ownerOrNil :(NSDictionary*) optionsOrNil \n{\n    NSArray* re$ult = [super instantiateWithOwner:(ownerOrNil == JAVA_NULL ? nil : ownerOrNil) options:(optionsOrNil == JAVA_NULL ? nil : optionsOrNil)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_util_List",
        "java_util_Map"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIPageControl": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "addTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "allTargets()": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHorizontalAlignment()": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "contentVerticalAlignment()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "currentPage()": {
      "reverse": "- (NSInteger) currentPage\n{\n    return [self currentPage__];\n}\n\n",
      "super": "- (int) currentPage__\n{\n    return [super currentPage];\n}\n\n"
    },
    "currentPageIndicatorTintColor()": {
      "reverse": "- (UIColor *) currentPageIndicatorTintColor\n{\n    UIColor * re$ult = [self currentPageIndicatorTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) currentPageIndicatorTintColor__\n{\n    UIColor* re$ult = [super currentPageIndicatorTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "defersCurrentPageDisplay()": {
      "reverse": "- (BOOL) defersCurrentPageDisplay\n{\n    return [self defersCurrentPageDisplay__];\n}\n\n",
      "super": "- (BOOL) defersCurrentPageDisplay__\n{\n    return [super defersCurrentPageDisplay];\n}\n\n"
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hidesForSinglePage()": {
      "reverse": "- (BOOL) hidesForSinglePage\n{\n    return [self hidesForSinglePage__];\n}\n\n",
      "super": "- (BOOL) hidesForSinglePage__\n{\n    return [super hidesForSinglePage];\n}\n\n"
    },
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isEnabled()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isHighlighted()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isSelected()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "numberOfPages()": {
      "reverse": "- (NSInteger) numberOfPages\n{\n    return [self numberOfPages__];\n}\n\n",
      "super": "- (int) numberOfPages__\n{\n    return [super numberOfPages];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pageIndicatorTintColor()": {
      "reverse": "- (UIColor *) pageIndicatorTintColor\n{\n    UIColor * re$ult = [self pageIndicatorTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) pageIndicatorTintColor__\n{\n    UIColor* re$ult = [super pageIndicatorTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendActionsForControlEvents(int)": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHorizontalAlignment(int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setContentVerticalAlignment(int)": null,
    "setCurrentPage(int)": {
      "reverse": "- (void) setCurrentPage:(NSInteger) currentPage\n{\n    [self setCurrentPage___int:currentPage];\n}\n\n",
      "super": "- (void) setCurrentPage___int:(int) currentPage \n{\n    [super setCurrentPage:currentPage];\n}\n\n"
    },
    "setCurrentPageIndicatorTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setCurrentPageIndicatorTintColor:(UIColor *) currentPageIndicatorTintColor\n{\n    [self setCurrentPageIndicatorTintColor___crossmobile_ios_uikit_UIColor:(currentPageIndicatorTintColor ? currentPageIndicatorTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setCurrentPageIndicatorTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) currentPageIndicatorTintColor \n{\n    [super setCurrentPageIndicatorTintColor:(currentPageIndicatorTintColor == JAVA_NULL ? nil : currentPageIndicatorTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setDefersCurrentPageDisplay(boolean)": {
      "reverse": "- (void) setDefersCurrentPageDisplay:(BOOL) defersCurrentPageDisplay\n{\n    [self setDefersCurrentPageDisplay___boolean:defersCurrentPageDisplay];\n}\n\n",
      "super": "- (void) setDefersCurrentPageDisplay___boolean:(BOOL) defersCurrentPageDisplay \n{\n    [super setDefersCurrentPageDisplay:defersCurrentPageDisplay];\n}\n\n"
    },
    "setEnabled(boolean)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHidesForSinglePage(boolean)": {
      "reverse": "- (void) setHidesForSinglePage:(BOOL) hidesForSinglePage\n{\n    [self setHidesForSinglePage___boolean:hidesForSinglePage];\n}\n\n",
      "super": "- (void) setHidesForSinglePage___boolean:(BOOL) hidesForSinglePage \n{\n    [super setHidesForSinglePage:hidesForSinglePage];\n}\n\n"
    },
    "setHighlighted(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setNumberOfPages(int)": {
      "reverse": "- (void) setNumberOfPages:(NSInteger) numberOfPages\n{\n    [self setNumberOfPages___int:numberOfPages];\n}\n\n",
      "super": "- (void) setNumberOfPages___int:(int) numberOfPages \n{\n    [super setNumberOfPages:numberOfPages];\n}\n\n"
    },
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPageIndicatorTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setPageIndicatorTintColor:(UIColor *) pageIndicatorTintColor\n{\n    [self setPageIndicatorTintColor___crossmobile_ios_uikit_UIColor:(pageIndicatorTintColor ? pageIndicatorTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setPageIndicatorTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) pageIndicatorTintColor \n{\n    [super setPageIndicatorTintColor:(pageIndicatorTintColor == JAVA_NULL ? nil : pageIndicatorTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setSelected(boolean)": null,
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeForNumberOfPages(int)": {
      "reverse": "- (CGSize) sizeForNumberOfPages:(NSInteger) pageCount\n{\n    crossmobile_ios_coregraphics_CGSize* re$ult = [self sizeForNumberOfPages___int:pageCount];\n    CGSize re$ult$conv = [re$ult getCGSize];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGSize*) sizeForNumberOfPages___int:(int) pageCount \n{\n    return [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:[super sizeForNumberOfPages:pageCount]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "state()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "updateCurrentPageDisplay()": {
      "reverse": "- (void) updateCurrentPageDisplay\n{\n    [self updateCurrentPageDisplay__];\n}\n\n",
      "super": "- (void) updateCurrentPageDisplay__\n{\n    [super updateCurrentPageDisplay];\n}\n\n"
    },
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UIPanGestureRecognizer": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addTarget(crossmobile.ios.foundation.NSSelector)": null,
    "canBePreventedByGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "canPreventGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "cancelsTouchesInView()": null,
    "delaysTouchesBegan()": null,
    "delaysTouchesEnded()": null,
    "delegate()": null,
    "isEnabled()": null,
    "locationInView(crossmobile.ios.uikit.UIView)": null,
    "locationOfTouch(int,crossmobile.ios.uikit.UIView)": null,
    "maximumNumberOfTouches()": {
      "reverse": "- (NSUInteger) maximumNumberOfTouches\n{\n    return [self maximumNumberOfTouches__];\n}\n\n",
      "super": "- (int) maximumNumberOfTouches__\n{\n    return [super maximumNumberOfTouches];\n}\n\n"
    },
    "minimumNumberOfTouches()": {
      "reverse": "- (NSUInteger) minimumNumberOfTouches\n{\n    return [self minimumNumberOfTouches__];\n}\n\n",
      "super": "- (int) minimumNumberOfTouches__\n{\n    return [super minimumNumberOfTouches];\n}\n\n"
    },
    "numberOfTouches()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.foundation.NSSelector)": null,
    "requireGestureRecognizerToFail(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "reset()": null,
    "setCancelsTouchesInView(boolean)": null,
    "setDelaysTouchesBegan(boolean)": null,
    "setDelaysTouchesEnded(boolean)": null,
    "setDelegate(crossmobile.ios.uikit.UIGestureRecognizerDelegate)": null,
    "setEnabled(boolean)": null,
    "setMaximumNumberOfTouches(int)": {
      "reverse": "- (void) setMaximumNumberOfTouches:(NSUInteger) maximumNumberOfTouches\n{\n    [self setMaximumNumberOfTouches___int:maximumNumberOfTouches];\n}\n\n",
      "super": "- (void) setMaximumNumberOfTouches___int:(int) maximumNumberOfTouches \n{\n    [super setMaximumNumberOfTouches:maximumNumberOfTouches];\n}\n\n"
    },
    "setMinimumNumberOfTouches(int)": {
      "reverse": "- (void) setMinimumNumberOfTouches:(NSUInteger) minimumNumberOfTouches\n{\n    [self setMinimumNumberOfTouches___int:minimumNumberOfTouches];\n}\n\n",
      "super": "- (void) setMinimumNumberOfTouches___int:(int) minimumNumberOfTouches \n{\n    [super setMinimumNumberOfTouches:minimumNumberOfTouches];\n}\n\n"
    },
    "setTranslation(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) setTranslation:(CGPoint) translation inView:(UIView *) view\n{\n    crossmobile_ios_coregraphics_CGPoint* translation$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:translation];\n    [self setTranslation___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIView:translation$conv :(view ? view : JAVA_NULL)];\n    [translation$conv release];\n}\n\n",
      "super": "- (void) setTranslation___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIView:(crossmobile_ios_coregraphics_CGPoint*) translation :(UIView*) view \n{\n    [super setTranslation:[translation getCGPoint] inView:(view == JAVA_NULL ? nil : view)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "state()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "translationInView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (CGPoint) translationInView:(UIView *) view\n{\n    crossmobile_ios_coregraphics_CGPoint* re$ult = [self translationInView___crossmobile_ios_uikit_UIView:(view ? view : JAVA_NULL)];\n    CGPoint re$ult$conv = [re$ult getCGPoint];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPoint*) translationInView___crossmobile_ios_uikit_UIView:(UIView*) view \n{\n    return [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:[super translationInView:(view == JAVA_NULL ? nil : view)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "velocityInView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (CGPoint) velocityInView:(UIView *) view\n{\n    crossmobile_ios_coregraphics_CGPoint* re$ult = [self velocityInView___crossmobile_ios_uikit_UIView:(view ? view : JAVA_NULL)];\n    CGPoint re$ult$conv = [re$ult getCGPoint];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPoint*) velocityInView___crossmobile_ios_uikit_UIView:(UIView*) view \n{\n    return [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:[super velocityInView:(view == JAVA_NULL ? nil : view)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "view()": null
  },
  "crossmobile.ios.uikit.UIPickerView": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "dataSource()": {
      "reverse": "- (id<UIPickerViewDataSource>) dataSource\n{\n    id<UIPickerViewDataSource> re$ult = [self dataSource__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UIPickerViewDataSource>) dataSource__\n{\n    id<UIPickerViewDataSource> re$ult = [super dataSource];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPickerViewDataSource"
      ]
    },
    "delegate()": {
      "reverse": "- (id<UIPickerViewDelegate>) delegate\n{\n    id<UIPickerViewDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UIPickerViewDelegate>) delegate__\n{\n    id<UIPickerViewDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPickerViewDelegate"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "numberOfComponents()": {
      "reverse": "- (NSInteger) numberOfComponents\n{\n    return [self numberOfComponents__];\n}\n\n",
      "super": "- (int) numberOfComponents__\n{\n    return [super numberOfComponents];\n}\n\n"
    },
    "numberOfRowsInComponent(int)": {
      "reverse": "- (NSInteger) numberOfRowsInComponent:(NSInteger) component\n{\n    return [self numberOfRowsInComponent___int:component];\n}\n\n",
      "super": "- (int) numberOfRowsInComponent___int:(int) component \n{\n    return [super numberOfRowsInComponent:component];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "reloadAllComponents()": {
      "reverse": "- (void) reloadAllComponents\n{\n    [self reloadAllComponents__];\n}\n\n",
      "super": "- (void) reloadAllComponents__\n{\n    [super reloadAllComponents];\n}\n\n"
    },
    "reloadComponent(int)": {
      "reverse": "- (void) reloadComponent:(NSInteger) component\n{\n    [self reloadComponent___int:component];\n}\n\n",
      "super": "- (void) reloadComponent___int:(int) component \n{\n    [super reloadComponent:component];\n}\n\n"
    },
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "rowSizeForComponent(int)": {
      "reverse": "- (CGSize) rowSizeForComponent:(NSInteger) component\n{\n    crossmobile_ios_coregraphics_CGSize* re$ult = [self rowSizeForComponent___int:component];\n    CGSize re$ult$conv = [re$ult getCGSize];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGSize*) rowSizeForComponent___int:(int) component \n{\n    return [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:[super rowSizeForComponent:component]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "selectRow(int,int,boolean)": {
      "reverse": "- (void) selectRow:(NSInteger) row inComponent:(NSInteger) component animated:(BOOL) animated\n{\n    [self selectRow___int_int_boolean:row :component :animated];\n}\n\n",
      "super": "- (void) selectRow___int_int_boolean:(int) row :(int) component :(BOOL) animated \n{\n    [super selectRow:row inComponent:component animated:animated];\n}\n\n"
    },
    "selectedRowInComponent(int)": {
      "reverse": "- (NSInteger) selectedRowInComponent:(NSInteger) component\n{\n    return [self selectedRowInComponent___int:component];\n}\n\n",
      "super": "- (int) selectedRowInComponent___int:(int) component \n{\n    return [super selectedRowInComponent:component];\n}\n\n"
    },
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setDataSource(crossmobile.ios.uikit.UIPickerViewDataSource)": {
      "reverse": "- (void) setDataSource:(id<UIPickerViewDataSource>) dataSource\n{\n    [self setDataSource___crossmobile_ios_uikit_UIPickerViewDataSource:(dataSource ? dataSource : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDataSource___crossmobile_ios_uikit_UIPickerViewDataSource:(id<UIPickerViewDataSource>) dataSource \n{\n    objc_setAssociatedObject(self, @selector(setDataSource:), dataSource, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDataSource:(dataSource == JAVA_NULL ? nil : dataSource)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPickerViewDataSource"
      ]
    },
    "setDelegate(crossmobile.ios.uikit.UIPickerViewDelegate)": {
      "reverse": "- (void) setDelegate:(id<UIPickerViewDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UIPickerViewDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UIPickerViewDelegate:(id<UIPickerViewDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPickerViewDelegate"
      ]
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setShowsSelectionIndicator(boolean)": {
      "reverse": "- (void) setShowsSelectionIndicator:(BOOL) showsSelectionIndicator\n{\n    [self setShowsSelectionIndicator___boolean:showsSelectionIndicator];\n}\n\n",
      "super": "- (void) setShowsSelectionIndicator___boolean:(BOOL) showsSelectionIndicator \n{\n    [super setShowsSelectionIndicator:showsSelectionIndicator];\n}\n\n"
    },
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "showsSelectionIndicator()": {
      "reverse": "- (BOOL) showsSelectionIndicator\n{\n    return [self showsSelectionIndicator__];\n}\n\n",
      "super": "- (BOOL) showsSelectionIndicator__\n{\n    return [super showsSelectionIndicator];\n}\n\n"
    },
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "viewForRow(int,int)": {
      "reverse": "- (UIView *) viewForRow:(NSInteger) row forComponent:(NSInteger) component\n{\n    UIView * re$ult = [self viewForRow___int_int:row :component];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) viewForRow___int_int:(int) row :(int) component \n{\n    UIView* re$ult = [super viewForRow:row forComponent:component];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UIPickerViewDataSource": {
    "numberOfComponentsInPickerView(crossmobile.ios.uikit.UIPickerView)": {
      "reverse": "- (NSInteger) numberOfComponentsInPickerView:(UIPickerView *) pickerView\n{\n    return [self numberOfComponentsInPickerView___crossmobile_ios_uikit_UIPickerView:(pickerView ? pickerView : JAVA_NULL)];\n}\n\n",
      "super": "- (int) numberOfComponentsInPickerView___crossmobile_ios_uikit_UIPickerView:(UIPickerView*) pickerView \n{\n    return [super numberOfComponentsInPickerView:(pickerView == JAVA_NULL ? nil : pickerView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPickerView"
      ]
    },
    "numberOfRowsInComponent(crossmobile.ios.uikit.UIPickerView,int)": {
      "reverse": "- (NSInteger) pickerView:(UIPickerView *) pickerView numberOfRowsInComponent:(NSInteger) component\n{\n    return [self numberOfRowsInComponent___crossmobile_ios_uikit_UIPickerView_int:(pickerView ? pickerView : JAVA_NULL) :component];\n}\n\n",
      "super": "- (int) numberOfRowsInComponent___crossmobile_ios_uikit_UIPickerView_int:(UIPickerView*) pickerView :(int) component \n{\n    return [super pickerView:(pickerView == JAVA_NULL ? nil : pickerView) numberOfRowsInComponent:component];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPickerView"
      ]
    }
  },
  "crossmobile.ios.uikit.UIPickerViewDelegate": {
    "didSelectRow(crossmobile.ios.uikit.UIPickerView,int,int)": {
      "reverse": "- (void) pickerView:(UIPickerView *) pickerView didSelectRow:(NSInteger) row inComponent:(NSInteger) component\n{\n    [self didSelectRow___crossmobile_ios_uikit_UIPickerView_int_int:(pickerView ? pickerView : JAVA_NULL) :row :component];\n}\n\n",
      "super": "- (void) didSelectRow___crossmobile_ios_uikit_UIPickerView_int_int:(UIPickerView*) pickerView :(int) row :(int) component \n{\n    [super pickerView:(pickerView == JAVA_NULL ? nil : pickerView) didSelectRow:row inComponent:component];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPickerView"
      ]
    },
    "rowHeightForComponent(crossmobile.ios.uikit.UIPickerView,int)": {
      "reverse": "- (CGFloat) pickerView:(UIPickerView *) pickerView rowHeightForComponent:(NSInteger) component\n{\n    return [self rowHeightForComponent___crossmobile_ios_uikit_UIPickerView_int:(pickerView ? pickerView : JAVA_NULL) :component];\n}\n\n",
      "super": "- (double) rowHeightForComponent___crossmobile_ios_uikit_UIPickerView_int:(UIPickerView*) pickerView :(int) component \n{\n    return [super pickerView:(pickerView == JAVA_NULL ? nil : pickerView) rowHeightForComponent:component];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPickerView"
      ]
    },
    "titleForRow(crossmobile.ios.uikit.UIPickerView,int,int)": {
      "reverse": "- (NSString *) pickerView:(UIPickerView *) pickerView titleForRow:(NSInteger) row forComponent:(NSInteger) component\n{\n    NSString * re$ult = [self titleForRow___crossmobile_ios_uikit_UIPickerView_int_int:(pickerView ? pickerView : JAVA_NULL) :row :component];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) titleForRow___crossmobile_ios_uikit_UIPickerView_int_int:(UIPickerView*) pickerView :(int) row :(int) component \n{\n    NSString* re$ult = [super pickerView:(pickerView == JAVA_NULL ? nil : pickerView) titleForRow:row forComponent:component];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPickerView",
        "java_lang_String"
      ]
    },
    "viewForRow(crossmobile.ios.uikit.UIPickerView,int,int,crossmobile.ios.uikit.UIView)": {
      "reverse": "- (UIView *) pickerView:(UIPickerView *) pickerView viewForRow:(NSInteger) row forComponent:(NSInteger) component reusingView:(UIView *) view\n{\n    UIView * re$ult = [self viewForRow___crossmobile_ios_uikit_UIPickerView_int_int_crossmobile_ios_uikit_UIView:(pickerView ? pickerView : JAVA_NULL) :row :component :(view ? view : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) viewForRow___crossmobile_ios_uikit_UIPickerView_int_int_crossmobile_ios_uikit_UIView:(UIPickerView*) pickerView :(int) row :(int) component :(UIView*) view \n{\n    UIView* re$ult = [super pickerView:(pickerView == JAVA_NULL ? nil : pickerView) viewForRow:row forComponent:component reusingView:(view == JAVA_NULL ? nil : view)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPickerView",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "widthForComponent(crossmobile.ios.uikit.UIPickerView,int)": {
      "reverse": "- (CGFloat) pickerView:(UIPickerView *) pickerView widthForComponent:(NSInteger) component\n{\n    return [self widthForComponent___crossmobile_ios_uikit_UIPickerView_int:(pickerView ? pickerView : JAVA_NULL) :component];\n}\n\n",
      "super": "- (double) widthForComponent___crossmobile_ios_uikit_UIPickerView_int:(UIPickerView*) pickerView :(int) component \n{\n    return [super pickerView:(pickerView == JAVA_NULL ? nil : pickerView) widthForComponent:component];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPickerView"
      ]
    }
  },
  "crossmobile.ios.uikit.UIPinchGestureRecognizer": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addTarget(crossmobile.ios.foundation.NSSelector)": null,
    "canBePreventedByGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "canPreventGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "cancelsTouchesInView()": null,
    "delaysTouchesBegan()": null,
    "delaysTouchesEnded()": null,
    "delegate()": null,
    "isEnabled()": null,
    "locationInView(crossmobile.ios.uikit.UIView)": null,
    "locationOfTouch(int,crossmobile.ios.uikit.UIView)": null,
    "numberOfTouches()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.foundation.NSSelector)": null,
    "requireGestureRecognizerToFail(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "reset()": null,
    "scale()": {
      "reverse": "- (CGFloat) scale\n{\n    return [self scale__];\n}\n\n",
      "super": "- (double) scale__\n{\n    return [super scale];\n}\n\n"
    },
    "setCancelsTouchesInView(boolean)": null,
    "setDelaysTouchesBegan(boolean)": null,
    "setDelaysTouchesEnded(boolean)": null,
    "setDelegate(crossmobile.ios.uikit.UIGestureRecognizerDelegate)": null,
    "setEnabled(boolean)": null,
    "setScale(double)": {
      "reverse": "- (void) setScale:(CGFloat) scale\n{\n    [self setScale___double:scale];\n}\n\n",
      "super": "- (void) setScale___double:(double) scale \n{\n    [super setScale:scale];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "state()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "velocity()": {
      "reverse": "- (CGFloat) velocity\n{\n    return [self velocity__];\n}\n\n",
      "super": "- (double) velocity__\n{\n    return [super velocity];\n}\n\n"
    },
    "view()": null
  },
  "crossmobile.ios.uikit.UIPopoverController": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "contentViewController()": {
      "reverse": "- (UIViewController *) contentViewController\n{\n    UIViewController * re$ult = [self contentViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) contentViewController__\n{\n    UIViewController* re$ult = [super contentViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "delegate()": {
      "reverse": "- (id<UIPopoverControllerDelegate>) delegate\n{\n    id<UIPopoverControllerDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UIPopoverControllerDelegate>) delegate__\n{\n    id<UIPopoverControllerDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPopoverControllerDelegate"
      ]
    },
    "dismissPopoverAnimated(boolean)": {
      "reverse": "- (void) dismissPopoverAnimated:(BOOL) animated\n{\n    [self dismissPopoverAnimated___boolean:animated];\n}\n\n",
      "super": "- (void) dismissPopoverAnimated___boolean:(BOOL) animated \n{\n    [super dismissPopoverAnimated:animated];\n}\n\n"
    },
    "isPopoverVisible()": {
      "reverse": "- (BOOL) isPopoverVisible\n{\n    return [self isPopoverVisible__];\n}\n\n",
      "super": "- (BOOL) isPopoverVisible__\n{\n    return [super isPopoverVisible];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "passthroughViews()": {
      "reverse": "- (NSArray<__kindof UIView *> *) passthroughViews\n{\n    NSArray<__kindof UIView *> * re$ult = [self passthroughViews__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) passthroughViews__\n{\n    NSArray* re$ult = [super passthroughViews];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "popoverArrowDirection()": {
      "reverse": "- (UIPopoverArrowDirection) popoverArrowDirection\n{\n    return [self popoverArrowDirection__];\n}\n\n",
      "super": "- (JAVA_LONG) popoverArrowDirection__\n{\n    return [super popoverArrowDirection];\n}\n\n"
    },
    "popoverContentSize()": {
      "reverse": "- (CGSize) popoverContentSize\n{\n    crossmobile_ios_coregraphics_CGSize* re$ult = [self popoverContentSize__];\n    CGSize re$ult$conv = [re$ult getCGSize];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGSize*) popoverContentSize__\n{\n    return [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:[super popoverContentSize]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "presentPopoverFromBarButtonItem(crossmobile.ios.uikit.UIBarButtonItem,long,boolean)": {
      "reverse": "- (void) presentPopoverFromBarButtonItem:(UIBarButtonItem *) item permittedArrowDirections:(UIPopoverArrowDirection) arrowDirections animated:(BOOL) animated\n{\n    [self presentPopoverFromBarButtonItem___crossmobile_ios_uikit_UIBarButtonItem_long_boolean:(item ? item : JAVA_NULL) :arrowDirections :animated];\n}\n\n",
      "super": "- (void) presentPopoverFromBarButtonItem___crossmobile_ios_uikit_UIBarButtonItem_long_boolean:(UIBarButtonItem*) item :(JAVA_LONG) arrowDirections :(BOOL) animated \n{\n    [super presentPopoverFromBarButtonItem:(item == JAVA_NULL ? nil : item) permittedArrowDirections:arrowDirections animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem"
      ]
    },
    "presentPopoverFromRect(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView,long,boolean)": {
      "reverse": "- (void) presentPopoverFromRect:(CGRect) rect inView:(UIView *) view permittedArrowDirections:(UIPopoverArrowDirection) arrowDirections animated:(BOOL) animated\n{\n    crossmobile_ios_coregraphics_CGRect* rect$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:rect];\n    [self presentPopoverFromRect___crossmobile_ios_coregraphics_CGRect_crossmobile_ios_uikit_UIView_long_boolean:rect$conv :(view ? view : JAVA_NULL) :arrowDirections :animated];\n    [rect$conv release];\n}\n\n",
      "super": "- (void) presentPopoverFromRect___crossmobile_ios_coregraphics_CGRect_crossmobile_ios_uikit_UIView_long_boolean:(crossmobile_ios_coregraphics_CGRect*) rect :(UIView*) view :(JAVA_LONG) arrowDirections :(BOOL) animated \n{\n    [super presentPopoverFromRect:[rect getCGRect] inView:(view == JAVA_NULL ? nil : view) permittedArrowDirections:arrowDirections animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setContentViewController(crossmobile.ios.uikit.UIViewController)": {
      "reverse": "- (void) setContentViewController:(UIViewController *) contentViewController\n{\n    [self setContentViewController___crossmobile_ios_uikit_UIViewController:(contentViewController ? contentViewController : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setContentViewController___crossmobile_ios_uikit_UIViewController:(UIViewController*) contentViewController \n{\n    [super setContentViewController:(contentViewController == JAVA_NULL ? nil : contentViewController)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "setContentViewController(crossmobile.ios.uikit.UIViewController,boolean)": {
      "reverse": "- (void) setContentViewController:(UIViewController *) viewController animated:(BOOL) animated\n{\n    [self setContentViewController___crossmobile_ios_uikit_UIViewController_boolean:(viewController ? viewController : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) setContentViewController___crossmobile_ios_uikit_UIViewController_boolean:(UIViewController*) viewController :(BOOL) animated \n{\n    [super setContentViewController:(viewController == JAVA_NULL ? nil : viewController) animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "setDelegate(crossmobile.ios.uikit.UIPopoverControllerDelegate)": {
      "reverse": "- (void) setDelegate:(id<UIPopoverControllerDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UIPopoverControllerDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UIPopoverControllerDelegate:(id<UIPopoverControllerDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPopoverControllerDelegate"
      ]
    },
    "setPassthroughViews(java.util.List)": {
      "reverse": "- (void) setPassthroughViews:(NSArray<__kindof UIView *> *) passthroughViews\n{\n    [self setPassthroughViews___java_util_List:(passthroughViews ? passthroughViews : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setPassthroughViews___java_util_List:(NSArray*) passthroughViews \n{\n    [super setPassthroughViews:(passthroughViews == JAVA_NULL ? nil : passthroughViews)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setPopoverContentSize(crossmobile.ios.coregraphics.CGSize)": {
      "reverse": "- (void) setPopoverContentSize:(CGSize) popoverContentSize\n{\n    crossmobile_ios_coregraphics_CGSize* popoverContentSize$conv = [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:popoverContentSize];\n    [self setPopoverContentSize___crossmobile_ios_coregraphics_CGSize:popoverContentSize$conv];\n    [popoverContentSize$conv release];\n}\n\n",
      "super": "- (void) setPopoverContentSize___crossmobile_ios_coregraphics_CGSize:(crossmobile_ios_coregraphics_CGSize*) popoverContentSize \n{\n    [super setPopoverContentSize:[popoverContentSize getCGSize]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "setPopoverContentSize(crossmobile.ios.coregraphics.CGSize,boolean)": {
      "reverse": "- (void) setPopoverContentSize:(CGSize) size animated:(BOOL) animated\n{\n    crossmobile_ios_coregraphics_CGSize* size$conv = [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:size];\n    [self setPopoverContentSize___crossmobile_ios_coregraphics_CGSize_boolean:size$conv :animated];\n    [size$conv release];\n}\n\n",
      "super": "- (void) setPopoverContentSize___crossmobile_ios_coregraphics_CGSize_boolean:(crossmobile_ios_coregraphics_CGSize*) size :(BOOL) animated \n{\n    [super setPopoverContentSize:[size getCGSize] animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIPopoverControllerDelegate": {
    "didDismissPopover(crossmobile.ios.uikit.UIPopoverController)": {
      "reverse": "- (void) popoverControllerDidDismissPopover:(UIPopoverController *) popoverController\n{\n    [self didDismissPopover___crossmobile_ios_uikit_UIPopoverController:(popoverController ? popoverController : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didDismissPopover___crossmobile_ios_uikit_UIPopoverController:(UIPopoverController*) popoverController \n{\n    [super popoverControllerDidDismissPopover:(popoverController == JAVA_NULL ? nil : popoverController)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPopoverController"
      ]
    },
    "shouldDismissPopover(crossmobile.ios.uikit.UIPopoverController)": {
      "reverse": "- (BOOL) popoverControllerShouldDismissPopover:(UIPopoverController *) popoverController\n{\n    return [self shouldDismissPopover___crossmobile_ios_uikit_UIPopoverController:(popoverController ? popoverController : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldDismissPopover___crossmobile_ios_uikit_UIPopoverController:(UIPopoverController*) popoverController \n{\n    return [super popoverControllerShouldDismissPopover:(popoverController == JAVA_NULL ? nil : popoverController)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPopoverController"
      ]
    }
  },
  "crossmobile.ios.uikit.UIPrintInteractionController": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "dismissAnimated(boolean)": {
      "reverse": "- (void) dismissAnimated:(BOOL) animated\n{\n    [self dismissAnimated___boolean:animated];\n}\n\n",
      "super": "- (void) dismissAnimated___boolean:(BOOL) animated \n{\n    [super dismissAnimated:animated];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "printingItem()": {
      "reverse": "- (id) printingItem\n{\n    id re$ult = [self printingItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) printingItem__\n{\n    id re$ult = [super printingItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "printingItems()": {
      "reverse": "- (NSArray *) printingItems\n{\n    NSArray * re$ult = [self printingItems__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) printingItems__\n{\n    NSArray* re$ult = [super printingItems];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setPrintingItem(crossmobile.ios.foundation.NSObject)": {
      "reverse": "- (void) setPrintingItem:(id) printingItem\n{\n    [self setPrintingItem___crossmobile_ios_foundation_NSObject:(printingItem ? printingItem : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setPrintingItem___crossmobile_ios_foundation_NSObject:(NSObject*) printingItem \n{\n    [super setPrintingItem:(printingItem == JAVA_NULL ? nil : printingItem)];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "setPrintingItems(java.util.List)": {
      "reverse": "- (void) setPrintingItems:(NSArray *) printingItems\n{\n    [self setPrintingItems___java_util_List:(printingItems ? printingItems : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setPrintingItems___java_util_List:(NSArray*) printingItems \n{\n    [super setPrintingItems:(printingItems == JAVA_NULL ? nil : printingItems)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIProgressView": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "progress()": {
      "reverse": "- (float) progress\n{\n    return [self progress__];\n}\n\n",
      "super": "- (float) progress__\n{\n    return [super progress];\n}\n\n"
    },
    "progressTintColor()": {
      "reverse": "- (UIColor *) progressTintColor\n{\n    UIColor * re$ult = [self progressTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) progressTintColor__\n{\n    UIColor* re$ult = [super progressTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "progressViewStyle()": {
      "reverse": "- (UIProgressViewStyle) progressViewStyle\n{\n    return [self progressViewStyle__];\n}\n\n",
      "super": "- (int) progressViewStyle__\n{\n    return [super progressViewStyle];\n}\n\n"
    },
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setProgress(float)": {
      "reverse": "- (void) setProgress:(float) progress\n{\n    [self setProgress___float:progress];\n}\n\n",
      "super": "- (void) setProgress___float:(float) progress \n{\n    [super setProgress:progress];\n}\n\n"
    },
    "setProgressTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setProgressTintColor:(UIColor *) progressTintColor\n{\n    [self setProgressTintColor___crossmobile_ios_uikit_UIColor:(progressTintColor ? progressTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setProgressTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) progressTintColor \n{\n    [super setProgressTintColor:(progressTintColor == JAVA_NULL ? nil : progressTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setProgressViewStyle(int)": {
      "reverse": "- (void) setProgressViewStyle:(UIProgressViewStyle) progressViewStyle\n{\n    [self setProgressViewStyle___int:progressViewStyle];\n}\n\n",
      "super": "- (void) setProgressViewStyle___int:(int) progressViewStyle \n{\n    [super setProgressViewStyle:progressViewStyle];\n}\n\n"
    },
    "setRestorationIdentifier(java.lang.String)": null,
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTrackTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setTrackTintColor:(UIColor *) trackTintColor\n{\n    [self setTrackTintColor___crossmobile_ios_uikit_UIColor:(trackTintColor ? trackTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTrackTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) trackTintColor \n{\n    [super setTrackTintColor:(trackTintColor == JAVA_NULL ? nil : trackTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trackTintColor()": {
      "reverse": "- (UIColor *) trackTintColor\n{\n    UIColor * re$ult = [self trackTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) trackTintColor__\n{\n    UIColor* re$ult = [super trackTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UIResponder": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "becomeFirstResponder()": {
      "reverse": "- (BOOL) becomeFirstResponder\n{\n    return [self becomeFirstResponder__];\n}\n\n",
      "super": "- (BOOL) becomeFirstResponder__\n{\n    return [super becomeFirstResponder];\n}\n\n"
    },
    "isFirstResponder()": {
      "reverse": "- (BOOL) isFirstResponder\n{\n    return [self isFirstResponder__];\n}\n\n",
      "super": "- (BOOL) isFirstResponder__\n{\n    return [super isFirstResponder];\n}\n\n"
    },
    "nextResponder()": {
      "reverse": "- (UIResponder *) nextResponder\n{\n    UIResponder * re$ult = [self nextResponder__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIResponder*) nextResponder__\n{\n    UIResponder* re$ult = [super nextResponder];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIResponder"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": {
      "reverse": "- (BOOL) resignFirstResponder\n{\n    return [self resignFirstResponder__];\n}\n\n",
      "super": "- (BOOL) resignFirstResponder__\n{\n    return [super resignFirstResponder];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": {
      "reverse": "- (void) touchesBegan:(NSSet<UITouch *> *) touches withEvent:(UIEvent *) event\n{\n    [self touchesBegan___java_util_Set_crossmobile_ios_uikit_UIEvent:(touches ? touches : JAVA_NULL) :(event ? event : JAVA_NULL)];\n}\n\n",
      "super": "- (void) touchesBegan___java_util_Set_crossmobile_ios_uikit_UIEvent:(NSSet*) touches :(UIEvent*) event \n{\n    [super touchesBegan:(touches == JAVA_NULL ? nil : touches) withEvent:(event == JAVA_NULL ? nil : event)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEvent",
        "java_util_Set"
      ]
    },
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": {
      "reverse": "- (void) touchesCancelled:(NSSet<UITouch *> *) touches withEvent:(UIEvent *) event\n{\n    [self touchesCancelled___java_util_Set_crossmobile_ios_uikit_UIEvent:(touches ? touches : JAVA_NULL) :(event ? event : JAVA_NULL)];\n}\n\n",
      "super": "- (void) touchesCancelled___java_util_Set_crossmobile_ios_uikit_UIEvent:(NSSet*) touches :(UIEvent*) event \n{\n    [super touchesCancelled:(touches == JAVA_NULL ? nil : touches) withEvent:(event == JAVA_NULL ? nil : event)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEvent",
        "java_util_Set"
      ]
    },
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": {
      "reverse": "- (void) touchesEnded:(NSSet<UITouch *> *) touches withEvent:(UIEvent *) event\n{\n    [self touchesEnded___java_util_Set_crossmobile_ios_uikit_UIEvent:(touches ? touches : JAVA_NULL) :(event ? event : JAVA_NULL)];\n}\n\n",
      "super": "- (void) touchesEnded___java_util_Set_crossmobile_ios_uikit_UIEvent:(NSSet*) touches :(UIEvent*) event \n{\n    [super touchesEnded:(touches == JAVA_NULL ? nil : touches) withEvent:(event == JAVA_NULL ? nil : event)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEvent",
        "java_util_Set"
      ]
    },
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": {
      "reverse": "- (void) touchesMoved:(NSSet<UITouch *> *) touches withEvent:(UIEvent *) event\n{\n    [self touchesMoved___java_util_Set_crossmobile_ios_uikit_UIEvent:(touches ? touches : JAVA_NULL) :(event ? event : JAVA_NULL)];\n}\n\n",
      "super": "- (void) touchesMoved___java_util_Set_crossmobile_ios_uikit_UIEvent:(NSSet*) touches :(UIEvent*) event \n{\n    [super touchesMoved:(touches == JAVA_NULL ? nil : touches) withEvent:(event == JAVA_NULL ? nil : event)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEvent",
        "java_util_Set"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIRotationGestureRecognizer": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addTarget(crossmobile.ios.foundation.NSSelector)": null,
    "canBePreventedByGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "canPreventGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "cancelsTouchesInView()": null,
    "delaysTouchesBegan()": null,
    "delaysTouchesEnded()": null,
    "delegate()": null,
    "isEnabled()": null,
    "locationInView(crossmobile.ios.uikit.UIView)": null,
    "locationOfTouch(int,crossmobile.ios.uikit.UIView)": null,
    "numberOfTouches()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.foundation.NSSelector)": null,
    "requireGestureRecognizerToFail(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "reset()": null,
    "rotation()": {
      "reverse": "- (CGFloat) rotation\n{\n    return [self rotation__];\n}\n\n",
      "super": "- (double) rotation__\n{\n    return [super rotation];\n}\n\n"
    },
    "setCancelsTouchesInView(boolean)": null,
    "setDelaysTouchesBegan(boolean)": null,
    "setDelaysTouchesEnded(boolean)": null,
    "setDelegate(crossmobile.ios.uikit.UIGestureRecognizerDelegate)": null,
    "setEnabled(boolean)": null,
    "setRotation(double)": {
      "reverse": "- (void) setRotation:(CGFloat) rotation\n{\n    [self setRotation___double:rotation];\n}\n\n",
      "super": "- (void) setRotation___double:(double) rotation \n{\n    [super setRotation:rotation];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "state()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "velocity()": {
      "reverse": "- (CGFloat) velocity\n{\n    return [self velocity__];\n}\n\n",
      "super": "- (double) velocity__\n{\n    return [super velocity];\n}\n\n"
    },
    "view()": null
  },
  "crossmobile.ios.uikit.UIScreen": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "applicationFrame()": {
      "reverse": "- (CGRect) applicationFrame\n{\n    crossmobile_ios_coregraphics_CGRect* re$ult = [self applicationFrame__];\n    CGRect re$ult$conv = [re$ult getCGRect];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGRect*) applicationFrame__\n{\n    return [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:[super applicationFrame]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect"
      ]
    },
    "bounds()": {
      "reverse": "- (CGRect) bounds\n{\n    crossmobile_ios_coregraphics_CGRect* re$ult = [self bounds__];\n    CGRect re$ult$conv = [re$ult getCGRect];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGRect*) bounds__\n{\n    return [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:[super bounds]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "scale()": {
      "reverse": "- (CGFloat) scale\n{\n    return [self scale__];\n}\n\n",
      "super": "- (double) scale__\n{\n    return [super scale];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIScrollView": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "alwaysBounceHorizontal()": {
      "reverse": "- (BOOL) alwaysBounceHorizontal\n{\n    return [self alwaysBounceHorizontal__];\n}\n\n",
      "super": "- (BOOL) alwaysBounceHorizontal__\n{\n    return [super alwaysBounceHorizontal];\n}\n\n"
    },
    "alwaysBounceVertical()": {
      "reverse": "- (BOOL) alwaysBounceVertical\n{\n    return [self alwaysBounceVertical__];\n}\n\n",
      "super": "- (BOOL) alwaysBounceVertical__\n{\n    return [super alwaysBounceVertical];\n}\n\n"
    },
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounces()": {
      "reverse": "- (BOOL) bounces\n{\n    return [self bounces__];\n}\n\n",
      "super": "- (BOOL) bounces__\n{\n    return [super bounces];\n}\n\n"
    },
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "canCancelContentTouches()": {
      "reverse": "- (BOOL) canCancelContentTouches\n{\n    return [self canCancelContentTouches__];\n}\n\n",
      "super": "- (BOOL) canCancelContentTouches__\n{\n    return [super canCancelContentTouches];\n}\n\n"
    },
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentInset()": {
      "reverse": "- (UIEdgeInsets) contentInset\n{\n    crossmobile_ios_uikit_UIEdgeInsets* re$ult = [self contentInset__];\n    UIEdgeInsets re$ult$conv = [re$ult getUIEdgeInsets];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_uikit_UIEdgeInsets*) contentInset__\n{\n    return [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:[super contentInset]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "contentMode()": null,
    "contentOffset()": {
      "reverse": "- (CGPoint) contentOffset\n{\n    crossmobile_ios_coregraphics_CGPoint* re$ult = [self contentOffset__];\n    CGPoint re$ult$conv = [re$ult getCGPoint];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPoint*) contentOffset__\n{\n    return [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:[super contentOffset]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint"
      ]
    },
    "contentSize()": {
      "reverse": "- (CGSize) contentSize\n{\n    crossmobile_ios_coregraphics_CGSize* re$ult = [self contentSize__];\n    CGSize re$ult$conv = [re$ult getCGSize];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGSize*) contentSize__\n{\n    return [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:[super contentSize]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "decelerationRate()": {
      "reverse": "- (CGFloat) decelerationRate\n{\n    return [self decelerationRate__];\n}\n\n",
      "super": "- (double) decelerationRate__\n{\n    return [super decelerationRate];\n}\n\n"
    },
    "delaysContentTouches()": {
      "reverse": "- (BOOL) delaysContentTouches\n{\n    return [self delaysContentTouches__];\n}\n\n",
      "super": "- (BOOL) delaysContentTouches__\n{\n    return [super delaysContentTouches];\n}\n\n"
    },
    "delegate()": {
      "reverse": "- (id<UIScrollViewDelegate>) delegate\n{\n    id<UIScrollViewDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UIScrollViewDelegate>) delegate__\n{\n    id<UIScrollViewDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIScrollViewDelegate"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "flashScrollIndicators()": {
      "reverse": "- (void) flashScrollIndicators\n{\n    [self flashScrollIndicators__];\n}\n\n",
      "super": "- (void) flashScrollIndicators__\n{\n    [super flashScrollIndicators];\n}\n\n"
    },
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "indicatorStyle()": {
      "reverse": "- (UIScrollViewIndicatorStyle) indicatorStyle\n{\n    return [self indicatorStyle__];\n}\n\n",
      "super": "- (int) indicatorStyle__\n{\n    return [super indicatorStyle];\n}\n\n"
    },
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isDecelerating()": {
      "reverse": "- (BOOL) isDecelerating\n{\n    return [self isDecelerating__];\n}\n\n",
      "super": "- (BOOL) isDecelerating__\n{\n    return [super isDecelerating];\n}\n\n"
    },
    "isDirectionalLockEnabled()": {
      "reverse": "- (BOOL) isDirectionalLockEnabled\n{\n    return [self isDirectionalLockEnabled__];\n}\n\n",
      "super": "- (BOOL) isDirectionalLockEnabled__\n{\n    return [super isDirectionalLockEnabled];\n}\n\n"
    },
    "isDragging()": {
      "reverse": "- (BOOL) isDragging\n{\n    return [self isDragging__];\n}\n\n",
      "super": "- (BOOL) isDragging__\n{\n    return [super isDragging];\n}\n\n"
    },
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isPagingEnabled()": {
      "reverse": "- (BOOL) isPagingEnabled\n{\n    return [self isPagingEnabled__];\n}\n\n",
      "super": "- (BOOL) isPagingEnabled__\n{\n    return [super isPagingEnabled];\n}\n\n"
    },
    "isScrollEnabled()": {
      "reverse": "- (BOOL) isScrollEnabled\n{\n    return [self isScrollEnabled__];\n}\n\n",
      "super": "- (BOOL) isScrollEnabled__\n{\n    return [super isScrollEnabled];\n}\n\n"
    },
    "isTracking()": {
      "reverse": "- (BOOL) isTracking\n{\n    return [self isTracking__];\n}\n\n",
      "super": "- (BOOL) isTracking__\n{\n    return [super isTracking];\n}\n\n"
    },
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "scrollIndicatorInsets()": {
      "reverse": "- (UIEdgeInsets) scrollIndicatorInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* re$ult = [self scrollIndicatorInsets__];\n    UIEdgeInsets re$ult$conv = [re$ult getUIEdgeInsets];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_uikit_UIEdgeInsets*) scrollIndicatorInsets__\n{\n    return [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:[super scrollIndicatorInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "scrollRectToVisible(crossmobile.ios.coregraphics.CGRect,boolean)": {
      "reverse": "- (void) scrollRectToVisible:(CGRect) rect animated:(BOOL) animated\n{\n    crossmobile_ios_coregraphics_CGRect* rect$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:rect];\n    [self scrollRectToVisible___crossmobile_ios_coregraphics_CGRect_boolean:rect$conv :animated];\n    [rect$conv release];\n}\n\n",
      "super": "- (void) scrollRectToVisible___crossmobile_ios_coregraphics_CGRect_boolean:(crossmobile_ios_coregraphics_CGRect*) rect :(BOOL) animated \n{\n    [super scrollRectToVisible:[rect getCGRect] animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect"
      ]
    },
    "scrollsToTop()": {
      "reverse": "- (BOOL) scrollsToTop\n{\n    return [self scrollsToTop__];\n}\n\n",
      "super": "- (BOOL) scrollsToTop__\n{\n    return [super scrollsToTop];\n}\n\n"
    },
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAlwaysBounceHorizontal(boolean)": {
      "reverse": "- (void) setAlwaysBounceHorizontal:(BOOL) alwaysBounceHorizontal\n{\n    [self setAlwaysBounceHorizontal___boolean:alwaysBounceHorizontal];\n}\n\n",
      "super": "- (void) setAlwaysBounceHorizontal___boolean:(BOOL) alwaysBounceHorizontal \n{\n    [super setAlwaysBounceHorizontal:alwaysBounceHorizontal];\n}\n\n"
    },
    "setAlwaysBounceVertical(boolean)": {
      "reverse": "- (void) setAlwaysBounceVertical:(BOOL) alwaysBounceVertical\n{\n    [self setAlwaysBounceVertical___boolean:alwaysBounceVertical];\n}\n\n",
      "super": "- (void) setAlwaysBounceVertical___boolean:(BOOL) alwaysBounceVertical \n{\n    [super setAlwaysBounceVertical:alwaysBounceVertical];\n}\n\n"
    },
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounces(boolean)": {
      "reverse": "- (void) setBounces:(BOOL) bounces\n{\n    [self setBounces___boolean:bounces];\n}\n\n",
      "super": "- (void) setBounces___boolean:(BOOL) bounces \n{\n    [super setBounces:bounces];\n}\n\n"
    },
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCanCancelContentTouches(boolean)": {
      "reverse": "- (void) setCanCancelContentTouches:(BOOL) canCancelContentTouches\n{\n    [self setCanCancelContentTouches___boolean:canCancelContentTouches];\n}\n\n",
      "super": "- (void) setCanCancelContentTouches___boolean:(BOOL) canCancelContentTouches \n{\n    [super setCanCancelContentTouches:canCancelContentTouches];\n}\n\n"
    },
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentInset(crossmobile.ios.uikit.UIEdgeInsets)": {
      "reverse": "- (void) setContentInset:(UIEdgeInsets) contentInset\n{\n    crossmobile_ios_uikit_UIEdgeInsets* contentInset$conv = [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:contentInset];\n    [self setContentInset___crossmobile_ios_uikit_UIEdgeInsets:contentInset$conv];\n    [contentInset$conv release];\n}\n\n",
      "super": "- (void) setContentInset___crossmobile_ios_uikit_UIEdgeInsets:(crossmobile_ios_uikit_UIEdgeInsets*) contentInset \n{\n    [super setContentInset:[contentInset getUIEdgeInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "setContentMode(int)": null,
    "setContentOffset(crossmobile.ios.coregraphics.CGPoint)": {
      "reverse": "- (void) setContentOffset:(CGPoint) contentOffset\n{\n    crossmobile_ios_coregraphics_CGPoint* contentOffset$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:contentOffset];\n    [self setContentOffset___crossmobile_ios_coregraphics_CGPoint:contentOffset$conv];\n    [contentOffset$conv release];\n}\n\n",
      "super": "- (void) setContentOffset___crossmobile_ios_coregraphics_CGPoint:(crossmobile_ios_coregraphics_CGPoint*) contentOffset \n{\n    [super setContentOffset:[contentOffset getCGPoint]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint"
      ]
    },
    "setContentOffset(crossmobile.ios.coregraphics.CGPoint,boolean)": {
      "reverse": "- (void) setContentOffset:(CGPoint) contentOffset animated:(BOOL) animated\n{\n    crossmobile_ios_coregraphics_CGPoint* contentOffset$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:contentOffset];\n    [self setContentOffset___crossmobile_ios_coregraphics_CGPoint_boolean:contentOffset$conv :animated];\n    [contentOffset$conv release];\n}\n\n",
      "super": "- (void) setContentOffset___crossmobile_ios_coregraphics_CGPoint_boolean:(crossmobile_ios_coregraphics_CGPoint*) contentOffset :(BOOL) animated \n{\n    [super setContentOffset:[contentOffset getCGPoint] animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint"
      ]
    },
    "setContentSize(crossmobile.ios.coregraphics.CGSize)": {
      "reverse": "- (void) setContentSize:(CGSize) contentSize\n{\n    crossmobile_ios_coregraphics_CGSize* contentSize$conv = [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:contentSize];\n    [self setContentSize___crossmobile_ios_coregraphics_CGSize:contentSize$conv];\n    [contentSize$conv release];\n}\n\n",
      "super": "- (void) setContentSize___crossmobile_ios_coregraphics_CGSize:(crossmobile_ios_coregraphics_CGSize*) contentSize \n{\n    [super setContentSize:[contentSize getCGSize]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "setDecelerationRate(double)": {
      "reverse": "- (void) setDecelerationRate:(CGFloat) decelerationRate\n{\n    [self setDecelerationRate___double:decelerationRate];\n}\n\n",
      "super": "- (void) setDecelerationRate___double:(double) decelerationRate \n{\n    [super setDecelerationRate:decelerationRate];\n}\n\n"
    },
    "setDelaysContentTouches(boolean)": {
      "reverse": "- (void) setDelaysContentTouches:(BOOL) delaysContentTouches\n{\n    [self setDelaysContentTouches___boolean:delaysContentTouches];\n}\n\n",
      "super": "- (void) setDelaysContentTouches___boolean:(BOOL) delaysContentTouches \n{\n    [super setDelaysContentTouches:delaysContentTouches];\n}\n\n"
    },
    "setDelegate(crossmobile.ios.uikit.UIScrollViewDelegate)": {
      "reverse": "- (void) setDelegate:(id<UIScrollViewDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UIScrollViewDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UIScrollViewDelegate:(id<UIScrollViewDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIScrollViewDelegate"
      ]
    },
    "setDirectionalLockEnabled(boolean)": {
      "reverse": "- (void) setDirectionalLockEnabled:(BOOL) directionalLockEnabled\n{\n    [self setDirectionalLockEnabled___boolean:directionalLockEnabled];\n}\n\n",
      "super": "- (void) setDirectionalLockEnabled___boolean:(BOOL) directionalLockEnabled \n{\n    [super setDirectionalLockEnabled:directionalLockEnabled];\n}\n\n"
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setIndicatorStyle(int)": {
      "reverse": "- (void) setIndicatorStyle:(UIScrollViewIndicatorStyle) indicatorStyle\n{\n    [self setIndicatorStyle___int:indicatorStyle];\n}\n\n",
      "super": "- (void) setIndicatorStyle___int:(int) indicatorStyle \n{\n    [super setIndicatorStyle:indicatorStyle];\n}\n\n"
    },
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPagingEnabled(boolean)": {
      "reverse": "- (void) setPagingEnabled:(BOOL) pagingEnabled\n{\n    [self setPagingEnabled___boolean:pagingEnabled];\n}\n\n",
      "super": "- (void) setPagingEnabled___boolean:(BOOL) pagingEnabled \n{\n    [super setPagingEnabled:pagingEnabled];\n}\n\n"
    },
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setScrollEnabled(boolean)": {
      "reverse": "- (void) setScrollEnabled:(BOOL) scrollEnabled\n{\n    [self setScrollEnabled___boolean:scrollEnabled];\n}\n\n",
      "super": "- (void) setScrollEnabled___boolean:(BOOL) scrollEnabled \n{\n    [super setScrollEnabled:scrollEnabled];\n}\n\n"
    },
    "setScrollIndicatorInsets(crossmobile.ios.uikit.UIEdgeInsets)": {
      "reverse": "- (void) setScrollIndicatorInsets:(UIEdgeInsets) scrollIndicatorInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* scrollIndicatorInsets$conv = [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:scrollIndicatorInsets];\n    [self setScrollIndicatorInsets___crossmobile_ios_uikit_UIEdgeInsets:scrollIndicatorInsets$conv];\n    [scrollIndicatorInsets$conv release];\n}\n\n",
      "super": "- (void) setScrollIndicatorInsets___crossmobile_ios_uikit_UIEdgeInsets:(crossmobile_ios_uikit_UIEdgeInsets*) scrollIndicatorInsets \n{\n    [super setScrollIndicatorInsets:[scrollIndicatorInsets getUIEdgeInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "setScrollsToTop(boolean)": {
      "reverse": "- (void) setScrollsToTop:(BOOL) scrollsToTop\n{\n    [self setScrollsToTop___boolean:scrollsToTop];\n}\n\n",
      "super": "- (void) setScrollsToTop___boolean:(BOOL) scrollsToTop \n{\n    [super setScrollsToTop:scrollsToTop];\n}\n\n"
    },
    "setShowsHorizontalScrollIndicator(boolean)": {
      "reverse": "- (void) setShowsHorizontalScrollIndicator:(BOOL) showsHorizontalScrollIndicator\n{\n    [self setShowsHorizontalScrollIndicator___boolean:showsHorizontalScrollIndicator];\n}\n\n",
      "super": "- (void) setShowsHorizontalScrollIndicator___boolean:(BOOL) showsHorizontalScrollIndicator \n{\n    [super setShowsHorizontalScrollIndicator:showsHorizontalScrollIndicator];\n}\n\n"
    },
    "setShowsVerticalScrollIndicator(boolean)": {
      "reverse": "- (void) setShowsVerticalScrollIndicator:(BOOL) showsVerticalScrollIndicator\n{\n    [self setShowsVerticalScrollIndicator___boolean:showsVerticalScrollIndicator];\n}\n\n",
      "super": "- (void) setShowsVerticalScrollIndicator___boolean:(BOOL) showsVerticalScrollIndicator \n{\n    [super setShowsVerticalScrollIndicator:showsVerticalScrollIndicator];\n}\n\n"
    },
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "showsHorizontalScrollIndicator()": {
      "reverse": "- (BOOL) showsHorizontalScrollIndicator\n{\n    return [self showsHorizontalScrollIndicator__];\n}\n\n",
      "super": "- (BOOL) showsHorizontalScrollIndicator__\n{\n    return [super showsHorizontalScrollIndicator];\n}\n\n"
    },
    "showsVerticalScrollIndicator()": {
      "reverse": "- (BOOL) showsVerticalScrollIndicator\n{\n    return [self showsVerticalScrollIndicator__];\n}\n\n",
      "super": "- (BOOL) showsVerticalScrollIndicator__\n{\n    return [super showsVerticalScrollIndicator];\n}\n\n"
    },
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesShouldBegin(java.util.Set,crossmobile.ios.uikit.UIEvent,crossmobile.ios.uikit.UIView)": {
      "reverse": "- (BOOL) touchesShouldBegin:(NSSet<UITouch *> *) touches withEvent:(UIEvent *) event inContentView:(UIView *) view\n{\n    return [self touchesShouldBegin___java_util_Set_crossmobile_ios_uikit_UIEvent_crossmobile_ios_uikit_UIView:(touches ? touches : JAVA_NULL) :(event ? event : JAVA_NULL) :(view ? view : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) touchesShouldBegin___java_util_Set_crossmobile_ios_uikit_UIEvent_crossmobile_ios_uikit_UIView:(NSSet*) touches :(UIEvent*) event :(UIView*) view \n{\n    return [super touchesShouldBegin:(touches == JAVA_NULL ? nil : touches) withEvent:(event == JAVA_NULL ? nil : event) inContentView:(view == JAVA_NULL ? nil : view)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEvent",
        "crossmobile_ios_uikit_UIView",
        "java_util_Set"
      ]
    },
    "touchesShouldCancelInContentView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (BOOL) touchesShouldCancelInContentView:(UIView *) view\n{\n    return [self touchesShouldCancelInContentView___crossmobile_ios_uikit_UIView:(view ? view : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) touchesShouldCancelInContentView___crossmobile_ios_uikit_UIView:(UIView*) view \n{\n    return [super touchesShouldCancelInContentView:(view == JAVA_NULL ? nil : view)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UIScrollViewDelegate": {
    "didEndDecelerating(crossmobile.ios.uikit.UIScrollView)": {
      "reverse": "- (void) scrollViewDidEndDecelerating:(UIScrollView *) scrollView\n{\n    [self didEndDecelerating___crossmobile_ios_uikit_UIScrollView:(scrollView ? scrollView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didEndDecelerating___crossmobile_ios_uikit_UIScrollView:(UIScrollView*) scrollView \n{\n    [super scrollViewDidEndDecelerating:(scrollView == JAVA_NULL ? nil : scrollView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIScrollView"
      ]
    },
    "didEndDragging(crossmobile.ios.uikit.UIScrollView,boolean)": {
      "reverse": "- (void) scrollViewDidEndDragging:(UIScrollView *) scrollView willDecelerate:(BOOL) decelerate\n{\n    [self didEndDragging___crossmobile_ios_uikit_UIScrollView_boolean:(scrollView ? scrollView : JAVA_NULL) :decelerate];\n}\n\n",
      "super": "- (void) didEndDragging___crossmobile_ios_uikit_UIScrollView_boolean:(UIScrollView*) scrollView :(BOOL) decelerate \n{\n    [super scrollViewDidEndDragging:(scrollView == JAVA_NULL ? nil : scrollView) willDecelerate:decelerate];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIScrollView"
      ]
    },
    "didEndScrollingAnimation(crossmobile.ios.uikit.UIScrollView)": {
      "reverse": "- (void) scrollViewDidEndScrollingAnimation:(UIScrollView *) scrollView\n{\n    [self didEndScrollingAnimation___crossmobile_ios_uikit_UIScrollView:(scrollView ? scrollView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didEndScrollingAnimation___crossmobile_ios_uikit_UIScrollView:(UIScrollView*) scrollView \n{\n    [super scrollViewDidEndScrollingAnimation:(scrollView == JAVA_NULL ? nil : scrollView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIScrollView"
      ]
    },
    "didEndZooming(crossmobile.ios.uikit.UIScrollView,crossmobile.ios.uikit.UIView,double)": {
      "reverse": "- (void) scrollViewDidEndZooming:(UIScrollView *) scrollView withView:(UIView *) view atScale:(CGFloat) scale\n{\n    [self didEndZooming___crossmobile_ios_uikit_UIScrollView_crossmobile_ios_uikit_UIView_double:(scrollView ? scrollView : JAVA_NULL) :(view ? view : JAVA_NULL) :scale];\n}\n\n",
      "super": "- (void) didEndZooming___crossmobile_ios_uikit_UIScrollView_crossmobile_ios_uikit_UIView_double:(UIScrollView*) scrollView :(UIView*) view :(double) scale \n{\n    [super scrollViewDidEndZooming:(scrollView == JAVA_NULL ? nil : scrollView) withView:(view == JAVA_NULL ? nil : view) atScale:scale];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIScrollView",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "didScroll(crossmobile.ios.uikit.UIScrollView)": {
      "reverse": "- (void) scrollViewDidScroll:(UIScrollView *) scrollView\n{\n    [self didScroll___crossmobile_ios_uikit_UIScrollView:(scrollView ? scrollView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didScroll___crossmobile_ios_uikit_UIScrollView:(UIScrollView*) scrollView \n{\n    [super scrollViewDidScroll:(scrollView == JAVA_NULL ? nil : scrollView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIScrollView"
      ]
    },
    "didScrollToTop(crossmobile.ios.uikit.UIScrollView)": {
      "reverse": "- (void) scrollViewDidScrollToTop:(UIScrollView *) scrollView\n{\n    [self didScrollToTop___crossmobile_ios_uikit_UIScrollView:(scrollView ? scrollView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didScrollToTop___crossmobile_ios_uikit_UIScrollView:(UIScrollView*) scrollView \n{\n    [super scrollViewDidScrollToTop:(scrollView == JAVA_NULL ? nil : scrollView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIScrollView"
      ]
    },
    "shouldScrollToTop(crossmobile.ios.uikit.UIScrollView)": {
      "reverse": "- (BOOL) scrollViewShouldScrollToTop:(UIScrollView *) scrollView\n{\n    return [self shouldScrollToTop___crossmobile_ios_uikit_UIScrollView:(scrollView ? scrollView : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldScrollToTop___crossmobile_ios_uikit_UIScrollView:(UIScrollView*) scrollView \n{\n    return [super scrollViewShouldScrollToTop:(scrollView == JAVA_NULL ? nil : scrollView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIScrollView"
      ]
    },
    "viewForZoomingInScrollView(crossmobile.ios.uikit.UIScrollView)": {
      "reverse": "- (UIView *) viewForZoomingInScrollView:(UIScrollView *) scrollView\n{\n    UIView * re$ult = [self viewForZoomingInScrollView___crossmobile_ios_uikit_UIScrollView:(scrollView ? scrollView : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) viewForZoomingInScrollView___crossmobile_ios_uikit_UIScrollView:(UIScrollView*) scrollView \n{\n    UIView* re$ult = [super viewForZoomingInScrollView:(scrollView == JAVA_NULL ? nil : scrollView)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIScrollView",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "willBeginDecelerating(crossmobile.ios.uikit.UIScrollView)": {
      "reverse": "- (void) scrollViewWillBeginDecelerating:(UIScrollView *) scrollView\n{\n    [self willBeginDecelerating___crossmobile_ios_uikit_UIScrollView:(scrollView ? scrollView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willBeginDecelerating___crossmobile_ios_uikit_UIScrollView:(UIScrollView*) scrollView \n{\n    [super scrollViewWillBeginDecelerating:(scrollView == JAVA_NULL ? nil : scrollView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIScrollView"
      ]
    },
    "willBeginDragging(crossmobile.ios.uikit.UIScrollView)": {
      "reverse": "- (void) scrollViewWillBeginDragging:(UIScrollView *) scrollView\n{\n    [self willBeginDragging___crossmobile_ios_uikit_UIScrollView:(scrollView ? scrollView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willBeginDragging___crossmobile_ios_uikit_UIScrollView:(UIScrollView*) scrollView \n{\n    [super scrollViewWillBeginDragging:(scrollView == JAVA_NULL ? nil : scrollView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIScrollView"
      ]
    }
  },
  "crossmobile.ios.uikit.UISearchBar": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "autocapitalizationType()": {
      "reverse": "- (UITextAutocapitalizationType) autocapitalizationType\n{\n    return [self autocapitalizationType__];\n}\n\n",
      "super": "- (int) autocapitalizationType__\n{\n    return [super autocapitalizationType];\n}\n\n"
    },
    "autocorrectionType()": {
      "reverse": "- (UITextAutocorrectionType) autocorrectionType\n{\n    return [self autocorrectionType__];\n}\n\n",
      "super": "- (int) autocorrectionType__\n{\n    return [super autocorrectionType];\n}\n\n"
    },
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "barStyle()": {
      "reverse": "- (UIBarStyle) barStyle\n{\n    return [self barStyle__];\n}\n\n",
      "super": "- (int) barStyle__\n{\n    return [super barStyle];\n}\n\n"
    },
    "barTintColor()": {
      "reverse": "- (UIColor *) barTintColor\n{\n    UIColor * re$ult = [self barTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) barTintColor__\n{\n    UIColor* re$ult = [super barTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "delegate()": {
      "reverse": "- (id<UISearchBarDelegate>) delegate\n{\n    id<UISearchBarDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UISearchBarDelegate>) delegate__\n{\n    id<UISearchBarDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISearchBarDelegate"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isTranslucent()": {
      "reverse": "- (BOOL) isTranslucent\n{\n    return [self isTranslucent__];\n}\n\n",
      "super": "- (BOOL) isTranslucent__\n{\n    return [super isTranslucent];\n}\n\n"
    },
    "isUserInteractionEnabled()": null,
    "keyboardType()": {
      "reverse": "- (UIKeyboardType) keyboardType\n{\n    return [self keyboardType__];\n}\n\n",
      "super": "- (int) keyboardType__\n{\n    return [super keyboardType];\n}\n\n"
    },
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "placeholder()": {
      "reverse": "- (NSString *) placeholder\n{\n    NSString * re$ult = [self placeholder__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) placeholder__\n{\n    NSString* re$ult = [super placeholder];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "prompt()": {
      "reverse": "- (NSString *) prompt\n{\n    NSString * re$ult = [self prompt__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) prompt__\n{\n    NSString* re$ult = [super prompt];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "scopeButtonTitles()": {
      "reverse": "- (NSArray<NSString *> *) scopeButtonTitles\n{\n    NSArray<NSString *> * re$ult = [self scopeButtonTitles__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) scopeButtonTitles__\n{\n    NSArray* re$ult = [super scopeButtonTitles];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "searchBarStyle()": {
      "reverse": "- (UISearchBarStyle) searchBarStyle\n{\n    return [self searchBarStyle__];\n}\n\n",
      "super": "- (int) searchBarStyle__\n{\n    return [super searchBarStyle];\n}\n\n"
    },
    "selectedScopeButtonIndex()": {
      "reverse": "- (NSInteger) selectedScopeButtonIndex\n{\n    return [self selectedScopeButtonIndex__];\n}\n\n",
      "super": "- (int) selectedScopeButtonIndex__\n{\n    return [super selectedScopeButtonIndex];\n}\n\n"
    },
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutocapitalizationType(int)": {
      "reverse": "- (void) setAutocapitalizationType:(UITextAutocapitalizationType) autocapitalizationType\n{\n    [self setAutocapitalizationType___int:autocapitalizationType];\n}\n\n",
      "super": "- (void) setAutocapitalizationType___int:(int) autocapitalizationType \n{\n    [super setAutocapitalizationType:autocapitalizationType];\n}\n\n"
    },
    "setAutocorrectionType(int)": {
      "reverse": "- (void) setAutocorrectionType:(UITextAutocorrectionType) autocorrectionType\n{\n    [self setAutocorrectionType___int:autocorrectionType];\n}\n\n",
      "super": "- (void) setAutocorrectionType___int:(int) autocorrectionType \n{\n    [super setAutocorrectionType:autocorrectionType];\n}\n\n"
    },
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBarStyle(int)": {
      "reverse": "- (void) setBarStyle:(UIBarStyle) barStyle\n{\n    [self setBarStyle___int:barStyle];\n}\n\n",
      "super": "- (void) setBarStyle___int:(int) barStyle \n{\n    [super setBarStyle:barStyle];\n}\n\n"
    },
    "setBarTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setBarTintColor:(UIColor *) barTintColor\n{\n    [self setBarTintColor___crossmobile_ios_uikit_UIColor:(barTintColor ? barTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setBarTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) barTintColor \n{\n    [super setBarTintColor:(barTintColor == JAVA_NULL ? nil : barTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setDelegate(crossmobile.ios.uikit.UISearchBarDelegate)": {
      "reverse": "- (void) setDelegate:(id<UISearchBarDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UISearchBarDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UISearchBarDelegate:(id<UISearchBarDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISearchBarDelegate"
      ]
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setImage(crossmobile.ios.uikit.UIImage,int,int)": {
      "reverse": "- (void) setImage:(UIImage *) iconImage forSearchBarIcon:(UISearchBarIcon) icon state:(UIControlState) state\n{\n    [self setImage___crossmobile_ios_uikit_UIImage_int_int:(iconImage ? iconImage : JAVA_NULL) :icon :state];\n}\n\n",
      "super": "- (void) setImage___crossmobile_ios_uikit_UIImage_int_int:(UIImage*) iconImage :(int) icon :(int) state \n{\n    [super setImage:(iconImage == JAVA_NULL ? nil : iconImage) forSearchBarIcon:icon state:state];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setKeyboardType(int)": {
      "reverse": "- (void) setKeyboardType:(UIKeyboardType) keyboardType\n{\n    [self setKeyboardType___int:keyboardType];\n}\n\n",
      "super": "- (void) setKeyboardType___int:(int) keyboardType \n{\n    [super setKeyboardType:keyboardType];\n}\n\n"
    },
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPlaceholder(java.lang.String)": {
      "reverse": "- (void) setPlaceholder:(NSString *) placeholder\n{\n    [self setPlaceholder___java_lang_String:(placeholder ? placeholder : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setPlaceholder___java_lang_String:(NSString*) placeholder \n{\n    [super setPlaceholder:(placeholder == JAVA_NULL ? nil : placeholder)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setPrompt(java.lang.String)": {
      "reverse": "- (void) setPrompt:(NSString *) prompt\n{\n    [self setPrompt___java_lang_String:(prompt ? prompt : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setPrompt___java_lang_String:(NSString*) prompt \n{\n    [super setPrompt:(prompt == JAVA_NULL ? nil : prompt)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setRestorationIdentifier(java.lang.String)": null,
    "setScopeButtonTitles(java.util.List)": {
      "reverse": "- (void) setScopeButtonTitles:(NSArray<NSString *> *) scopeButtonTitles\n{\n    [self setScopeButtonTitles___java_util_List:(scopeButtonTitles ? scopeButtonTitles : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setScopeButtonTitles___java_util_List:(NSArray*) scopeButtonTitles \n{\n    [super setScopeButtonTitles:(scopeButtonTitles == JAVA_NULL ? nil : scopeButtonTitles)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setSearchBarStyle(int)": {
      "reverse": "- (void) setSearchBarStyle:(UISearchBarStyle) searchBarStyle\n{\n    [self setSearchBarStyle___int:searchBarStyle];\n}\n\n",
      "super": "- (void) setSearchBarStyle___int:(int) searchBarStyle \n{\n    [super setSearchBarStyle:searchBarStyle];\n}\n\n"
    },
    "setSelectedScopeButtonIndex(int)": {
      "reverse": "- (void) setSelectedScopeButtonIndex:(NSInteger) selectedScopeButtonIndex\n{\n    [self setSelectedScopeButtonIndex___int:selectedScopeButtonIndex];\n}\n\n",
      "super": "- (void) setSelectedScopeButtonIndex___int:(int) selectedScopeButtonIndex \n{\n    [super setSelectedScopeButtonIndex:selectedScopeButtonIndex];\n}\n\n"
    },
    "setShowsBookmarkButton(boolean)": {
      "reverse": "- (void) setShowsBookmarkButton:(BOOL) showsBookmarkButton\n{\n    [self setShowsBookmarkButton___boolean:showsBookmarkButton];\n}\n\n",
      "super": "- (void) setShowsBookmarkButton___boolean:(BOOL) showsBookmarkButton \n{\n    [super setShowsBookmarkButton:showsBookmarkButton];\n}\n\n"
    },
    "setShowsCancelButton(boolean)": {
      "reverse": "- (void) setShowsCancelButton:(BOOL) showsCancelButton\n{\n    [self setShowsCancelButton___boolean:showsCancelButton];\n}\n\n",
      "super": "- (void) setShowsCancelButton___boolean:(BOOL) showsCancelButton \n{\n    [super setShowsCancelButton:showsCancelButton];\n}\n\n"
    },
    "setShowsScopeBar(boolean)": {
      "reverse": "- (void) setShowsScopeBar:(BOOL) showsScopeBar\n{\n    [self setShowsScopeBar___boolean:showsScopeBar];\n}\n\n",
      "super": "- (void) setShowsScopeBar___boolean:(BOOL) showsScopeBar \n{\n    [super setShowsScopeBar:showsScopeBar];\n}\n\n"
    },
    "setTag(int)": null,
    "setText(java.lang.String)": {
      "reverse": "- (void) setText:(NSString *) text\n{\n    [self setText___java_lang_String:(text ? text : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setText___java_lang_String:(NSString*) text \n{\n    [super setText:(text == JAVA_NULL ? nil : text)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setTranslucent(boolean)": {
      "reverse": "- (void) setTranslucent:(BOOL) translucent\n{\n    [self setTranslucent___boolean:translucent];\n}\n\n",
      "super": "- (void) setTranslucent___boolean:(BOOL) translucent \n{\n    [super setTranslucent:translucent];\n}\n\n"
    },
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "showsBookmarkButton()": {
      "reverse": "- (BOOL) showsBookmarkButton\n{\n    return [self showsBookmarkButton__];\n}\n\n",
      "super": "- (BOOL) showsBookmarkButton__\n{\n    return [super showsBookmarkButton];\n}\n\n"
    },
    "showsCancelButton()": {
      "reverse": "- (BOOL) showsCancelButton\n{\n    return [self showsCancelButton__];\n}\n\n",
      "super": "- (BOOL) showsCancelButton__\n{\n    return [super showsCancelButton];\n}\n\n"
    },
    "showsScopeBar()": {
      "reverse": "- (BOOL) showsScopeBar\n{\n    return [self showsScopeBar__];\n}\n\n",
      "super": "- (BOOL) showsScopeBar__\n{\n    return [super showsScopeBar];\n}\n\n"
    },
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "text()": {
      "reverse": "- (NSString *) text\n{\n    NSString * re$ult = [self text__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) text__\n{\n    NSString* re$ult = [super text];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UISearchBarDelegate": {
    "bookmarkButtonClicked(crossmobile.ios.uikit.UISearchBar)": {
      "reverse": "- (void) searchBarBookmarkButtonClicked:(UISearchBar *) searchBar\n{\n    [self bookmarkButtonClicked___crossmobile_ios_uikit_UISearchBar:(searchBar ? searchBar : JAVA_NULL)];\n}\n\n",
      "super": "- (void) bookmarkButtonClicked___crossmobile_ios_uikit_UISearchBar:(UISearchBar*) searchBar \n{\n    [super searchBarBookmarkButtonClicked:(searchBar == JAVA_NULL ? nil : searchBar)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISearchBar"
      ]
    },
    "cancelButtonClicked(crossmobile.ios.uikit.UISearchBar)": {
      "reverse": "- (void) searchBarCancelButtonClicked:(UISearchBar *) searchBar\n{\n    [self cancelButtonClicked___crossmobile_ios_uikit_UISearchBar:(searchBar ? searchBar : JAVA_NULL)];\n}\n\n",
      "super": "- (void) cancelButtonClicked___crossmobile_ios_uikit_UISearchBar:(UISearchBar*) searchBar \n{\n    [super searchBarCancelButtonClicked:(searchBar == JAVA_NULL ? nil : searchBar)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISearchBar"
      ]
    },
    "searchButtonClicked(crossmobile.ios.uikit.UISearchBar)": {
      "reverse": "- (void) searchBarSearchButtonClicked:(UISearchBar *) searchBar\n{\n    [self searchButtonClicked___crossmobile_ios_uikit_UISearchBar:(searchBar ? searchBar : JAVA_NULL)];\n}\n\n",
      "super": "- (void) searchButtonClicked___crossmobile_ios_uikit_UISearchBar:(UISearchBar*) searchBar \n{\n    [super searchBarSearchButtonClicked:(searchBar == JAVA_NULL ? nil : searchBar)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISearchBar"
      ]
    },
    "selectedScopeButtonIndexDidChange(crossmobile.ios.uikit.UISearchBar,int)": {
      "reverse": "- (void) searchBar:(UISearchBar *) searchBar selectedScopeButtonIndexDidChange:(NSInteger) selectedScope\n{\n    [self selectedScopeButtonIndexDidChange___crossmobile_ios_uikit_UISearchBar_int:(searchBar ? searchBar : JAVA_NULL) :selectedScope];\n}\n\n",
      "super": "- (void) selectedScopeButtonIndexDidChange___crossmobile_ios_uikit_UISearchBar_int:(UISearchBar*) searchBar :(int) selectedScope \n{\n    [super searchBar:(searchBar == JAVA_NULL ? nil : searchBar) selectedScopeButtonIndexDidChange:selectedScope];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISearchBar"
      ]
    },
    "shouldBeginEditing(crossmobile.ios.uikit.UISearchBar)": {
      "reverse": "- (BOOL) searchBarShouldBeginEditing:(UISearchBar *) searchBar\n{\n    return [self shouldBeginEditing___crossmobile_ios_uikit_UISearchBar:(searchBar ? searchBar : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldBeginEditing___crossmobile_ios_uikit_UISearchBar:(UISearchBar*) searchBar \n{\n    return [super searchBarShouldBeginEditing:(searchBar == JAVA_NULL ? nil : searchBar)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISearchBar"
      ]
    },
    "shouldEndEditing(crossmobile.ios.uikit.UISearchBar)": {
      "reverse": "- (BOOL) searchBarShouldEndEditing:(UISearchBar *) searchBar\n{\n    return [self shouldEndEditing___crossmobile_ios_uikit_UISearchBar:(searchBar ? searchBar : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldEndEditing___crossmobile_ios_uikit_UISearchBar:(UISearchBar*) searchBar \n{\n    return [super searchBarShouldEndEditing:(searchBar == JAVA_NULL ? nil : searchBar)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISearchBar"
      ]
    },
    "textDidBeginEditing(crossmobile.ios.uikit.UISearchBar)": {
      "reverse": "- (void) searchBarTextDidBeginEditing:(UISearchBar *) searchBar\n{\n    [self textDidBeginEditing___crossmobile_ios_uikit_UISearchBar:(searchBar ? searchBar : JAVA_NULL)];\n}\n\n",
      "super": "- (void) textDidBeginEditing___crossmobile_ios_uikit_UISearchBar:(UISearchBar*) searchBar \n{\n    [super searchBarTextDidBeginEditing:(searchBar == JAVA_NULL ? nil : searchBar)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISearchBar"
      ]
    },
    "textDidChange(crossmobile.ios.uikit.UISearchBar,java.lang.String)": {
      "reverse": "- (void) searchBar:(UISearchBar *) searchBar textDidChange:(NSString *) searchText\n{\n    [self textDidChange___crossmobile_ios_uikit_UISearchBar_java_lang_String:(searchBar ? searchBar : JAVA_NULL) :(searchText ? searchText : JAVA_NULL)];\n}\n\n",
      "super": "- (void) textDidChange___crossmobile_ios_uikit_UISearchBar_java_lang_String:(UISearchBar*) searchBar :(NSString*) searchText \n{\n    [super searchBar:(searchBar == JAVA_NULL ? nil : searchBar) textDidChange:(searchText == JAVA_NULL ? nil : searchText)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISearchBar",
        "java_lang_String"
      ]
    },
    "textDidEndEditing(crossmobile.ios.uikit.UISearchBar)": {
      "reverse": "- (void) searchBarTextDidEndEditing:(UISearchBar *) searchBar\n{\n    [self textDidEndEditing___crossmobile_ios_uikit_UISearchBar:(searchBar ? searchBar : JAVA_NULL)];\n}\n\n",
      "super": "- (void) textDidEndEditing___crossmobile_ios_uikit_UISearchBar:(UISearchBar*) searchBar \n{\n    [super searchBarTextDidEndEditing:(searchBar == JAVA_NULL ? nil : searchBar)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISearchBar"
      ]
    }
  },
  "crossmobile.ios.uikit.UISegmentedControl": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "addTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "allTargets()": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHorizontalAlignment()": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "contentVerticalAlignment()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "imageForSegmentAtIndex(int)": {
      "reverse": "- (UIImage *) imageForSegmentAtIndex:(NSUInteger) segment\n{\n    UIImage * re$ult = [self imageForSegmentAtIndex___int:segment];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) imageForSegmentAtIndex___int:(int) segment \n{\n    UIImage* re$ult = [super imageForSegmentAtIndex:segment];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "insertSegmentWithImage(crossmobile.ios.uikit.UIImage,int,boolean)": {
      "reverse": "- (void) insertSegmentWithImage:(UIImage *) image atIndex:(NSUInteger) segment animated:(BOOL) animated\n{\n    [self insertSegmentWithImage___crossmobile_ios_uikit_UIImage_int_boolean:(image ? image : JAVA_NULL) :segment :animated];\n}\n\n",
      "super": "- (void) insertSegmentWithImage___crossmobile_ios_uikit_UIImage_int_boolean:(UIImage*) image :(int) segment :(BOOL) animated \n{\n    [super insertSegmentWithImage:(image == JAVA_NULL ? nil : image) atIndex:segment animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "insertSegmentWithTitle(java.lang.String,int,boolean)": {
      "reverse": "- (void) insertSegmentWithTitle:(NSString *) title atIndex:(NSUInteger) segment animated:(BOOL) animated\n{\n    [self insertSegmentWithTitle___java_lang_String_int_boolean:(title ? title : JAVA_NULL) :segment :animated];\n}\n\n",
      "super": "- (void) insertSegmentWithTitle___java_lang_String_int_boolean:(NSString*) title :(int) segment :(BOOL) animated \n{\n    [super insertSegmentWithTitle:(title == JAVA_NULL ? nil : title) atIndex:segment animated:animated];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isEnabled()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isHighlighted()": null,
    "isMomentary()": {
      "reverse": "- (BOOL) isMomentary\n{\n    return [self isMomentary__];\n}\n\n",
      "super": "- (BOOL) isMomentary__\n{\n    return [super isMomentary];\n}\n\n"
    },
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isSelected()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "numberOfSegments()": {
      "reverse": "- (NSUInteger) numberOfSegments\n{\n    return [self numberOfSegments__];\n}\n\n",
      "super": "- (int) numberOfSegments__\n{\n    return [super numberOfSegments];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeAllSegments()": {
      "reverse": "- (void) removeAllSegments\n{\n    [self removeAllSegments__];\n}\n\n",
      "super": "- (void) removeAllSegments__\n{\n    [super removeAllSegments];\n}\n\n"
    },
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeSegmentAtIndex(int,boolean)": {
      "reverse": "- (void) removeSegmentAtIndex:(NSUInteger) segment animated:(BOOL) animated\n{\n    [self removeSegmentAtIndex___int_boolean:segment :animated];\n}\n\n",
      "super": "- (void) removeSegmentAtIndex___int_boolean:(int) segment :(BOOL) animated \n{\n    [super removeSegmentAtIndex:segment animated:animated];\n}\n\n"
    },
    "removeTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "segmentedControlStyle()": {
      "reverse": "- (UISegmentedControlStyle) segmentedControlStyle\n{\n    return [self segmentedControlStyle__];\n}\n\n",
      "super": "- (int) segmentedControlStyle__\n{\n    return [super segmentedControlStyle];\n}\n\n"
    },
    "selectedSegmentIndex()": {
      "reverse": "- (NSInteger) selectedSegmentIndex\n{\n    return [self selectedSegmentIndex__];\n}\n\n",
      "super": "- (int) selectedSegmentIndex__\n{\n    return [super selectedSegmentIndex];\n}\n\n"
    },
    "sendActionsForControlEvents(int)": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHorizontalAlignment(int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setContentVerticalAlignment(int)": null,
    "setEnabled(boolean)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHighlighted(boolean)": null,
    "setImage(crossmobile.ios.uikit.UIImage,int)": {
      "reverse": "- (void) setImage:(UIImage *) image forSegmentAtIndex:(NSUInteger) segment\n{\n    [self setImage___crossmobile_ios_uikit_UIImage_int:(image ? image : JAVA_NULL) :segment];\n}\n\n",
      "super": "- (void) setImage___crossmobile_ios_uikit_UIImage_int:(UIImage*) image :(int) segment \n{\n    [super setImage:(image == JAVA_NULL ? nil : image) forSegmentAtIndex:segment];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMomentary(boolean)": {
      "reverse": "- (void) setMomentary:(BOOL) momentary\n{\n    [self setMomentary___boolean:momentary];\n}\n\n",
      "super": "- (void) setMomentary___boolean:(BOOL) momentary \n{\n    [super setMomentary:momentary];\n}\n\n"
    },
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setSegmentedControlStyle(int)": {
      "reverse": "- (void) setSegmentedControlStyle:(UISegmentedControlStyle) segmentedControlStyle\n{\n    [self setSegmentedControlStyle___int:segmentedControlStyle];\n}\n\n",
      "super": "- (void) setSegmentedControlStyle___int:(int) segmentedControlStyle \n{\n    [super setSegmentedControlStyle:segmentedControlStyle];\n}\n\n"
    },
    "setSelected(boolean)": null,
    "setSelectedSegmentIndex(int)": {
      "reverse": "- (void) setSelectedSegmentIndex:(NSInteger) selectedSegmentIndex\n{\n    [self setSelectedSegmentIndex___int:selectedSegmentIndex];\n}\n\n",
      "super": "- (void) setSelectedSegmentIndex___int:(int) selectedSegmentIndex \n{\n    [super setSelectedSegmentIndex:selectedSegmentIndex];\n}\n\n"
    },
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTitle(java.lang.String,int)": {
      "reverse": "- (void) setTitle:(NSString *) title forSegmentAtIndex:(NSUInteger) segment\n{\n    [self setTitle___java_lang_String_int:(title ? title : JAVA_NULL) :segment];\n}\n\n",
      "super": "- (void) setTitle___java_lang_String_int:(NSString*) title :(int) segment \n{\n    [super setTitle:(title == JAVA_NULL ? nil : title) forSegmentAtIndex:segment];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "state()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "titleForSegmentAtIndex(int)": {
      "reverse": "- (NSString *) titleForSegmentAtIndex:(NSUInteger) segment\n{\n    NSString * re$ult = [self titleForSegmentAtIndex___int:segment];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) titleForSegmentAtIndex___int:(int) segment \n{\n    NSString* re$ult = [super titleForSegmentAtIndex:segment];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UISlider": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "addTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "allTargets()": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHorizontalAlignment()": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "contentVerticalAlignment()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "currentMaximumTrackImage()": {
      "reverse": "- (UIImage *) currentMaximumTrackImage\n{\n    UIImage * re$ult = [self currentMaximumTrackImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) currentMaximumTrackImage__\n{\n    UIImage* re$ult = [super currentMaximumTrackImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "currentMinimumTrackImage()": {
      "reverse": "- (UIImage *) currentMinimumTrackImage\n{\n    UIImage * re$ult = [self currentMinimumTrackImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) currentMinimumTrackImage__\n{\n    UIImage* re$ult = [super currentMinimumTrackImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "currentThumbImage()": {
      "reverse": "- (UIImage *) currentThumbImage\n{\n    UIImage * re$ult = [self currentThumbImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) currentThumbImage__\n{\n    UIImage* re$ult = [super currentThumbImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isContinuous()": {
      "reverse": "- (BOOL) isContinuous\n{\n    return [self isContinuous__];\n}\n\n",
      "super": "- (BOOL) isContinuous__\n{\n    return [super isContinuous];\n}\n\n"
    },
    "isEnabled()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isHighlighted()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isSelected()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "maximumTrackImageForState(int)": {
      "reverse": "- (UIImage *) maximumTrackImageForState:(UIControlState) state\n{\n    UIImage * re$ult = [self maximumTrackImageForState___int:state];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) maximumTrackImageForState___int:(int) state \n{\n    UIImage* re$ult = [super maximumTrackImageForState:state];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "maximumTrackTintColor()": {
      "reverse": "- (UIColor *) maximumTrackTintColor\n{\n    UIColor * re$ult = [self maximumTrackTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) maximumTrackTintColor__\n{\n    UIColor* re$ult = [super maximumTrackTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "maximumValue()": {
      "reverse": "- (float) maximumValue\n{\n    return [self maximumValue__];\n}\n\n",
      "super": "- (float) maximumValue__\n{\n    return [super maximumValue];\n}\n\n"
    },
    "maximumValueImage()": {
      "reverse": "- (UIImage *) maximumValueImage\n{\n    UIImage * re$ult = [self maximumValueImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) maximumValueImage__\n{\n    UIImage* re$ult = [super maximumValueImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "minimumTrackImageForState(int)": {
      "reverse": "- (UIImage *) minimumTrackImageForState:(UIControlState) state\n{\n    UIImage * re$ult = [self minimumTrackImageForState___int:state];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) minimumTrackImageForState___int:(int) state \n{\n    UIImage* re$ult = [super minimumTrackImageForState:state];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "minimumTrackTintColor()": {
      "reverse": "- (UIColor *) minimumTrackTintColor\n{\n    UIColor * re$ult = [self minimumTrackTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) minimumTrackTintColor__\n{\n    UIColor* re$ult = [super minimumTrackTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "minimumValue()": {
      "reverse": "- (float) minimumValue\n{\n    return [self minimumValue__];\n}\n\n",
      "super": "- (float) minimumValue__\n{\n    return [super minimumValue];\n}\n\n"
    },
    "minimumValueImage()": {
      "reverse": "- (UIImage *) minimumValueImage\n{\n    UIImage * re$ult = [self minimumValueImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) minimumValueImage__\n{\n    UIImage* re$ult = [super minimumValueImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendActionsForControlEvents(int)": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHorizontalAlignment(int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setContentVerticalAlignment(int)": null,
    "setContinuous(boolean)": {
      "reverse": "- (void) setContinuous:(BOOL) continuous\n{\n    [self setContinuous___boolean:continuous];\n}\n\n",
      "super": "- (void) setContinuous___boolean:(BOOL) continuous \n{\n    [super setContinuous:continuous];\n}\n\n"
    },
    "setEnabled(boolean)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHighlighted(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMaximumTrackImage(crossmobile.ios.uikit.UIImage,int)": {
      "reverse": "- (void) setMaximumTrackImage:(UIImage *) image forState:(UIControlState) state\n{\n    [self setMaximumTrackImage___crossmobile_ios_uikit_UIImage_int:(image ? image : JAVA_NULL) :state];\n}\n\n",
      "super": "- (void) setMaximumTrackImage___crossmobile_ios_uikit_UIImage_int:(UIImage*) image :(int) state \n{\n    [super setMaximumTrackImage:(image == JAVA_NULL ? nil : image) forState:state];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setMaximumTrackTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setMaximumTrackTintColor:(UIColor *) maximumTrackTintColor\n{\n    [self setMaximumTrackTintColor___crossmobile_ios_uikit_UIColor:(maximumTrackTintColor ? maximumTrackTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setMaximumTrackTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) maximumTrackTintColor \n{\n    [super setMaximumTrackTintColor:(maximumTrackTintColor == JAVA_NULL ? nil : maximumTrackTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setMaximumValue(float)": {
      "reverse": "- (void) setMaximumValue:(float) maximumValue\n{\n    [self setMaximumValue___float:maximumValue];\n}\n\n",
      "super": "- (void) setMaximumValue___float:(float) maximumValue \n{\n    [super setMaximumValue:maximumValue];\n}\n\n"
    },
    "setMaximumValueImage(crossmobile.ios.uikit.UIImage)": {
      "reverse": "- (void) setMaximumValueImage:(UIImage *) maximumValueImage\n{\n    [self setMaximumValueImage___crossmobile_ios_uikit_UIImage:(maximumValueImage ? maximumValueImage : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setMaximumValueImage___crossmobile_ios_uikit_UIImage:(UIImage*) maximumValueImage \n{\n    [super setMaximumValueImage:(maximumValueImage == JAVA_NULL ? nil : maximumValueImage)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setMinimumTrackImage(crossmobile.ios.uikit.UIImage,int)": {
      "reverse": "- (void) setMinimumTrackImage:(UIImage *) image forState:(UIControlState) state\n{\n    [self setMinimumTrackImage___crossmobile_ios_uikit_UIImage_int:(image ? image : JAVA_NULL) :state];\n}\n\n",
      "super": "- (void) setMinimumTrackImage___crossmobile_ios_uikit_UIImage_int:(UIImage*) image :(int) state \n{\n    [super setMinimumTrackImage:(image == JAVA_NULL ? nil : image) forState:state];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setMinimumTrackTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setMinimumTrackTintColor:(UIColor *) minimumTrackTintColor\n{\n    [self setMinimumTrackTintColor___crossmobile_ios_uikit_UIColor:(minimumTrackTintColor ? minimumTrackTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setMinimumTrackTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) minimumTrackTintColor \n{\n    [super setMinimumTrackTintColor:(minimumTrackTintColor == JAVA_NULL ? nil : minimumTrackTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setMinimumValue(float)": {
      "reverse": "- (void) setMinimumValue:(float) minimumValue\n{\n    [self setMinimumValue___float:minimumValue];\n}\n\n",
      "super": "- (void) setMinimumValue___float:(float) minimumValue \n{\n    [super setMinimumValue:minimumValue];\n}\n\n"
    },
    "setMinimumValueImage(crossmobile.ios.uikit.UIImage)": {
      "reverse": "- (void) setMinimumValueImage:(UIImage *) minimumValueImage\n{\n    [self setMinimumValueImage___crossmobile_ios_uikit_UIImage:(minimumValueImage ? minimumValueImage : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setMinimumValueImage___crossmobile_ios_uikit_UIImage:(UIImage*) minimumValueImage \n{\n    [super setMinimumValueImage:(minimumValueImage == JAVA_NULL ? nil : minimumValueImage)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setSelected(boolean)": null,
    "setTag(int)": null,
    "setThumbImage(crossmobile.ios.uikit.UIImage,int)": {
      "reverse": "- (void) setThumbImage:(UIImage *) image forState:(UIControlState) state\n{\n    [self setThumbImage___crossmobile_ios_uikit_UIImage_int:(image ? image : JAVA_NULL) :state];\n}\n\n",
      "super": "- (void) setThumbImage___crossmobile_ios_uikit_UIImage_int:(UIImage*) image :(int) state \n{\n    [super setThumbImage:(image == JAVA_NULL ? nil : image) forState:state];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setThumbTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setThumbTintColor:(UIColor *) thumbTintColor\n{\n    [self setThumbTintColor___crossmobile_ios_uikit_UIColor:(thumbTintColor ? thumbTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setThumbTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) thumbTintColor \n{\n    [super setThumbTintColor:(thumbTintColor == JAVA_NULL ? nil : thumbTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValue(float)": {
      "reverse": "- (void) setValue:(float) value\n{\n    [self setValue___float:value];\n}\n\n",
      "super": "- (void) setValue___float:(float) value \n{\n    [super setValue:value];\n}\n\n"
    },
    "setValue(float,boolean)": {
      "reverse": "- (void) setValue:(float) value animated:(BOOL) animated\n{\n    [self setValue___float_boolean:value :animated];\n}\n\n",
      "super": "- (void) setValue___float_boolean:(float) value :(BOOL) animated \n{\n    [super setValue:value animated:animated];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "state()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "thumbImageForState(int)": {
      "reverse": "- (UIImage *) thumbImageForState:(UIControlState) state\n{\n    UIImage * re$ult = [self thumbImageForState___int:state];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) thumbImageForState___int:(int) state \n{\n    UIImage* re$ult = [super thumbImageForState:state];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "thumbTintColor()": {
      "reverse": "- (UIColor *) thumbTintColor\n{\n    UIColor * re$ult = [self thumbTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) thumbTintColor__\n{\n    UIColor* re$ult = [super thumbTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "value()": {
      "reverse": "- (float) value\n{\n    return [self value__];\n}\n\n",
      "super": "- (float) value__\n{\n    return [super value];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UISplitViewController": {
    "addChildViewController(crossmobile.ios.uikit.UIViewController)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "additionalSafeAreaInsets()": null,
    "allowedChildViewControllersForUnwindingFromSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": null,
    "automaticallyAdjustsScrollViewInsets()": null,
    "becomeFirstResponder()": null,
    "beginAppearanceTransition(boolean,boolean)": null,
    "bottomLayoutGuide()": null,
    "childViewControllerContainingSegueSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": null,
    "childViewControllerForStatusBarHidden()": null,
    "childViewControllerForStatusBarStyle()": null,
    "childViewControllers()": null,
    "contentSizeForViewInPopover()": null,
    "definesPresentationContext()": null,
    "delegate()": {
      "reverse": "- (id<UISplitViewControllerDelegate>) delegate\n{\n    id<UISplitViewControllerDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UISplitViewControllerDelegate>) delegate__\n{\n    id<UISplitViewControllerDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewControllerDelegate"
      ]
    },
    "didReceiveMemoryWarning()": null,
    "didRotateFromInterfaceOrientation(int)": null,
    "disablesAutomaticKeyboardDismissal()": null,
    "dismissModalViewControllerAnimated(boolean)": null,
    "displayMode()": {
      "reverse": "- (UISplitViewControllerDisplayMode) displayMode\n{\n    return [self displayMode__];\n}\n\n",
      "super": "- (int) displayMode__\n{\n    return [super displayMode];\n}\n\n"
    },
    "displayModeButtonItem()": {
      "reverse": "- (UIBarButtonItem *) displayModeButtonItem\n{\n    UIBarButtonItem * re$ult = [self displayModeButtonItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIBarButtonItem*) displayModeButtonItem__\n{\n    UIBarButtonItem* re$ult = [super displayModeButtonItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem"
      ]
    },
    "edgesForExtendedLayout()": null,
    "editButtonItem()": null,
    "endAppearanceTransition()": null,
    "extensionContext()": null,
    "hidesBottomBarWhenPushed()": null,
    "interfaceOrientation()": null,
    "isCollapsed()": {
      "reverse": "- (BOOL) isCollapsed\n{\n    return [self isCollapsed__];\n}\n\n",
      "super": "- (BOOL) isCollapsed__\n{\n    return [super isCollapsed];\n}\n\n"
    },
    "isEditing()": null,
    "isFirstResponder()": null,
    "isModalInPopover()": null,
    "isViewLoaded()": null,
    "loadView()": null,
    "loadViewIfNeeded()": null,
    "maximumPrimaryColumnWidth()": {
      "reverse": "- (CGFloat) maximumPrimaryColumnWidth\n{\n    return [self maximumPrimaryColumnWidth__];\n}\n\n",
      "super": "- (double) maximumPrimaryColumnWidth__\n{\n    return [super maximumPrimaryColumnWidth];\n}\n\n"
    },
    "minimumPrimaryColumnWidth()": {
      "reverse": "- (CGFloat) minimumPrimaryColumnWidth\n{\n    return [self minimumPrimaryColumnWidth__];\n}\n\n",
      "super": "- (double) minimumPrimaryColumnWidth__\n{\n    return [super minimumPrimaryColumnWidth];\n}\n\n"
    },
    "modalPresentationStyle()": null,
    "modalTransitionStyle()": null,
    "navigationController()": null,
    "navigationItem()": null,
    "nextResponder()": null,
    "nibName()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "parentViewController()": null,
    "performSegueWithIdentifier(java.lang.String,java.lang.Object)": null,
    "preferredDisplayMode()": {
      "reverse": "- (UISplitViewControllerDisplayMode) preferredDisplayMode\n{\n    return [self preferredDisplayMode__];\n}\n\n",
      "super": "- (int) preferredDisplayMode__\n{\n    return [super preferredDisplayMode];\n}\n\n"
    },
    "preferredInterfaceOrientationForPresentation()": null,
    "preferredPrimaryColumnWidthFraction()": {
      "reverse": "- (CGFloat) preferredPrimaryColumnWidthFraction\n{\n    return [self preferredPrimaryColumnWidthFraction__];\n}\n\n",
      "super": "- (double) preferredPrimaryColumnWidthFraction__\n{\n    return [super preferredPrimaryColumnWidthFraction];\n}\n\n"
    },
    "preferredStatusBarStyle()": null,
    "prefersStatusBarHidden()": null,
    "prepareForSegue(crossmobile.ios.uikit.UIStoryboardSegue,java.lang.Object)": null,
    "presentModalViewController(crossmobile.ios.uikit.UIViewController,boolean)": null,
    "presentedViewController()": null,
    "presentingViewController()": null,
    "presentsWithGesture()": {
      "reverse": "- (BOOL) presentsWithGesture\n{\n    return [self presentsWithGesture__];\n}\n\n",
      "super": "- (BOOL) presentsWithGesture__\n{\n    return [super presentsWithGesture];\n}\n\n"
    },
    "primaryColumnWidth()": {
      "reverse": "- (CGFloat) primaryColumnWidth\n{\n    return [self primaryColumnWidth__];\n}\n\n",
      "super": "- (double) primaryColumnWidth__\n{\n    return [super primaryColumnWidth];\n}\n\n"
    },
    "providesPresentationContextTransitionStyle()": null,
    "removeFromParentViewController()": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rotatingFooterView()": null,
    "rotatingHeaderView()": null,
    "setAdditionalSafeAreaInsets(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setAutomaticallyAdjustsScrollViewInsets(boolean)": null,
    "setContentSizeForViewInPopover(crossmobile.ios.coregraphics.CGSize)": null,
    "setDefinesPresentationContext(boolean)": null,
    "setDelegate(crossmobile.ios.uikit.UISplitViewControllerDelegate)": {
      "reverse": "- (void) setDelegate:(id<UISplitViewControllerDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UISplitViewControllerDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UISplitViewControllerDelegate:(id<UISplitViewControllerDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewControllerDelegate"
      ]
    },
    "setEdgesForExtendedLayout(int)": null,
    "setEditing(boolean)": null,
    "setEditing(boolean,boolean)": null,
    "setHidesBottomBarWhenPushed(boolean)": null,
    "setMaximumPrimaryColumnWidth(double)": {
      "reverse": "- (void) setMaximumPrimaryColumnWidth:(CGFloat) maximumPrimaryColumnWidth\n{\n    [self setMaximumPrimaryColumnWidth___double:maximumPrimaryColumnWidth];\n}\n\n",
      "super": "- (void) setMaximumPrimaryColumnWidth___double:(double) maximumPrimaryColumnWidth \n{\n    [super setMaximumPrimaryColumnWidth:maximumPrimaryColumnWidth];\n}\n\n"
    },
    "setMinimumPrimaryColumnWidth(double)": {
      "reverse": "- (void) setMinimumPrimaryColumnWidth:(CGFloat) minimumPrimaryColumnWidth\n{\n    [self setMinimumPrimaryColumnWidth___double:minimumPrimaryColumnWidth];\n}\n\n",
      "super": "- (void) setMinimumPrimaryColumnWidth___double:(double) minimumPrimaryColumnWidth \n{\n    [super setMinimumPrimaryColumnWidth:minimumPrimaryColumnWidth];\n}\n\n"
    },
    "setModalInPopover(boolean)": null,
    "setModalPresentationStyle(int)": null,
    "setModalTransitionStyle(int)": null,
    "setNeedsStatusBarAppearanceUpdate()": null,
    "setPreferredDisplayMode(int)": {
      "reverse": "- (void) setPreferredDisplayMode:(UISplitViewControllerDisplayMode) preferredDisplayMode\n{\n    [self setPreferredDisplayMode___int:preferredDisplayMode];\n}\n\n",
      "super": "- (void) setPreferredDisplayMode___int:(int) preferredDisplayMode \n{\n    [super setPreferredDisplayMode:preferredDisplayMode];\n}\n\n"
    },
    "setPreferredPrimaryColumnWidthFraction(double)": {
      "reverse": "- (void) setPreferredPrimaryColumnWidthFraction:(CGFloat) preferredPrimaryColumnWidthFraction\n{\n    [self setPreferredPrimaryColumnWidthFraction___double:preferredPrimaryColumnWidthFraction];\n}\n\n",
      "super": "- (void) setPreferredPrimaryColumnWidthFraction___double:(double) preferredPrimaryColumnWidthFraction \n{\n    [super setPreferredPrimaryColumnWidthFraction:preferredPrimaryColumnWidthFraction];\n}\n\n"
    },
    "setPresentsWithGesture(boolean)": {
      "reverse": "- (void) setPresentsWithGesture:(BOOL) presentsWithGesture\n{\n    [self setPresentsWithGesture___boolean:presentsWithGesture];\n}\n\n",
      "super": "- (void) setPresentsWithGesture___boolean:(BOOL) presentsWithGesture \n{\n    [super setPresentsWithGesture:presentsWithGesture];\n}\n\n"
    },
    "setProvidesPresentationContextTransitionStyle(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setTabBarItem(crossmobile.ios.uikit.UITabBarItem)": null,
    "setTitle(java.lang.String)": null,
    "setToolbarItems(java.util.List)": null,
    "setToolbarItems(java.util.List,boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "setView(crossmobile.ios.uikit.UIView)": null,
    "setViewControllers(java.util.List)": {
      "reverse": "- (void) setViewControllers:(NSArray<__kindof UIViewController *> *) viewControllers\n{\n    [self setViewControllers___java_util_List:(viewControllers ? viewControllers : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setViewControllers___java_util_List:(NSArray*) viewControllers \n{\n    [super setViewControllers:(viewControllers == JAVA_NULL ? nil : viewControllers)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setWantsFullScreenLayout(boolean)": null,
    "shouldAutomaticallyForwardAppearanceMethods()": null,
    "shouldAutorotate()": null,
    "shouldAutorotateToInterfaceOrientation(int)": null,
    "shouldPerformSegueWithIdentifier(java.lang.String,java.lang.Object)": null,
    "showDetailViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": null,
    "showViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": null,
    "splitViewController()": null,
    "storyboard()": null,
    "supportedInterfaceOrientations()": null,
    "tabBarController()": null,
    "tabBarItem()": null,
    "title()": null,
    "toolbarItems()": null,
    "topLayoutGuide()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "view()": null,
    "viewControllers()": {
      "reverse": "- (NSArray<__kindof UIViewController *> *) viewControllers\n{\n    NSArray<__kindof UIViewController *> * re$ult = [self viewControllers__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) viewControllers__\n{\n    NSArray* re$ult = [super viewControllers];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "viewDidAppear(boolean)": null,
    "viewDidDisappear(boolean)": null,
    "viewDidLayoutSubviews()": null,
    "viewDidLoad()": null,
    "viewDidUnload()": null,
    "viewIfLoaded()": null,
    "viewSafeAreaInsetsDidChange()": null,
    "viewWillAppear(boolean)": null,
    "viewWillDisappear(boolean)": null,
    "viewWillLayoutSubviews()": null,
    "wantsFullScreenLayout()": null,
    "willAnimateRotationToInterfaceOrientation(int,double)": null,
    "willRotateToInterfaceOrientation(int,double)": null
  },
  "crossmobile.ios.uikit.UISplitViewControllerDelegate": {
    "collapseSecondaryViewController(crossmobile.ios.uikit.UISplitViewController,crossmobile.ios.uikit.UIViewController,crossmobile.ios.uikit.UIViewController)": {
      "reverse": "- (BOOL) splitViewController:(UISplitViewController *) splitViewController collapseSecondaryViewController:(UIViewController *) secondaryViewController ontoPrimaryViewController:(UIViewController *) primaryViewController\n{\n    return [self collapseSecondaryViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController_crossmobile_ios_uikit_UIViewController:(splitViewController ? splitViewController : JAVA_NULL) :(secondaryViewController ? secondaryViewController : JAVA_NULL) :(primaryViewController ? primaryViewController : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) collapseSecondaryViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController_crossmobile_ios_uikit_UIViewController:(UISplitViewController*) splitViewController :(UIViewController*) secondaryViewController :(UIViewController*) primaryViewController \n{\n    return [super splitViewController:(splitViewController == JAVA_NULL ? nil : splitViewController) collapseSecondaryViewController:(secondaryViewController == JAVA_NULL ? nil : secondaryViewController) ontoPrimaryViewController:(primaryViewController == JAVA_NULL ? nil : primaryViewController)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewController",
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "popoverController(crossmobile.ios.uikit.UISplitViewController,crossmobile.ios.uikit.UIPopoverController,crossmobile.ios.uikit.UIViewController)": {
      "reverse": "- (void) splitViewController:(UISplitViewController *) svc popoverController:(UIPopoverController *) pc willPresentViewController:(UIViewController *) aViewController\n{\n    [self popoverController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIPopoverController_crossmobile_ios_uikit_UIViewController:(svc ? svc : JAVA_NULL) :(pc ? pc : JAVA_NULL) :(aViewController ? aViewController : JAVA_NULL)];\n}\n\n",
      "super": "- (void) popoverController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIPopoverController_crossmobile_ios_uikit_UIViewController:(UISplitViewController*) svc :(UIPopoverController*) pc :(UIViewController*) aViewController \n{\n    [super splitViewController:(svc == JAVA_NULL ? nil : svc) popoverController:(pc == JAVA_NULL ? nil : pc) willPresentViewController:(aViewController == JAVA_NULL ? nil : aViewController)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIPopoverController",
        "crossmobile_ios_uikit_UISplitViewController",
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "preferredInterfaceOrientationForPresentation(crossmobile.ios.uikit.UISplitViewController)": {
      "reverse": "- (UIInterfaceOrientation) splitViewControllerPreferredInterfaceOrientationForPresentation:(UISplitViewController *) splitViewController\n{\n    return [self preferredInterfaceOrientationForPresentation___crossmobile_ios_uikit_UISplitViewController:(splitViewController ? splitViewController : JAVA_NULL)];\n}\n\n",
      "super": "- (int) preferredInterfaceOrientationForPresentation___crossmobile_ios_uikit_UISplitViewController:(UISplitViewController*) splitViewController \n{\n    return [super splitViewControllerPreferredInterfaceOrientationForPresentation:(splitViewController == JAVA_NULL ? nil : splitViewController)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewController"
      ]
    },
    "primaryViewControllerForCollapsingSplitViewController(crossmobile.ios.uikit.UISplitViewController)": {
      "reverse": "- (UIViewController *) primaryViewControllerForCollapsingSplitViewController:(UISplitViewController *) splitViewController\n{\n    UIViewController * re$ult = [self primaryViewControllerForCollapsingSplitViewController___crossmobile_ios_uikit_UISplitViewController:(splitViewController ? splitViewController : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) primaryViewControllerForCollapsingSplitViewController___crossmobile_ios_uikit_UISplitViewController:(UISplitViewController*) splitViewController \n{\n    UIViewController* re$ult = [super primaryViewControllerForCollapsingSplitViewController:(splitViewController == JAVA_NULL ? nil : splitViewController)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewController",
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "primaryViewControllerForExpandingSplitViewController(crossmobile.ios.uikit.UISplitViewController)": {
      "reverse": "- (UIViewController *) primaryViewControllerForExpandingSplitViewController:(UISplitViewController *) splitViewController\n{\n    UIViewController * re$ult = [self primaryViewControllerForExpandingSplitViewController___crossmobile_ios_uikit_UISplitViewController:(splitViewController ? splitViewController : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) primaryViewControllerForExpandingSplitViewController___crossmobile_ios_uikit_UISplitViewController:(UISplitViewController*) splitViewController \n{\n    UIViewController* re$ult = [super primaryViewControllerForExpandingSplitViewController:(splitViewController == JAVA_NULL ? nil : splitViewController)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewController",
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "separateSecondaryViewControllerFromPrimaryViewController(crossmobile.ios.uikit.UISplitViewController,crossmobile.ios.uikit.UIViewController)": {
      "reverse": "- (UIViewController *) splitViewController:(UISplitViewController *) splitViewController separateSecondaryViewControllerFromPrimaryViewController:(UIViewController *) primaryViewController\n{\n    UIViewController * re$ult = [self separateSecondaryViewControllerFromPrimaryViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController:(splitViewController ? splitViewController : JAVA_NULL) :(primaryViewController ? primaryViewController : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) separateSecondaryViewControllerFromPrimaryViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController:(UISplitViewController*) splitViewController :(UIViewController*) primaryViewController \n{\n    UIViewController* re$ult = [super splitViewController:(splitViewController == JAVA_NULL ? nil : splitViewController) separateSecondaryViewControllerFromPrimaryViewController:(primaryViewController == JAVA_NULL ? nil : primaryViewController)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewController",
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "shouldHideViewController(crossmobile.ios.uikit.UISplitViewController,crossmobile.ios.uikit.UIViewController,int)": {
      "reverse": "- (BOOL) splitViewController:(UISplitViewController *) svc shouldHideViewController:(UIViewController *) vc inOrientation:(UIInterfaceOrientation) orientation\n{\n    return [self shouldHideViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController_int:(svc ? svc : JAVA_NULL) :(vc ? vc : JAVA_NULL) :orientation];\n}\n\n",
      "super": "- (BOOL) shouldHideViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController_int:(UISplitViewController*) svc :(UIViewController*) vc :(int) orientation \n{\n    return [super splitViewController:(svc == JAVA_NULL ? nil : svc) shouldHideViewController:(vc == JAVA_NULL ? nil : vc) inOrientation:orientation];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewController",
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "showDetailViewController(crossmobile.ios.uikit.UISplitViewController,crossmobile.ios.uikit.UIViewController,java.lang.Object)": {
      "reverse": "- (BOOL) splitViewController:(UISplitViewController *) splitViewController showDetailViewController:(UIViewController *) vc sender:(id) sender\n{\n    return [self showDetailViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController_java_lang_Object:(splitViewController ? splitViewController : JAVA_NULL) :(vc ? vc : JAVA_NULL) :(sender ? sender : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) showDetailViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController_java_lang_Object:(UISplitViewController*) splitViewController :(UIViewController*) vc :(id) sender \n{\n    return [super splitViewController:(splitViewController == JAVA_NULL ? nil : splitViewController) showDetailViewController:(vc == JAVA_NULL ? nil : vc) sender:(sender == JAVA_NULL ? nil : sender)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewController",
        "crossmobile_ios_uikit_UIViewController",
        "java_lang_Object"
      ]
    },
    "showViewController(crossmobile.ios.uikit.UISplitViewController,crossmobile.ios.uikit.UIViewController,java.lang.Object)": {
      "reverse": "- (BOOL) splitViewController:(UISplitViewController *) splitViewController showViewController:(UIViewController *) vc sender:(id) sender\n{\n    return [self showViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController_java_lang_Object:(splitViewController ? splitViewController : JAVA_NULL) :(vc ? vc : JAVA_NULL) :(sender ? sender : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) showViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController_java_lang_Object:(UISplitViewController*) splitViewController :(UIViewController*) vc :(id) sender \n{\n    return [super splitViewController:(splitViewController == JAVA_NULL ? nil : splitViewController) showViewController:(vc == JAVA_NULL ? nil : vc) sender:(sender == JAVA_NULL ? nil : sender)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewController",
        "crossmobile_ios_uikit_UIViewController",
        "java_lang_Object"
      ]
    },
    "supportedInterfaceOrientations(crossmobile.ios.uikit.UISplitViewController)": {
      "reverse": "- (UIInterfaceOrientationMask) splitViewControllerSupportedInterfaceOrientations:(UISplitViewController *) splitViewController\n{\n    return [self supportedInterfaceOrientations___crossmobile_ios_uikit_UISplitViewController:(splitViewController ? splitViewController : JAVA_NULL)];\n}\n\n",
      "super": "- (int) supportedInterfaceOrientations___crossmobile_ios_uikit_UISplitViewController:(UISplitViewController*) splitViewController \n{\n    return [super splitViewControllerSupportedInterfaceOrientations:(splitViewController == JAVA_NULL ? nil : splitViewController)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewController"
      ]
    },
    "targetDisplayModeForActionInSplitViewController(crossmobile.ios.uikit.UISplitViewController)": {
      "reverse": "- (UISplitViewControllerDisplayMode) targetDisplayModeForActionInSplitViewController:(UISplitViewController *) svc\n{\n    return [self targetDisplayModeForActionInSplitViewController___crossmobile_ios_uikit_UISplitViewController:(svc ? svc : JAVA_NULL)];\n}\n\n",
      "super": "- (int) targetDisplayModeForActionInSplitViewController___crossmobile_ios_uikit_UISplitViewController:(UISplitViewController*) svc \n{\n    return [super targetDisplayModeForActionInSplitViewController:(svc == JAVA_NULL ? nil : svc)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewController"
      ]
    },
    "willChangeToDisplayMode(crossmobile.ios.uikit.UISplitViewController,int)": {
      "reverse": "- (void) splitViewController:(UISplitViewController *) svc willChangeToDisplayMode:(UISplitViewControllerDisplayMode) displayMode\n{\n    [self willChangeToDisplayMode___crossmobile_ios_uikit_UISplitViewController_int:(svc ? svc : JAVA_NULL) :displayMode];\n}\n\n",
      "super": "- (void) willChangeToDisplayMode___crossmobile_ios_uikit_UISplitViewController_int:(UISplitViewController*) svc :(int) displayMode \n{\n    [super splitViewController:(svc == JAVA_NULL ? nil : svc) willChangeToDisplayMode:displayMode];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewController"
      ]
    },
    "willHideViewController(crossmobile.ios.uikit.UISplitViewController,crossmobile.ios.uikit.UIViewController,crossmobile.ios.uikit.UIBarButtonItem,crossmobile.ios.uikit.UIPopoverController)": {
      "reverse": "- (void) splitViewController:(UISplitViewController *) svc willHideViewController:(UIViewController *) aViewController withBarButtonItem:(UIBarButtonItem *) barButtonItem forPopoverController:(UIPopoverController *) pc\n{\n    [self willHideViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController_crossmobile_ios_uikit_UIBarButtonItem_crossmobile_ios_uikit_UIPopoverController:(svc ? svc : JAVA_NULL) :(aViewController ? aViewController : JAVA_NULL) :(barButtonItem ? barButtonItem : JAVA_NULL) :(pc ? pc : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willHideViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController_crossmobile_ios_uikit_UIBarButtonItem_crossmobile_ios_uikit_UIPopoverController:(UISplitViewController*) svc :(UIViewController*) aViewController :(UIBarButtonItem*) barButtonItem :(UIPopoverController*) pc \n{\n    [super splitViewController:(svc == JAVA_NULL ? nil : svc) willHideViewController:(aViewController == JAVA_NULL ? nil : aViewController) withBarButtonItem:(barButtonItem == JAVA_NULL ? nil : barButtonItem) forPopoverController:(pc == JAVA_NULL ? nil : pc)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem",
        "crossmobile_ios_uikit_UIPopoverController",
        "crossmobile_ios_uikit_UISplitViewController",
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "willShowViewController(crossmobile.ios.uikit.UISplitViewController,crossmobile.ios.uikit.UIViewController,crossmobile.ios.uikit.UIBarButtonItem)": {
      "reverse": "- (void) splitViewController:(UISplitViewController *) svc willShowViewController:(UIViewController *) aViewController invalidatingBarButtonItem:(UIBarButtonItem *) barButtonItem\n{\n    [self willShowViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController_crossmobile_ios_uikit_UIBarButtonItem:(svc ? svc : JAVA_NULL) :(aViewController ? aViewController : JAVA_NULL) :(barButtonItem ? barButtonItem : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willShowViewController___crossmobile_ios_uikit_UISplitViewController_crossmobile_ios_uikit_UIViewController_crossmobile_ios_uikit_UIBarButtonItem:(UISplitViewController*) svc :(UIViewController*) aViewController :(UIBarButtonItem*) barButtonItem \n{\n    [super splitViewController:(svc == JAVA_NULL ? nil : svc) willShowViewController:(aViewController == JAVA_NULL ? nil : aViewController) invalidatingBarButtonItem:(barButtonItem == JAVA_NULL ? nil : barButtonItem)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem",
        "crossmobile_ios_uikit_UISplitViewController",
        "crossmobile_ios_uikit_UIViewController"
      ]
    }
  },
  "crossmobile.ios.uikit.UIStackView": {
    "accessibilityIdentifier()": null,
    "addArrangedSubview(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) addArrangedSubview:(UIView *) view\n{\n    [self addArrangedSubview___crossmobile_ios_uikit_UIView:(view ? view : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addArrangedSubview___crossmobile_ios_uikit_UIView:(UIView*) view \n{\n    [super addArrangedSubview:(view == JAVA_NULL ? nil : view)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alignment()": {
      "reverse": "- (UIStackViewAlignment) alignment\n{\n    return [self alignment__];\n}\n\n",
      "super": "- (int) alignment__\n{\n    return [super alignment];\n}\n\n"
    },
    "alpha()": null,
    "arrangedSubviews()": {
      "reverse": "- (NSArray<__kindof UIView *> *) arrangedSubviews\n{\n    NSArray<__kindof UIView *> * re$ult = [self arrangedSubviews__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) arrangedSubviews__\n{\n    NSArray* re$ult = [super arrangedSubviews];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "axis()": {
      "reverse": "- (UILayoutConstraintAxis) axis\n{\n    return [self axis__];\n}\n\n",
      "super": "- (int) axis__\n{\n    return [super axis];\n}\n\n"
    },
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "distribution()": {
      "reverse": "- (UIStackViewDistribution) distribution\n{\n    return [self distribution__];\n}\n\n",
      "super": "- (int) distribution__\n{\n    return [super distribution];\n}\n\n"
    },
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertArrangedSubview(crossmobile.ios.uikit.UIView,int)": {
      "reverse": "- (void) insertArrangedSubview:(UIView *) view atIndex:(NSUInteger) stackIndex\n{\n    [self insertArrangedSubview___crossmobile_ios_uikit_UIView_int:(view ? view : JAVA_NULL) :stackIndex];\n}\n\n",
      "super": "- (void) insertArrangedSubview___crossmobile_ios_uikit_UIView_int:(UIView*) view :(int) stackIndex \n{\n    [super insertArrangedSubview:(view == JAVA_NULL ? nil : view) atIndex:stackIndex];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isBaselineRelativeArrangement()": {
      "reverse": "- (BOOL) isBaselineRelativeArrangement\n{\n    return [self isBaselineRelativeArrangement__];\n}\n\n",
      "super": "- (BOOL) isBaselineRelativeArrangement__\n{\n    return [super isBaselineRelativeArrangement];\n}\n\n"
    },
    "isFirstResponder()": null,
    "isHidden()": null,
    "isLayoutMarginsRelativeArrangement()": {
      "reverse": "- (BOOL) isLayoutMarginsRelativeArrangement\n{\n    return [self isLayoutMarginsRelativeArrangement__];\n}\n\n",
      "super": "- (BOOL) isLayoutMarginsRelativeArrangement__\n{\n    return [super isLayoutMarginsRelativeArrangement];\n}\n\n"
    },
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeArrangedSubview(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) removeArrangedSubview:(UIView *) view\n{\n    [self removeArrangedSubview___crossmobile_ios_uikit_UIView:(view ? view : JAVA_NULL)];\n}\n\n",
      "super": "- (void) removeArrangedSubview___crossmobile_ios_uikit_UIView:(UIView*) view \n{\n    [super removeArrangedSubview:(view == JAVA_NULL ? nil : view)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlignment(int)": {
      "reverse": "- (void) setAlignment:(UIStackViewAlignment) alignment\n{\n    [self setAlignment___int:alignment];\n}\n\n",
      "super": "- (void) setAlignment___int:(int) alignment \n{\n    [super setAlignment:alignment];\n}\n\n"
    },
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setAxis(int)": {
      "reverse": "- (void) setAxis:(UILayoutConstraintAxis) axis\n{\n    [self setAxis___int:axis];\n}\n\n",
      "super": "- (void) setAxis___int:(int) axis \n{\n    [super setAxis:axis];\n}\n\n"
    },
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBaselineRelativeArrangement(boolean)": {
      "reverse": "- (void) setBaselineRelativeArrangement:(BOOL) baselineRelativeArrangement\n{\n    [self setBaselineRelativeArrangement___boolean:baselineRelativeArrangement];\n}\n\n",
      "super": "- (void) setBaselineRelativeArrangement___boolean:(BOOL) baselineRelativeArrangement \n{\n    [super setBaselineRelativeArrangement:baselineRelativeArrangement];\n}\n\n"
    },
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setDistribution(int)": {
      "reverse": "- (void) setDistribution:(UIStackViewDistribution) distribution\n{\n    [self setDistribution___int:distribution];\n}\n\n",
      "super": "- (void) setDistribution___int:(int) distribution \n{\n    [super setDistribution:distribution];\n}\n\n"
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setLayoutMarginsRelativeArrangement(boolean)": {
      "reverse": "- (void) setLayoutMarginsRelativeArrangement:(BOOL) layoutMarginsRelativeArrangement\n{\n    [self setLayoutMarginsRelativeArrangement___boolean:layoutMarginsRelativeArrangement];\n}\n\n",
      "super": "- (void) setLayoutMarginsRelativeArrangement___boolean:(BOOL) layoutMarginsRelativeArrangement \n{\n    [super setLayoutMarginsRelativeArrangement:layoutMarginsRelativeArrangement];\n}\n\n"
    },
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setSpacing(double)": {
      "reverse": "- (void) setSpacing:(CGFloat) spacing\n{\n    [self setSpacing___double:spacing];\n}\n\n",
      "super": "- (void) setSpacing___double:(double) spacing \n{\n    [super setSpacing:spacing];\n}\n\n"
    },
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "spacing()": {
      "reverse": "- (CGFloat) spacing\n{\n    return [self spacing__];\n}\n\n",
      "super": "- (double) spacing__\n{\n    return [super spacing];\n}\n\n"
    },
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UIStepper": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "addTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "allTargets()": null,
    "alpha()": null,
    "autorepeat()": {
      "reverse": "- (BOOL) autorepeat\n{\n    return [self autorepeat__];\n}\n\n",
      "super": "- (BOOL) autorepeat__\n{\n    return [super autorepeat];\n}\n\n"
    },
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "backgroundImageForState(int)": {
      "reverse": "- (UIImage *) backgroundImageForState:(UIControlState) state\n{\n    UIImage * re$ult = [self backgroundImageForState___int:state];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) backgroundImageForState___int:(int) state \n{\n    UIImage* re$ult = [super backgroundImageForState:state];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHorizontalAlignment()": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "contentVerticalAlignment()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "decrementImageForState(int)": {
      "reverse": "- (UIImage *) decrementImageForState:(UIControlState) state\n{\n    UIImage * re$ult = [self decrementImageForState___int:state];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) decrementImageForState___int:(int) state \n{\n    UIImage* re$ult = [super decrementImageForState:state];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "dividerImageForLeftSegmentState(int,int)": {
      "reverse": "- (UIImage *) dividerImageForLeftSegmentState:(UIControlState) state rightSegmentState:(UIControlState) state\n{\n    UIImage * re$ult = [self dividerImageForLeftSegmentState___int_int:state :state];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) dividerImageForLeftSegmentState___int_int:(int) state :(int) state \n{\n    UIImage* re$ult = [super dividerImageForLeftSegmentState:state rightSegmentState:state];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "incrementImageForState(int)": {
      "reverse": "- (UIImage *) incrementImageForState:(UIControlState) state\n{\n    UIImage * re$ult = [self incrementImageForState___int:state];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) incrementImageForState___int:(int) state \n{\n    UIImage* re$ult = [super incrementImageForState:state];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isContinuous()": {
      "reverse": "- (BOOL) isContinuous\n{\n    return [self isContinuous__];\n}\n\n",
      "super": "- (BOOL) isContinuous__\n{\n    return [super isContinuous];\n}\n\n"
    },
    "isEnabled()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isHighlighted()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isSelected()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "maximumValue()": {
      "reverse": "- (double) maximumValue\n{\n    return [self maximumValue__];\n}\n\n",
      "super": "- (double) maximumValue__\n{\n    return [super maximumValue];\n}\n\n"
    },
    "minimumValue()": {
      "reverse": "- (double) minimumValue\n{\n    return [self minimumValue__];\n}\n\n",
      "super": "- (double) minimumValue__\n{\n    return [super minimumValue];\n}\n\n"
    },
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendActionsForControlEvents(int)": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutorepeat(boolean)": {
      "reverse": "- (void) setAutorepeat:(BOOL) autorepeat\n{\n    [self setAutorepeat___boolean:autorepeat];\n}\n\n",
      "super": "- (void) setAutorepeat___boolean:(BOOL) autorepeat \n{\n    [super setAutorepeat:autorepeat];\n}\n\n"
    },
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBackgroundImage(crossmobile.ios.uikit.UIImage,int)": {
      "reverse": "- (void) setBackgroundImage:(UIImage *) image forState:(UIControlState) state\n{\n    [self setBackgroundImage___crossmobile_ios_uikit_UIImage_int:(image ? image : JAVA_NULL) :state];\n}\n\n",
      "super": "- (void) setBackgroundImage___crossmobile_ios_uikit_UIImage_int:(UIImage*) image :(int) state \n{\n    [super setBackgroundImage:(image == JAVA_NULL ? nil : image) forState:state];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHorizontalAlignment(int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setContentVerticalAlignment(int)": null,
    "setContinuous(boolean)": {
      "reverse": "- (void) setContinuous:(BOOL) continuous\n{\n    [self setContinuous___boolean:continuous];\n}\n\n",
      "super": "- (void) setContinuous___boolean:(BOOL) continuous \n{\n    [super setContinuous:continuous];\n}\n\n"
    },
    "setDecrementImage(crossmobile.ios.uikit.UIImage,int)": {
      "reverse": "- (void) setDecrementImage:(UIImage *) image forState:(UIControlState) state\n{\n    [self setDecrementImage___crossmobile_ios_uikit_UIImage_int:(image ? image : JAVA_NULL) :state];\n}\n\n",
      "super": "- (void) setDecrementImage___crossmobile_ios_uikit_UIImage_int:(UIImage*) image :(int) state \n{\n    [super setDecrementImage:(image == JAVA_NULL ? nil : image) forState:state];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setDividerImage(crossmobile.ios.uikit.UIImage,int,int)": {
      "reverse": "- (void) setDividerImage:(UIImage *) image forLeftSegmentState:(UIControlState) leftState rightSegmentState:(UIControlState) rightState\n{\n    [self setDividerImage___crossmobile_ios_uikit_UIImage_int_int:(image ? image : JAVA_NULL) :leftState :rightState];\n}\n\n",
      "super": "- (void) setDividerImage___crossmobile_ios_uikit_UIImage_int_int:(UIImage*) image :(int) leftState :(int) rightState \n{\n    [super setDividerImage:(image == JAVA_NULL ? nil : image) forLeftSegmentState:leftState rightSegmentState:rightState];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setEnabled(boolean)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHighlighted(boolean)": null,
    "setIncrementImage(crossmobile.ios.uikit.UIImage,int)": {
      "reverse": "- (void) setIncrementImage:(UIImage *) image forState:(UIControlState) state\n{\n    [self setIncrementImage___crossmobile_ios_uikit_UIImage_int:(image ? image : JAVA_NULL) :state];\n}\n\n",
      "super": "- (void) setIncrementImage___crossmobile_ios_uikit_UIImage_int:(UIImage*) image :(int) state \n{\n    [super setIncrementImage:(image == JAVA_NULL ? nil : image) forState:state];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMaximumValue(double)": {
      "reverse": "- (void) setMaximumValue:(double) maximumValue\n{\n    [self setMaximumValue___double:maximumValue];\n}\n\n",
      "super": "- (void) setMaximumValue___double:(double) maximumValue \n{\n    [super setMaximumValue:maximumValue];\n}\n\n"
    },
    "setMinimumValue(double)": {
      "reverse": "- (void) setMinimumValue:(double) minimumValue\n{\n    [self setMinimumValue___double:minimumValue];\n}\n\n",
      "super": "- (void) setMinimumValue___double:(double) minimumValue \n{\n    [super setMinimumValue:minimumValue];\n}\n\n"
    },
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setSelected(boolean)": null,
    "setStepValue(double)": {
      "reverse": "- (void) setStepValue:(double) stepValue\n{\n    [self setStepValue___double:stepValue];\n}\n\n",
      "super": "- (void) setStepValue___double:(double) stepValue \n{\n    [super setStepValue:stepValue];\n}\n\n"
    },
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValue(double)": {
      "reverse": "- (void) setValue:(double) value\n{\n    [self setValue___double:value];\n}\n\n",
      "super": "- (void) setValue___double:(double) value \n{\n    [super setValue:value];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "setWraps(boolean)": {
      "reverse": "- (void) setWraps:(BOOL) wraps\n{\n    [self setWraps___boolean:wraps];\n}\n\n",
      "super": "- (void) setWraps___boolean:(BOOL) wraps \n{\n    [super setWraps:wraps];\n}\n\n"
    },
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "state()": null,
    "stepValue()": {
      "reverse": "- (double) stepValue\n{\n    return [self stepValue__];\n}\n\n",
      "super": "- (double) stepValue__\n{\n    return [super stepValue];\n}\n\n"
    },
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "value()": {
      "reverse": "- (double) value\n{\n    return [self value__];\n}\n\n",
      "super": "- (double) value__\n{\n    return [super value];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null,
    "wraps()": {
      "reverse": "- (BOOL) wraps\n{\n    return [self wraps__];\n}\n\n",
      "super": "- (BOOL) wraps__\n{\n    return [super wraps];\n}\n\n"
    }
  },
  "crossmobile.ios.uikit.UIStoryboard": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "instantiateInitialViewController()": {
      "reverse": "- (UIViewController *) instantiateInitialViewController\n{\n    UIViewController * re$ult = [self instantiateInitialViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) instantiateInitialViewController__\n{\n    UIViewController* re$ult = [super instantiateInitialViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "instantiateViewControllerWithIdentifier(java.lang.String)": {
      "reverse": "- (UIViewController *) instantiateViewControllerWithIdentifier:(NSString *) identifier\n{\n    UIViewController * re$ult = [self instantiateViewControllerWithIdentifier___java_lang_String:(identifier ? identifier : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) instantiateViewControllerWithIdentifier___java_lang_String:(NSString*) identifier \n{\n    UIViewController* re$ult = [super instantiateViewControllerWithIdentifier:(identifier == JAVA_NULL ? nil : identifier)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController",
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIStoryboardSegue": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "destinationViewController()": {
      "reverse": "- (UIViewController *) destinationViewController\n{\n    UIViewController * re$ult = [self destinationViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) destinationViewController__\n{\n    UIViewController* re$ult = [super destinationViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "identifier()": {
      "reverse": "- (NSString *) identifier\n{\n    NSString * re$ult = [self identifier__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) identifier__\n{\n    NSString* re$ult = [super identifier];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "perform()": {
      "reverse": "- (void) perform\n{\n    [self perform__];\n}\n\n",
      "super": "- (void) perform__\n{\n    [super perform];\n}\n\n"
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sourceViewController()": {
      "reverse": "- (UIViewController *) sourceViewController\n{\n    UIViewController * re$ult = [self sourceViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) sourceViewController__\n{\n    UIViewController* re$ult = [super sourceViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIStoryboardUnwindSegueSource": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "sender()": {
      "reverse": "- (id) sender\n{\n    id re$ult = [self sender__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id) sender__\n{\n    id re$ult = [super sender];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_Object"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sourceViewController()": {
      "reverse": "- (UIViewController *) sourceViewController\n{\n    UIViewController * re$ult = [self sourceViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) sourceViewController__\n{\n    UIViewController* re$ult = [super sourceViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "unwindAction()": {
      "reverse": "- (SEL) unwindAction\n{\n    SEL re$ult = [self unwindAction__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (java_lang_reflect_Method*) unwindAction__\n{\n    java_lang_reflect_Method* re$ult = [super unwindAction];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_reflect_Method"
      ]
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UISwipeGestureRecognizer": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addTarget(crossmobile.ios.foundation.NSSelector)": null,
    "canBePreventedByGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "canPreventGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "cancelsTouchesInView()": null,
    "delaysTouchesBegan()": null,
    "delaysTouchesEnded()": null,
    "delegate()": null,
    "direction()": {
      "reverse": "- (UISwipeGestureRecognizerDirection) direction\n{\n    return [self direction__];\n}\n\n",
      "super": "- (int) direction__\n{\n    return [super direction];\n}\n\n"
    },
    "isEnabled()": null,
    "locationInView(crossmobile.ios.uikit.UIView)": null,
    "locationOfTouch(int,crossmobile.ios.uikit.UIView)": null,
    "numberOfTouches()": null,
    "numberOfTouchesRequired()": {
      "reverse": "- (NSUInteger) numberOfTouchesRequired\n{\n    return [self numberOfTouchesRequired__];\n}\n\n",
      "super": "- (int) numberOfTouchesRequired__\n{\n    return [super numberOfTouchesRequired];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.foundation.NSSelector)": null,
    "requireGestureRecognizerToFail(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "reset()": null,
    "setCancelsTouchesInView(boolean)": null,
    "setDelaysTouchesBegan(boolean)": null,
    "setDelaysTouchesEnded(boolean)": null,
    "setDelegate(crossmobile.ios.uikit.UIGestureRecognizerDelegate)": null,
    "setDirection(int)": {
      "reverse": "- (void) setDirection:(UISwipeGestureRecognizerDirection) direction\n{\n    [self setDirection___int:direction];\n}\n\n",
      "super": "- (void) setDirection___int:(int) direction \n{\n    [super setDirection:direction];\n}\n\n"
    },
    "setEnabled(boolean)": null,
    "setNumberOfTouchesRequired(int)": {
      "reverse": "- (void) setNumberOfTouchesRequired:(NSUInteger) numberOfTouchesRequired\n{\n    [self setNumberOfTouchesRequired___int:numberOfTouchesRequired];\n}\n\n",
      "super": "- (void) setNumberOfTouchesRequired___int:(int) numberOfTouchesRequired \n{\n    [super setNumberOfTouchesRequired:numberOfTouchesRequired];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "state()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "view()": null
  },
  "crossmobile.ios.uikit.UISwitch": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "addTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "allTargets()": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHorizontalAlignment()": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "contentVerticalAlignment()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isEnabled()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isHighlighted()": null,
    "isMultipleTouchEnabled()": null,
    "isOn()": {
      "reverse": "- (BOOL) isOn\n{\n    return [self isOn__];\n}\n\n",
      "super": "- (BOOL) isOn__\n{\n    return [super isOn];\n}\n\n"
    },
    "isOpaque()": null,
    "isSelected()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "onTintColor()": {
      "reverse": "- (UIColor *) onTintColor\n{\n    UIColor * re$ult = [self onTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) onTintColor__\n{\n    UIColor* re$ult = [super onTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendActionsForControlEvents(int)": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHorizontalAlignment(int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setContentVerticalAlignment(int)": null,
    "setEnabled(boolean)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHighlighted(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOn(boolean)": {
      "reverse": "- (void) setOn:(BOOL) on\n{\n    [self setOn___boolean:on];\n}\n\n",
      "super": "- (void) setOn___boolean:(BOOL) on \n{\n    [super setOn:on];\n}\n\n"
    },
    "setOn(boolean,boolean)": {
      "reverse": "- (void) setOn:(BOOL) on animated:(BOOL) animated\n{\n    [self setOn___boolean_boolean:on :animated];\n}\n\n",
      "super": "- (void) setOn___boolean_boolean:(BOOL) on :(BOOL) animated \n{\n    [super setOn:on animated:animated];\n}\n\n"
    },
    "setOnTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setOnTintColor:(UIColor *) onTintColor\n{\n    [self setOnTintColor___crossmobile_ios_uikit_UIColor:(onTintColor ? onTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setOnTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) onTintColor \n{\n    [super setOnTintColor:(onTintColor == JAVA_NULL ? nil : onTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setSelected(boolean)": null,
    "setTag(int)": null,
    "setThumbTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setThumbTintColor:(UIColor *) thumbTintColor\n{\n    [self setThumbTintColor___crossmobile_ios_uikit_UIColor:(thumbTintColor ? thumbTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setThumbTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) thumbTintColor \n{\n    [super setThumbTintColor:(thumbTintColor == JAVA_NULL ? nil : thumbTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "state()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "thumbTintColor()": {
      "reverse": "- (UIColor *) thumbTintColor\n{\n    UIColor * re$ult = [self thumbTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) thumbTintColor__\n{\n    UIColor* re$ult = [super thumbTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UITabBar": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "backgroundImage()": {
      "reverse": "- (UIImage *) backgroundImage\n{\n    UIImage * re$ult = [self backgroundImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) backgroundImage__\n{\n    UIImage* re$ult = [super backgroundImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "barStyle()": {
      "reverse": "- (UIBarStyle) barStyle\n{\n    return [self barStyle__];\n}\n\n",
      "super": "- (int) barStyle__\n{\n    return [super barStyle];\n}\n\n"
    },
    "barTintColor()": {
      "reverse": "- (UIColor *) barTintColor\n{\n    UIColor * re$ult = [self barTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) barTintColor__\n{\n    UIColor* re$ult = [super barTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "becomeFirstResponder()": null,
    "beginCustomizingItems(java.util.List)": {
      "reverse": "- (void) beginCustomizingItems:(NSArray<UITabBarItem *> *) items\n{\n    [self beginCustomizingItems___java_util_List:(items ? items : JAVA_NULL)];\n}\n\n",
      "super": "- (void) beginCustomizingItems___java_util_List:(NSArray*) items \n{\n    [super beginCustomizingItems:(items == JAVA_NULL ? nil : items)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "delegate()": {
      "reverse": "- (id<UITabBarDelegate>) delegate\n{\n    id<UITabBarDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UITabBarDelegate>) delegate__\n{\n    id<UITabBarDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarDelegate"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "endCustomizingAnimated(boolean)": {
      "reverse": "- (BOOL) endCustomizingAnimated:(BOOL) animated\n{\n    return [self endCustomizingAnimated___boolean:animated];\n}\n\n",
      "super": "- (BOOL) endCustomizingAnimated___boolean:(BOOL) animated \n{\n    return [super endCustomizingAnimated:animated];\n}\n\n"
    },
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isCustomizing()": {
      "reverse": "- (BOOL) isCustomizing\n{\n    return [self isCustomizing__];\n}\n\n",
      "super": "- (BOOL) isCustomizing__\n{\n    return [super isCustomizing];\n}\n\n"
    },
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isTranslucent()": {
      "reverse": "- (BOOL) isTranslucent\n{\n    return [self isTranslucent__];\n}\n\n",
      "super": "- (BOOL) isTranslucent__\n{\n    return [super isTranslucent];\n}\n\n"
    },
    "isUserInteractionEnabled()": null,
    "itemPositioning()": {
      "reverse": "- (UITabBarItemPositioning) itemPositioning\n{\n    return [self itemPositioning__];\n}\n\n",
      "super": "- (int) itemPositioning__\n{\n    return [super itemPositioning];\n}\n\n"
    },
    "itemSpacing()": {
      "reverse": "- (CGFloat) itemSpacing\n{\n    return [self itemSpacing__];\n}\n\n",
      "super": "- (double) itemSpacing__\n{\n    return [super itemSpacing];\n}\n\n"
    },
    "itemWidth()": {
      "reverse": "- (CGFloat) itemWidth\n{\n    return [self itemWidth__];\n}\n\n",
      "super": "- (double) itemWidth__\n{\n    return [super itemWidth];\n}\n\n"
    },
    "items()": {
      "reverse": "- (NSArray<UITabBarItem *> *) items\n{\n    NSArray<UITabBarItem *> * re$ult = [self items__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) items__\n{\n    NSArray* re$ult = [super items];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "selectedImageTintColor()": {
      "reverse": "- (UIColor *) selectedImageTintColor\n{\n    UIColor * re$ult = [self selectedImageTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) selectedImageTintColor__\n{\n    UIColor* re$ult = [super selectedImageTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "selectedItem()": {
      "reverse": "- (UITabBarItem *) selectedItem\n{\n    UITabBarItem * re$ult = [self selectedItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UITabBarItem*) selectedItem__\n{\n    UITabBarItem* re$ult = [super selectedItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarItem"
      ]
    },
    "selectionIndicatorImage()": {
      "reverse": "- (UIImage *) selectionIndicatorImage\n{\n    UIImage * re$ult = [self selectionIndicatorImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) selectionIndicatorImage__\n{\n    UIImage* re$ult = [super selectionIndicatorImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBackgroundImage(crossmobile.ios.uikit.UIImage)": {
      "reverse": "- (void) setBackgroundImage:(UIImage *) backgroundImage\n{\n    [self setBackgroundImage___crossmobile_ios_uikit_UIImage:(backgroundImage ? backgroundImage : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setBackgroundImage___crossmobile_ios_uikit_UIImage:(UIImage*) backgroundImage \n{\n    [super setBackgroundImage:(backgroundImage == JAVA_NULL ? nil : backgroundImage)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setBarStyle(int)": {
      "reverse": "- (void) setBarStyle:(UIBarStyle) barStyle\n{\n    [self setBarStyle___int:barStyle];\n}\n\n",
      "super": "- (void) setBarStyle___int:(int) barStyle \n{\n    [super setBarStyle:barStyle];\n}\n\n"
    },
    "setBarTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setBarTintColor:(UIColor *) barTintColor\n{\n    [self setBarTintColor___crossmobile_ios_uikit_UIColor:(barTintColor ? barTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setBarTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) barTintColor \n{\n    [super setBarTintColor:(barTintColor == JAVA_NULL ? nil : barTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setDelegate(crossmobile.ios.uikit.UITabBarDelegate)": {
      "reverse": "- (void) setDelegate:(id<UITabBarDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UITabBarDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UITabBarDelegate:(id<UITabBarDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarDelegate"
      ]
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setItemPositioning(int)": {
      "reverse": "- (void) setItemPositioning:(UITabBarItemPositioning) itemPositioning\n{\n    [self setItemPositioning___int:itemPositioning];\n}\n\n",
      "super": "- (void) setItemPositioning___int:(int) itemPositioning \n{\n    [super setItemPositioning:itemPositioning];\n}\n\n"
    },
    "setItemSpacing(double)": {
      "reverse": "- (void) setItemSpacing:(CGFloat) itemSpacing\n{\n    [self setItemSpacing___double:itemSpacing];\n}\n\n",
      "super": "- (void) setItemSpacing___double:(double) itemSpacing \n{\n    [super setItemSpacing:itemSpacing];\n}\n\n"
    },
    "setItemWidth(double)": {
      "reverse": "- (void) setItemWidth:(CGFloat) itemWidth\n{\n    [self setItemWidth___double:itemWidth];\n}\n\n",
      "super": "- (void) setItemWidth___double:(double) itemWidth \n{\n    [super setItemWidth:itemWidth];\n}\n\n"
    },
    "setItems(java.util.List)": {
      "reverse": "- (void) setItems:(NSArray<UITabBarItem *> *) items\n{\n    [self setItems___java_util_List:(items ? items : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setItems___java_util_List:(NSArray*) items \n{\n    [super setItems:(items == JAVA_NULL ? nil : items)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setItems(java.util.List,boolean)": {
      "reverse": "- (void) setItems:(NSArray<UITabBarItem *> *) items animated:(BOOL) animated\n{\n    [self setItems___java_util_List_boolean:(items ? items : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) setItems___java_util_List_boolean:(NSArray*) items :(BOOL) animated \n{\n    [super setItems:(items == JAVA_NULL ? nil : items) animated:animated];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setSelectedImageTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setSelectedImageTintColor:(UIColor *) selectedImageTintColor\n{\n    [self setSelectedImageTintColor___crossmobile_ios_uikit_UIColor:(selectedImageTintColor ? selectedImageTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setSelectedImageTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) selectedImageTintColor \n{\n    [super setSelectedImageTintColor:(selectedImageTintColor == JAVA_NULL ? nil : selectedImageTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setSelectedItem(crossmobile.ios.uikit.UITabBarItem)": {
      "reverse": "- (void) setSelectedItem:(UITabBarItem *) selectedItem\n{\n    [self setSelectedItem___crossmobile_ios_uikit_UITabBarItem:(selectedItem ? selectedItem : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setSelectedItem___crossmobile_ios_uikit_UITabBarItem:(UITabBarItem*) selectedItem \n{\n    objc_setAssociatedObject(self, @selector(setSelectedItem:), selectedItem, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setSelectedItem:(selectedItem == JAVA_NULL ? nil : selectedItem)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarItem"
      ]
    },
    "setSelectionIndicatorImage(crossmobile.ios.uikit.UIImage)": {
      "reverse": "- (void) setSelectionIndicatorImage:(UIImage *) selectionIndicatorImage\n{\n    [self setSelectionIndicatorImage___crossmobile_ios_uikit_UIImage:(selectionIndicatorImage ? selectionIndicatorImage : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setSelectionIndicatorImage___crossmobile_ios_uikit_UIImage:(UIImage*) selectionIndicatorImage \n{\n    [super setSelectionIndicatorImage:(selectionIndicatorImage == JAVA_NULL ? nil : selectionIndicatorImage)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setShadowImage(crossmobile.ios.uikit.UIImage)": {
      "reverse": "- (void) setShadowImage:(UIImage *) shadowImage\n{\n    [self setShadowImage___crossmobile_ios_uikit_UIImage:(shadowImage ? shadowImage : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setShadowImage___crossmobile_ios_uikit_UIImage:(UIImage*) shadowImage \n{\n    [super setShadowImage:(shadowImage == JAVA_NULL ? nil : shadowImage)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setTranslucent(boolean)": {
      "reverse": "- (void) setTranslucent:(BOOL) translucent\n{\n    [self setTranslucent___boolean:translucent];\n}\n\n",
      "super": "- (void) setTranslucent___boolean:(BOOL) translucent \n{\n    [super setTranslucent:translucent];\n}\n\n"
    },
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "shadowImage()": {
      "reverse": "- (UIImage *) shadowImage\n{\n    UIImage * re$ult = [self shadowImage__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImage*) shadowImage__\n{\n    UIImage* re$ult = [super shadowImage];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImage"
      ]
    },
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UITabBarController": {
    "addChildViewController(crossmobile.ios.uikit.UIViewController)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "additionalSafeAreaInsets()": null,
    "allowedChildViewControllersForUnwindingFromSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": null,
    "automaticallyAdjustsScrollViewInsets()": null,
    "becomeFirstResponder()": null,
    "beginAppearanceTransition(boolean,boolean)": null,
    "bottomLayoutGuide()": null,
    "childViewControllerContainingSegueSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": null,
    "childViewControllerForStatusBarHidden()": null,
    "childViewControllerForStatusBarStyle()": null,
    "childViewControllers()": null,
    "contentSizeForViewInPopover()": null,
    "customizableViewControllers()": {
      "reverse": "- (NSArray<__kindof UIViewController *> *) customizableViewControllers\n{\n    NSArray<__kindof UIViewController *> * re$ult = [self customizableViewControllers__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) customizableViewControllers__\n{\n    NSArray* re$ult = [super customizableViewControllers];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "definesPresentationContext()": null,
    "delegate()": {
      "reverse": "- (id<UITabBarControllerDelegate>) delegate\n{\n    id<UITabBarControllerDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UITabBarControllerDelegate>) delegate__\n{\n    id<UITabBarControllerDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarControllerDelegate"
      ]
    },
    "didReceiveMemoryWarning()": null,
    "didRotateFromInterfaceOrientation(int)": null,
    "disablesAutomaticKeyboardDismissal()": null,
    "dismissModalViewControllerAnimated(boolean)": null,
    "edgesForExtendedLayout()": null,
    "editButtonItem()": null,
    "endAppearanceTransition()": null,
    "extensionContext()": null,
    "hidesBottomBarWhenPushed()": null,
    "interfaceOrientation()": null,
    "isEditing()": null,
    "isFirstResponder()": null,
    "isModalInPopover()": null,
    "isViewLoaded()": null,
    "loadView()": null,
    "loadViewIfNeeded()": null,
    "modalPresentationStyle()": null,
    "modalTransitionStyle()": null,
    "moreNavigationController()": {
      "reverse": "- (UINavigationController *) moreNavigationController\n{\n    UINavigationController * re$ult = [self moreNavigationController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UINavigationController*) moreNavigationController__\n{\n    UINavigationController* re$ult = [super moreNavigationController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationController"
      ]
    },
    "navigationController()": null,
    "navigationItem()": null,
    "nextResponder()": null,
    "nibName()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "parentViewController()": null,
    "performSegueWithIdentifier(java.lang.String,java.lang.Object)": null,
    "preferredInterfaceOrientationForPresentation()": null,
    "preferredStatusBarStyle()": null,
    "prefersStatusBarHidden()": null,
    "prepareForSegue(crossmobile.ios.uikit.UIStoryboardSegue,java.lang.Object)": null,
    "presentModalViewController(crossmobile.ios.uikit.UIViewController,boolean)": null,
    "presentedViewController()": null,
    "presentingViewController()": null,
    "providesPresentationContextTransitionStyle()": null,
    "removeFromParentViewController()": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rotatingFooterView()": null,
    "rotatingHeaderView()": null,
    "selectedIndex()": {
      "reverse": "- (NSUInteger) selectedIndex\n{\n    return [self selectedIndex__];\n}\n\n",
      "super": "- (int) selectedIndex__\n{\n    return [super selectedIndex];\n}\n\n"
    },
    "selectedViewController()": {
      "reverse": "- (UIViewController *) selectedViewController\n{\n    UIViewController * re$ult = [self selectedViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) selectedViewController__\n{\n    UIViewController* re$ult = [super selectedViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "setAdditionalSafeAreaInsets(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setAutomaticallyAdjustsScrollViewInsets(boolean)": null,
    "setContentSizeForViewInPopover(crossmobile.ios.coregraphics.CGSize)": null,
    "setCustomizableViewControllers(java.util.List)": {
      "reverse": "- (void) setCustomizableViewControllers:(NSArray<__kindof UIViewController *> *) customizableViewControllers\n{\n    [self setCustomizableViewControllers___java_util_List:(customizableViewControllers ? customizableViewControllers : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setCustomizableViewControllers___java_util_List:(NSArray*) customizableViewControllers \n{\n    [super setCustomizableViewControllers:(customizableViewControllers == JAVA_NULL ? nil : customizableViewControllers)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setDefinesPresentationContext(boolean)": null,
    "setDelegate(crossmobile.ios.uikit.UITabBarControllerDelegate)": {
      "reverse": "- (void) setDelegate:(id<UITabBarControllerDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UITabBarControllerDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UITabBarControllerDelegate:(id<UITabBarControllerDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarControllerDelegate"
      ]
    },
    "setEdgesForExtendedLayout(int)": null,
    "setEditing(boolean)": null,
    "setEditing(boolean,boolean)": null,
    "setHidesBottomBarWhenPushed(boolean)": null,
    "setModalInPopover(boolean)": null,
    "setModalPresentationStyle(int)": null,
    "setModalTransitionStyle(int)": null,
    "setNeedsStatusBarAppearanceUpdate()": null,
    "setProvidesPresentationContextTransitionStyle(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setSelectedIndex(int)": {
      "reverse": "- (void) setSelectedIndex:(NSUInteger) selectedIndex\n{\n    [self setSelectedIndex___int:selectedIndex];\n}\n\n",
      "super": "- (void) setSelectedIndex___int:(int) selectedIndex \n{\n    [super setSelectedIndex:selectedIndex];\n}\n\n"
    },
    "setSelectedViewController(crossmobile.ios.uikit.UIViewController)": {
      "reverse": "- (void) setSelectedViewController:(UIViewController *) selectedViewController\n{\n    [self setSelectedViewController___crossmobile_ios_uikit_UIViewController:(selectedViewController ? selectedViewController : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setSelectedViewController___crossmobile_ios_uikit_UIViewController:(UIViewController*) selectedViewController \n{\n    objc_setAssociatedObject(self, @selector(setSelectedViewController:), selectedViewController, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setSelectedViewController:(selectedViewController == JAVA_NULL ? nil : selectedViewController)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "setTabBarItem(crossmobile.ios.uikit.UITabBarItem)": null,
    "setTitle(java.lang.String)": null,
    "setToolbarItems(java.util.List)": null,
    "setToolbarItems(java.util.List,boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "setView(crossmobile.ios.uikit.UIView)": null,
    "setViewControllers(java.util.List)": {
      "reverse": "- (void) setViewControllers:(NSArray<__kindof UIViewController *> *) viewControllers\n{\n    [self setViewControllers___java_util_List:(viewControllers ? viewControllers : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setViewControllers___java_util_List:(NSArray*) viewControllers \n{\n    [super setViewControllers:(viewControllers == JAVA_NULL ? nil : viewControllers)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setViewControllers(java.util.List,boolean)": {
      "reverse": "- (void) setViewControllers:(NSArray<__kindof UIViewController *> *) viewControllers animated:(BOOL) animated\n{\n    [self setViewControllers___java_util_List_boolean:(viewControllers ? viewControllers : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) setViewControllers___java_util_List_boolean:(NSArray*) viewControllers :(BOOL) animated \n{\n    [super setViewControllers:(viewControllers == JAVA_NULL ? nil : viewControllers) animated:animated];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setWantsFullScreenLayout(boolean)": null,
    "shouldAutomaticallyForwardAppearanceMethods()": null,
    "shouldAutorotate()": null,
    "shouldAutorotateToInterfaceOrientation(int)": null,
    "shouldPerformSegueWithIdentifier(java.lang.String,java.lang.Object)": null,
    "showDetailViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": null,
    "showViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": null,
    "splitViewController()": null,
    "storyboard()": null,
    "supportedInterfaceOrientations()": null,
    "tabBar()": {
      "reverse": "- (UITabBar *) tabBar\n{\n    UITabBar * re$ult = [self tabBar__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UITabBar*) tabBar__\n{\n    UITabBar* re$ult = [super tabBar];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBar"
      ]
    },
    "tabBarController()": null,
    "tabBarItem()": null,
    "title()": null,
    "toolbarItems()": null,
    "topLayoutGuide()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "view()": null,
    "viewControllers()": {
      "reverse": "- (NSArray<__kindof UIViewController *> *) viewControllers\n{\n    NSArray<__kindof UIViewController *> * re$ult = [self viewControllers__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) viewControllers__\n{\n    NSArray* re$ult = [super viewControllers];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "viewDidAppear(boolean)": null,
    "viewDidDisappear(boolean)": null,
    "viewDidLayoutSubviews()": null,
    "viewDidLoad()": null,
    "viewDidUnload()": null,
    "viewIfLoaded()": null,
    "viewSafeAreaInsetsDidChange()": null,
    "viewWillAppear(boolean)": null,
    "viewWillDisappear(boolean)": null,
    "viewWillLayoutSubviews()": null,
    "wantsFullScreenLayout()": null,
    "willAnimateRotationToInterfaceOrientation(int,double)": null,
    "willRotateToInterfaceOrientation(int,double)": null
  },
  "crossmobile.ios.uikit.UITabBarControllerDelegate": {
    "didEndCustomizingViewControllers(crossmobile.ios.uikit.UITabBarController,java.util.List,boolean)": {
      "reverse": "- (void) tabBarController:(UITabBarController *) tabBarController didEndCustomizingViewControllers:(NSArray<__kindof UIViewController *> *) viewControllers changed:(BOOL) changed\n{\n    [self didEndCustomizingViewControllers___crossmobile_ios_uikit_UITabBarController_java_util_List_boolean:(tabBarController ? tabBarController : JAVA_NULL) :(viewControllers ? viewControllers : JAVA_NULL) :changed];\n}\n\n",
      "super": "- (void) didEndCustomizingViewControllers___crossmobile_ios_uikit_UITabBarController_java_util_List_boolean:(UITabBarController*) tabBarController :(NSArray*) viewControllers :(BOOL) changed \n{\n    [super tabBarController:(tabBarController == JAVA_NULL ? nil : tabBarController) didEndCustomizingViewControllers:(viewControllers == JAVA_NULL ? nil : viewControllers) changed:changed];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarController",
        "java_util_List"
      ]
    },
    "didSelectViewController(crossmobile.ios.uikit.UITabBarController,crossmobile.ios.uikit.UIViewController)": {
      "reverse": "- (void) tabBarController:(UITabBarController *) tabBarController didSelectViewController:(UIViewController *) viewController\n{\n    [self didSelectViewController___crossmobile_ios_uikit_UITabBarController_crossmobile_ios_uikit_UIViewController:(tabBarController ? tabBarController : JAVA_NULL) :(viewController ? viewController : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didSelectViewController___crossmobile_ios_uikit_UITabBarController_crossmobile_ios_uikit_UIViewController:(UITabBarController*) tabBarController :(UIViewController*) viewController \n{\n    [super tabBarController:(tabBarController == JAVA_NULL ? nil : tabBarController) didSelectViewController:(viewController == JAVA_NULL ? nil : viewController)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarController",
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "shouldSelectViewController(crossmobile.ios.uikit.UITabBarController,crossmobile.ios.uikit.UIViewController)": {
      "reverse": "- (BOOL) tabBarController:(UITabBarController *) tabBarController shouldSelectViewController:(UIViewController *) viewController\n{\n    return [self shouldSelectViewController___crossmobile_ios_uikit_UITabBarController_crossmobile_ios_uikit_UIViewController:(tabBarController ? tabBarController : JAVA_NULL) :(viewController ? viewController : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldSelectViewController___crossmobile_ios_uikit_UITabBarController_crossmobile_ios_uikit_UIViewController:(UITabBarController*) tabBarController :(UIViewController*) viewController \n{\n    return [super tabBarController:(tabBarController == JAVA_NULL ? nil : tabBarController) shouldSelectViewController:(viewController == JAVA_NULL ? nil : viewController)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarController",
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "willBeginCustomizingViewControllers(crossmobile.ios.uikit.UITabBarController,java.util.List)": {
      "reverse": "- (void) tabBarController:(UITabBarController *) tabBarController willBeginCustomizingViewControllers:(NSArray<__kindof UIViewController *> *) viewControllers\n{\n    [self willBeginCustomizingViewControllers___crossmobile_ios_uikit_UITabBarController_java_util_List:(tabBarController ? tabBarController : JAVA_NULL) :(viewControllers ? viewControllers : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willBeginCustomizingViewControllers___crossmobile_ios_uikit_UITabBarController_java_util_List:(UITabBarController*) tabBarController :(NSArray*) viewControllers \n{\n    [super tabBarController:(tabBarController == JAVA_NULL ? nil : tabBarController) willBeginCustomizingViewControllers:(viewControllers == JAVA_NULL ? nil : viewControllers)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarController",
        "java_util_List"
      ]
    },
    "willEndCustomizingViewControllers(crossmobile.ios.uikit.UITabBarController,java.util.List,boolean)": {
      "reverse": "- (void) tabBarController:(UITabBarController *) tabBarController willEndCustomizingViewControllers:(NSArray<__kindof UIViewController *> *) viewControllers changed:(BOOL) changed\n{\n    [self willEndCustomizingViewControllers___crossmobile_ios_uikit_UITabBarController_java_util_List_boolean:(tabBarController ? tabBarController : JAVA_NULL) :(viewControllers ? viewControllers : JAVA_NULL) :changed];\n}\n\n",
      "super": "- (void) willEndCustomizingViewControllers___crossmobile_ios_uikit_UITabBarController_java_util_List_boolean:(UITabBarController*) tabBarController :(NSArray*) viewControllers :(BOOL) changed \n{\n    [super tabBarController:(tabBarController == JAVA_NULL ? nil : tabBarController) willEndCustomizingViewControllers:(viewControllers == JAVA_NULL ? nil : viewControllers) changed:changed];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarController",
        "java_util_List"
      ]
    }
  },
  "crossmobile.ios.uikit.UITabBarDelegate": {
    "didBeginCustomizingItems(crossmobile.ios.uikit.UITabBar,java.util.List)": {
      "reverse": "- (void) tabBar:(UITabBar *) tabBar didBeginCustomizingItems:(NSArray<UITabBarItem *> *) items\n{\n    [self didBeginCustomizingItems___crossmobile_ios_uikit_UITabBar_java_util_List:(tabBar ? tabBar : JAVA_NULL) :(items ? items : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didBeginCustomizingItems___crossmobile_ios_uikit_UITabBar_java_util_List:(UITabBar*) tabBar :(NSArray*) items \n{\n    [super tabBar:(tabBar == JAVA_NULL ? nil : tabBar) didBeginCustomizingItems:(items == JAVA_NULL ? nil : items)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBar",
        "java_util_List"
      ]
    },
    "didEndCustomizingItems(crossmobile.ios.uikit.UITabBar,java.util.List,boolean)": {
      "reverse": "- (void) tabBar:(UITabBar *) tabBar didEndCustomizingItems:(NSArray<UITabBarItem *> *) items changed:(BOOL) changed\n{\n    [self didEndCustomizingItems___crossmobile_ios_uikit_UITabBar_java_util_List_boolean:(tabBar ? tabBar : JAVA_NULL) :(items ? items : JAVA_NULL) :changed];\n}\n\n",
      "super": "- (void) didEndCustomizingItems___crossmobile_ios_uikit_UITabBar_java_util_List_boolean:(UITabBar*) tabBar :(NSArray*) items :(BOOL) changed \n{\n    [super tabBar:(tabBar == JAVA_NULL ? nil : tabBar) didEndCustomizingItems:(items == JAVA_NULL ? nil : items) changed:changed];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBar",
        "java_util_List"
      ]
    },
    "didSelectItem(crossmobile.ios.uikit.UITabBar,crossmobile.ios.uikit.UITabBarItem)": {
      "reverse": "- (void) tabBar:(UITabBar *) tabBar didSelectItem:(UITabBarItem *) item\n{\n    [self didSelectItem___crossmobile_ios_uikit_UITabBar_crossmobile_ios_uikit_UITabBarItem:(tabBar ? tabBar : JAVA_NULL) :(item ? item : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didSelectItem___crossmobile_ios_uikit_UITabBar_crossmobile_ios_uikit_UITabBarItem:(UITabBar*) tabBar :(UITabBarItem*) item \n{\n    [super tabBar:(tabBar == JAVA_NULL ? nil : tabBar) didSelectItem:(item == JAVA_NULL ? nil : item)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBar",
        "crossmobile_ios_uikit_UITabBarItem"
      ]
    },
    "willBeginCustomizingItems(crossmobile.ios.uikit.UITabBar,java.util.List)": {
      "reverse": "- (void) tabBar:(UITabBar *) tabBar willBeginCustomizingItems:(NSArray<UITabBarItem *> *) items\n{\n    [self willBeginCustomizingItems___crossmobile_ios_uikit_UITabBar_java_util_List:(tabBar ? tabBar : JAVA_NULL) :(items ? items : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willBeginCustomizingItems___crossmobile_ios_uikit_UITabBar_java_util_List:(UITabBar*) tabBar :(NSArray*) items \n{\n    [super tabBar:(tabBar == JAVA_NULL ? nil : tabBar) willBeginCustomizingItems:(items == JAVA_NULL ? nil : items)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBar",
        "java_util_List"
      ]
    },
    "willEndCustomizingItems(crossmobile.ios.uikit.UITabBar,java.util.List,boolean)": {
      "reverse": "- (void) tabBar:(UITabBar *) tabBar willEndCustomizingItems:(NSArray<UITabBarItem *> *) items changed:(BOOL) changed\n{\n    [self willEndCustomizingItems___crossmobile_ios_uikit_UITabBar_java_util_List_boolean:(tabBar ? tabBar : JAVA_NULL) :(items ? items : JAVA_NULL) :changed];\n}\n\n",
      "super": "- (void) willEndCustomizingItems___crossmobile_ios_uikit_UITabBar_java_util_List_boolean:(UITabBar*) tabBar :(NSArray*) items :(BOOL) changed \n{\n    [super tabBar:(tabBar == JAVA_NULL ? nil : tabBar) willEndCustomizingItems:(items == JAVA_NULL ? nil : items) changed:changed];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBar",
        "java_util_List"
      ]
    }
  },
  "crossmobile.ios.uikit.UITabBarItem": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "badgeValue()": {
      "reverse": "- (NSString *) badgeValue\n{\n    NSString * re$ult = [self badgeValue__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) badgeValue__\n{\n    NSString* re$ult = [super badgeValue];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "image()": null,
    "imageInsets()": null,
    "isEnabled()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setBadgeValue(java.lang.String)": {
      "reverse": "- (void) setBadgeValue:(NSString *) badgeValue\n{\n    [self setBadgeValue___java_lang_String:(badgeValue ? badgeValue : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setBadgeValue___java_lang_String:(NSString*) badgeValue \n{\n    [super setBadgeValue:(badgeValue == JAVA_NULL ? nil : badgeValue)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setEnabled(boolean)": null,
    "setImage(crossmobile.ios.uikit.UIImage)": null,
    "setImageInsets(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setTag(int)": null,
    "setTitle(java.lang.String)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "tag()": null,
    "title()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UITableView": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "allowsMultipleSelection()": {
      "reverse": "- (BOOL) allowsMultipleSelection\n{\n    return [self allowsMultipleSelection__];\n}\n\n",
      "super": "- (BOOL) allowsMultipleSelection__\n{\n    return [super allowsMultipleSelection];\n}\n\n"
    },
    "allowsSelection()": {
      "reverse": "- (BOOL) allowsSelection\n{\n    return [self allowsSelection__];\n}\n\n",
      "super": "- (BOOL) allowsSelection__\n{\n    return [super allowsSelection];\n}\n\n"
    },
    "alpha()": null,
    "alwaysBounceHorizontal()": null,
    "alwaysBounceVertical()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounces()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "canCancelContentTouches()": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentInset()": null,
    "contentMode()": null,
    "contentOffset()": null,
    "contentSize()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "dataSource()": {
      "reverse": "- (id<UITableViewDataSource>) dataSource\n{\n    id<UITableViewDataSource> re$ult = [self dataSource__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UITableViewDataSource>) dataSource__\n{\n    id<UITableViewDataSource> re$ult = [super dataSource];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableViewDataSource"
      ]
    },
    "decelerationRate()": null,
    "delaysContentTouches()": null,
    "delegate()": null,
    "deleteRowsAtIndexPaths(java.util.List,int)": {
      "reverse": "- (void) deleteRowsAtIndexPaths:(NSArray<NSIndexPath *> *) indexPaths withRowAnimation:(UITableViewRowAnimation) animation\n{\n    [self deleteRowsAtIndexPaths___java_util_List_int:(indexPaths ? indexPaths : JAVA_NULL) :animation];\n}\n\n",
      "super": "- (void) deleteRowsAtIndexPaths___java_util_List_int:(NSArray*) indexPaths :(int) animation \n{\n    [super deleteRowsAtIndexPaths:(indexPaths == JAVA_NULL ? nil : indexPaths) withRowAnimation:animation];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "dequeueReusableCellWithIdentifier(java.lang.String)": {
      "reverse": "- (UITableViewCell *) dequeueReusableCellWithIdentifier:(NSString *) identifier\n{\n    UITableViewCell * re$ult = [self dequeueReusableCellWithIdentifier___java_lang_String:(identifier ? identifier : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UITableViewCell*) dequeueReusableCellWithIdentifier___java_lang_String:(NSString*) identifier \n{\n    UITableViewCell* re$ult = [super dequeueReusableCellWithIdentifier:(identifier == JAVA_NULL ? nil : identifier)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableViewCell",
        "java_lang_String"
      ]
    },
    "deselectRowAtIndexPath(crossmobile.ios.foundation.NSIndexPath,boolean)": {
      "reverse": "- (void) deselectRowAtIndexPath:(NSIndexPath *) indexPath animated:(BOOL) animated\n{\n    [self deselectRowAtIndexPath___crossmobile_ios_foundation_NSIndexPath_boolean:(indexPath ? indexPath : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) deselectRowAtIndexPath___crossmobile_ios_foundation_NSIndexPath_boolean:(NSIndexPath*) indexPath :(BOOL) animated \n{\n    [super deselectRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath) animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "estimatedRowHeight()": {
      "reverse": "- (CGFloat) estimatedRowHeight\n{\n    return [self estimatedRowHeight__];\n}\n\n",
      "super": "- (double) estimatedRowHeight__\n{\n    return [super estimatedRowHeight];\n}\n\n"
    },
    "flashScrollIndicators()": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "indexPathForRowAtPoint(crossmobile.ios.coregraphics.CGPoint)": {
      "reverse": "- (NSIndexPath *) indexPathForRowAtPoint:(CGPoint) point\n{\n    crossmobile_ios_coregraphics_CGPoint* point$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:point];\n    NSIndexPath * re$ult = [self indexPathForRowAtPoint___crossmobile_ios_coregraphics_CGPoint:point$conv];\n    [point$conv release];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSIndexPath*) indexPathForRowAtPoint___crossmobile_ios_coregraphics_CGPoint:(crossmobile_ios_coregraphics_CGPoint*) point \n{\n    NSIndexPath* re$ult = [super indexPathForRowAtPoint:[point getCGPoint]];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_foundation_NSIndexPath"
      ]
    },
    "indexPathForSelectedRow()": {
      "reverse": "- (NSIndexPath *) indexPathForSelectedRow\n{\n    NSIndexPath * re$ult = [self indexPathForSelectedRow__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSIndexPath*) indexPathForSelectedRow__\n{\n    NSIndexPath* re$ult = [super indexPathForSelectedRow];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath"
      ]
    },
    "indexPathsForSelectedRows()": {
      "reverse": "- (NSArray<NSIndexPath *> *) indexPathsForSelectedRows\n{\n    NSArray<NSIndexPath *> * re$ult = [self indexPathsForSelectedRows__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) indexPathsForSelectedRows__\n{\n    NSArray* re$ult = [super indexPathsForSelectedRows];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "indexPathsForVisibleRows()": {
      "reverse": "- (NSArray<NSIndexPath *> *) indexPathsForVisibleRows\n{\n    NSArray<NSIndexPath *> * re$ult = [self indexPathsForVisibleRows__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) indexPathsForVisibleRows__\n{\n    NSArray* re$ult = [super indexPathsForVisibleRows];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "indicatorStyle()": null,
    "insertRowsAtIndexPaths(java.util.List,int)": {
      "reverse": "- (void) insertRowsAtIndexPaths:(NSArray<NSIndexPath *> *) indexPaths withRowAnimation:(UITableViewRowAnimation) animation\n{\n    [self insertRowsAtIndexPaths___java_util_List_int:(indexPaths ? indexPaths : JAVA_NULL) :animation];\n}\n\n",
      "super": "- (void) insertRowsAtIndexPaths___java_util_List_int:(NSArray*) indexPaths :(int) animation \n{\n    [super insertRowsAtIndexPaths:(indexPaths == JAVA_NULL ? nil : indexPaths) withRowAnimation:animation];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isDecelerating()": null,
    "isDirectionalLockEnabled()": null,
    "isDragging()": null,
    "isEditing()": {
      "reverse": "- (BOOL) isEditing\n{\n    return [self isEditing__];\n}\n\n",
      "super": "- (BOOL) isEditing__\n{\n    return [super isEditing];\n}\n\n"
    },
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isPagingEnabled()": null,
    "isScrollEnabled()": null,
    "isTracking()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "registerClass(java.lang.Class,java.lang.String)": {
      "reverse": "- (void) registerClass:(Class) cellClass forCellReuseIdentifier:(NSString *) identifier\n{\n    [self registerClass___java_lang_Class_java_lang_String:(cellClass ? cellClass : JAVA_NULL) :(identifier ? identifier : JAVA_NULL)];\n}\n\n",
      "super": "- (void) registerClass___java_lang_Class_java_lang_String:(java_lang_Class*) cellClass :(NSString*) identifier \n{\n    [super registerClass:jclass_to_class(cellClass == JAVA_NULL ? nil : cellClass) forCellReuseIdentifier:(identifier == JAVA_NULL ? nil : identifier)];\n}\n\n",
      "supimport": [
        "java_lang_Class",
        "java_lang_String"
      ]
    },
    "registerNib(crossmobile.ios.uikit.UINib,java.lang.String)": {
      "reverse": "- (void) registerNib:(UINib *) nib forCellReuseIdentifier:(NSString *) identifier\n{\n    [self registerNib___crossmobile_ios_uikit_UINib_java_lang_String:(nib ? nib : JAVA_NULL) :(identifier ? identifier : JAVA_NULL)];\n}\n\n",
      "super": "- (void) registerNib___crossmobile_ios_uikit_UINib_java_lang_String:(UINib*) nib :(NSString*) identifier \n{\n    [super registerNib:(nib == JAVA_NULL ? nil : nib) forCellReuseIdentifier:(identifier == JAVA_NULL ? nil : identifier)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINib",
        "java_lang_String"
      ]
    },
    "reloadData()": {
      "reverse": "- (void) reloadData\n{\n    [self reloadData__];\n}\n\n",
      "super": "- (void) reloadData__\n{\n    [super reloadData];\n}\n\n"
    },
    "reloadRowsAtIndexPaths(java.util.List,int)": {
      "reverse": "- (void) reloadRowsAtIndexPaths:(NSArray<NSIndexPath *> *) indexPaths withRowAnimation:(UITableViewRowAnimation) animation\n{\n    [self reloadRowsAtIndexPaths___java_util_List_int:(indexPaths ? indexPaths : JAVA_NULL) :animation];\n}\n\n",
      "super": "- (void) reloadRowsAtIndexPaths___java_util_List_int:(NSArray*) indexPaths :(int) animation \n{\n    [super reloadRowsAtIndexPaths:(indexPaths == JAVA_NULL ? nil : indexPaths) withRowAnimation:animation];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "rowHeight()": {
      "reverse": "- (CGFloat) rowHeight\n{\n    return [self rowHeight__];\n}\n\n",
      "super": "- (double) rowHeight__\n{\n    return [super rowHeight];\n}\n\n"
    },
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "scrollIndicatorInsets()": null,
    "scrollRectToVisible(crossmobile.ios.coregraphics.CGRect,boolean)": null,
    "scrollToNearestSelectedRowAtScrollPosition(int,boolean)": {
      "reverse": "- (void) scrollToNearestSelectedRowAtScrollPosition:(UITableViewScrollPosition) scrollPosition animated:(BOOL) animated\n{\n    [self scrollToNearestSelectedRowAtScrollPosition___int_boolean:scrollPosition :animated];\n}\n\n",
      "super": "- (void) scrollToNearestSelectedRowAtScrollPosition___int_boolean:(int) scrollPosition :(BOOL) animated \n{\n    [super scrollToNearestSelectedRowAtScrollPosition:scrollPosition animated:animated];\n}\n\n"
    },
    "scrollToRowAtIndexPath(crossmobile.ios.foundation.NSIndexPath,int,boolean)": {
      "reverse": "- (void) scrollToRowAtIndexPath:(NSIndexPath *) indexPath atScrollPosition:(UITableViewScrollPosition) scrollPosition animated:(BOOL) animated\n{\n    [self scrollToRowAtIndexPath___crossmobile_ios_foundation_NSIndexPath_int_boolean:(indexPath ? indexPath : JAVA_NULL) :scrollPosition :animated];\n}\n\n",
      "super": "- (void) scrollToRowAtIndexPath___crossmobile_ios_foundation_NSIndexPath_int_boolean:(NSIndexPath*) indexPath :(int) scrollPosition :(BOOL) animated \n{\n    [super scrollToRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath) atScrollPosition:scrollPosition animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath"
      ]
    },
    "scrollsToTop()": null,
    "sectionFooterHeight()": {
      "reverse": "- (CGFloat) sectionFooterHeight\n{\n    return [self sectionFooterHeight__];\n}\n\n",
      "super": "- (double) sectionFooterHeight__\n{\n    return [super sectionFooterHeight];\n}\n\n"
    },
    "sectionHeaderHeight()": {
      "reverse": "- (CGFloat) sectionHeaderHeight\n{\n    return [self sectionHeaderHeight__];\n}\n\n",
      "super": "- (double) sectionHeaderHeight__\n{\n    return [super sectionHeaderHeight];\n}\n\n"
    },
    "selectRowAtIndexPath(crossmobile.ios.foundation.NSIndexPath,boolean,int)": {
      "reverse": "- (void) selectRowAtIndexPath:(NSIndexPath *) indexPath animated:(BOOL) animated scrollPosition:(UITableViewScrollPosition) scrollPosition\n{\n    [self selectRowAtIndexPath___crossmobile_ios_foundation_NSIndexPath_boolean_int:(indexPath ? indexPath : JAVA_NULL) :animated :scrollPosition];\n}\n\n",
      "super": "- (void) selectRowAtIndexPath___crossmobile_ios_foundation_NSIndexPath_boolean_int:(NSIndexPath*) indexPath :(BOOL) animated :(int) scrollPosition \n{\n    [super selectRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath) animated:animated scrollPosition:scrollPosition];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath"
      ]
    },
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "separatorColor()": {
      "reverse": "- (UIColor *) separatorColor\n{\n    UIColor * re$ult = [self separatorColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) separatorColor__\n{\n    UIColor* re$ult = [super separatorColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "separatorStyle()": {
      "reverse": "- (UITableViewCellSeparatorStyle) separatorStyle\n{\n    return [self separatorStyle__];\n}\n\n",
      "super": "- (int) separatorStyle__\n{\n    return [super separatorStyle];\n}\n\n"
    },
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAllowsMultipleSelection(boolean)": {
      "reverse": "- (void) setAllowsMultipleSelection:(BOOL) allowsMultipleSelection\n{\n    [self setAllowsMultipleSelection___boolean:allowsMultipleSelection];\n}\n\n",
      "super": "- (void) setAllowsMultipleSelection___boolean:(BOOL) allowsMultipleSelection \n{\n    [super setAllowsMultipleSelection:allowsMultipleSelection];\n}\n\n"
    },
    "setAllowsSelection(boolean)": {
      "reverse": "- (void) setAllowsSelection:(BOOL) allowsSelection\n{\n    [self setAllowsSelection___boolean:allowsSelection];\n}\n\n",
      "super": "- (void) setAllowsSelection___boolean:(BOOL) allowsSelection \n{\n    [super setAllowsSelection:allowsSelection];\n}\n\n"
    },
    "setAlpha(double)": null,
    "setAlwaysBounceHorizontal(boolean)": null,
    "setAlwaysBounceVertical(boolean)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounces(boolean)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCanCancelContentTouches(boolean)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentInset(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setContentMode(int)": null,
    "setContentOffset(crossmobile.ios.coregraphics.CGPoint)": null,
    "setContentOffset(crossmobile.ios.coregraphics.CGPoint,boolean)": null,
    "setContentSize(crossmobile.ios.coregraphics.CGSize)": null,
    "setDataSource(crossmobile.ios.uikit.UITableViewDataSource)": {
      "reverse": "- (void) setDataSource:(id<UITableViewDataSource>) dataSource\n{\n    [self setDataSource___crossmobile_ios_uikit_UITableViewDataSource:(dataSource ? dataSource : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDataSource___crossmobile_ios_uikit_UITableViewDataSource:(id<UITableViewDataSource>) dataSource \n{\n    objc_setAssociatedObject(self, @selector(setDataSource:), dataSource, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDataSource:(dataSource == JAVA_NULL ? nil : dataSource)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableViewDataSource"
      ]
    },
    "setDecelerationRate(double)": null,
    "setDelaysContentTouches(boolean)": null,
    "setDelegate(crossmobile.ios.uikit.UIScrollViewDelegate)": null,
    "setDelegate(crossmobile.ios.uikit.UITableViewDelegate)": {
      "reverse": "- (void) setDelegate:(id<UITableViewDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UITableViewDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UITableViewDelegate:(id<UITableViewDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableViewDelegate"
      ]
    },
    "setDirectionalLockEnabled(boolean)": null,
    "setEditing(boolean)": {
      "reverse": "- (void) setEditing:(BOOL) editing\n{\n    [self setEditing___boolean:editing];\n}\n\n",
      "super": "- (void) setEditing___boolean:(BOOL) editing \n{\n    [super setEditing:editing];\n}\n\n"
    },
    "setEditing(boolean,boolean)": {
      "reverse": "- (void) setEditing:(BOOL) editing animated:(BOOL) animated\n{\n    [self setEditing___boolean_boolean:editing :animated];\n}\n\n",
      "super": "- (void) setEditing___boolean_boolean:(BOOL) editing :(BOOL) animated \n{\n    [super setEditing:editing animated:animated];\n}\n\n"
    },
    "setEstimatedRowHeight(double)": {
      "reverse": "- (void) setEstimatedRowHeight:(CGFloat) estimatedRowHeight\n{\n    [self setEstimatedRowHeight___double:estimatedRowHeight];\n}\n\n",
      "super": "- (void) setEstimatedRowHeight___double:(double) estimatedRowHeight \n{\n    [super setEstimatedRowHeight:estimatedRowHeight];\n}\n\n"
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setIndicatorStyle(int)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPagingEnabled(boolean)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setRowHeight(double)": {
      "reverse": "- (void) setRowHeight:(CGFloat) rowHeight\n{\n    [self setRowHeight___double:rowHeight];\n}\n\n",
      "super": "- (void) setRowHeight___double:(double) rowHeight \n{\n    [super setRowHeight:rowHeight];\n}\n\n"
    },
    "setScrollEnabled(boolean)": null,
    "setScrollIndicatorInsets(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setScrollsToTop(boolean)": null,
    "setSectionFooterHeight(double)": {
      "reverse": "- (void) setSectionFooterHeight:(CGFloat) sectionFooterHeight\n{\n    [self setSectionFooterHeight___double:sectionFooterHeight];\n}\n\n",
      "super": "- (void) setSectionFooterHeight___double:(double) sectionFooterHeight \n{\n    [super setSectionFooterHeight:sectionFooterHeight];\n}\n\n"
    },
    "setSectionHeaderHeight(double)": {
      "reverse": "- (void) setSectionHeaderHeight:(CGFloat) sectionHeaderHeight\n{\n    [self setSectionHeaderHeight___double:sectionHeaderHeight];\n}\n\n",
      "super": "- (void) setSectionHeaderHeight___double:(double) sectionHeaderHeight \n{\n    [super setSectionHeaderHeight:sectionHeaderHeight];\n}\n\n"
    },
    "setSeparatorColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setSeparatorColor:(UIColor *) separatorColor\n{\n    [self setSeparatorColor___crossmobile_ios_uikit_UIColor:(separatorColor ? separatorColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setSeparatorColor___crossmobile_ios_uikit_UIColor:(UIColor*) separatorColor \n{\n    [super setSeparatorColor:(separatorColor == JAVA_NULL ? nil : separatorColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setSeparatorStyle(int)": {
      "reverse": "- (void) setSeparatorStyle:(UITableViewCellSeparatorStyle) separatorStyle\n{\n    [self setSeparatorStyle___int:separatorStyle];\n}\n\n",
      "super": "- (void) setSeparatorStyle___int:(int) separatorStyle \n{\n    [super setSeparatorStyle:separatorStyle];\n}\n\n"
    },
    "setShowsHorizontalScrollIndicator(boolean)": null,
    "setShowsVerticalScrollIndicator(boolean)": null,
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "showsHorizontalScrollIndicator()": null,
    "showsVerticalScrollIndicator()": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tableViewDelegate()": {
      "reverse": "- (id<UITableViewDelegate>) delegate\n{\n    id<UITableViewDelegate> re$ult = [self tableViewDelegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UITableViewDelegate>) tableViewDelegate__\n{\n    id<UITableViewDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableViewDelegate"
      ]
    },
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesShouldBegin(java.util.Set,crossmobile.ios.uikit.UIEvent,crossmobile.ios.uikit.UIView)": null,
    "touchesShouldCancelInContentView(crossmobile.ios.uikit.UIView)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UITableViewCell": {
    "accessibilityIdentifier()": null,
    "accessoryType()": {
      "reverse": "- (UITableViewCellAccessoryType) accessoryType\n{\n    return [self accessoryType__];\n}\n\n",
      "super": "- (int) accessoryType__\n{\n    return [super accessoryType];\n}\n\n"
    },
    "accessoryView()": {
      "reverse": "- (UIView *) accessoryView\n{\n    UIView * re$ult = [self accessoryView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) accessoryView__\n{\n    UIView* re$ult = [super accessoryView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "backgroundView()": {
      "reverse": "- (UIView *) backgroundView\n{\n    UIView * re$ult = [self backgroundView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) backgroundView__\n{\n    UIView* re$ult = [super backgroundView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "contentView()": {
      "reverse": "- (UIView *) contentView\n{\n    UIView * re$ult = [self contentView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) contentView__\n{\n    UIView* re$ult = [super contentView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "detailTextLabel()": {
      "reverse": "- (UILabel *) detailTextLabel\n{\n    UILabel * re$ult = [self detailTextLabel__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UILabel*) detailTextLabel__\n{\n    UILabel* re$ult = [super detailTextLabel];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UILabel"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "editingStyle()": {
      "reverse": "- (UITableViewCellEditingStyle) editingStyle\n{\n    return [self editingStyle__];\n}\n\n",
      "super": "- (int) editingStyle__\n{\n    return [super editingStyle];\n}\n\n"
    },
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "imageView()": {
      "reverse": "- (UIImageView *) imageView\n{\n    UIImageView * re$ult = [self imageView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIImageView*) imageView__\n{\n    UIImageView* re$ult = [super imageView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIImageView"
      ]
    },
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isHighlighted()": {
      "reverse": "- (BOOL) isHighlighted\n{\n    return [self isHighlighted__];\n}\n\n",
      "super": "- (BOOL) isHighlighted__\n{\n    return [super isHighlighted];\n}\n\n"
    },
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isSelected()": {
      "reverse": "- (BOOL) isSelected\n{\n    return [self isSelected__];\n}\n\n",
      "super": "- (BOOL) isSelected__\n{\n    return [super isSelected];\n}\n\n"
    },
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "prepareForReuse()": {
      "reverse": "- (void) prepareForReuse\n{\n    [self prepareForReuse__];\n}\n\n",
      "super": "- (void) prepareForReuse__\n{\n    [super prepareForReuse];\n}\n\n"
    },
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "reuseIdentifier()": {
      "reverse": "- (NSString *) reuseIdentifier\n{\n    NSString * re$ult = [self reuseIdentifier__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) reuseIdentifier__\n{\n    NSString* re$ult = [super reuseIdentifier];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "selectedBackgroundView()": {
      "reverse": "- (UIView *) selectedBackgroundView\n{\n    UIView * re$ult = [self selectedBackgroundView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) selectedBackgroundView__\n{\n    UIView* re$ult = [super selectedBackgroundView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "selectionStyle()": {
      "reverse": "- (UITableViewCellSelectionStyle) selectionStyle\n{\n    return [self selectionStyle__];\n}\n\n",
      "super": "- (int) selectionStyle__\n{\n    return [super selectionStyle];\n}\n\n"
    },
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAccessoryType(int)": {
      "reverse": "- (void) setAccessoryType:(UITableViewCellAccessoryType) accessoryType\n{\n    [self setAccessoryType___int:accessoryType];\n}\n\n",
      "super": "- (void) setAccessoryType___int:(int) accessoryType \n{\n    [super setAccessoryType:accessoryType];\n}\n\n"
    },
    "setAccessoryView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) setAccessoryView:(UIView *) accessoryView\n{\n    [self setAccessoryView___crossmobile_ios_uikit_UIView:(accessoryView ? accessoryView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setAccessoryView___crossmobile_ios_uikit_UIView:(UIView*) accessoryView \n{\n    [super setAccessoryView:(accessoryView == JAVA_NULL ? nil : accessoryView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBackgroundView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) setBackgroundView:(UIView *) backgroundView\n{\n    [self setBackgroundView___crossmobile_ios_uikit_UIView:(backgroundView ? backgroundView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setBackgroundView___crossmobile_ios_uikit_UIView:(UIView*) backgroundView \n{\n    [super setBackgroundView:(backgroundView == JAVA_NULL ? nil : backgroundView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHighlighted(boolean)": {
      "reverse": "- (void) setHighlighted:(BOOL) highlighted\n{\n    [self setHighlighted___boolean:highlighted];\n}\n\n",
      "super": "- (void) setHighlighted___boolean:(BOOL) highlighted \n{\n    [super setHighlighted:highlighted];\n}\n\n"
    },
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setSelected(boolean)": {
      "reverse": "- (void) setSelected:(BOOL) selected\n{\n    [self setSelected___boolean:selected];\n}\n\n",
      "super": "- (void) setSelected___boolean:(BOOL) selected \n{\n    [super setSelected:selected];\n}\n\n"
    },
    "setSelectedBackgroundView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) setSelectedBackgroundView:(UIView *) selectedBackgroundView\n{\n    [self setSelectedBackgroundView___crossmobile_ios_uikit_UIView:(selectedBackgroundView ? selectedBackgroundView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setSelectedBackgroundView___crossmobile_ios_uikit_UIView:(UIView*) selectedBackgroundView \n{\n    [super setSelectedBackgroundView:(selectedBackgroundView == JAVA_NULL ? nil : selectedBackgroundView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "setSelectionStyle(int)": {
      "reverse": "- (void) setSelectionStyle:(UITableViewCellSelectionStyle) selectionStyle\n{\n    [self setSelectionStyle___int:selectionStyle];\n}\n\n",
      "super": "- (void) setSelectionStyle___int:(int) selectionStyle \n{\n    [super setSelectionStyle:selectionStyle];\n}\n\n"
    },
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "textLabel()": {
      "reverse": "- (UILabel *) textLabel\n{\n    UILabel * re$ult = [self textLabel__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UILabel*) textLabel__\n{\n    UILabel* re$ult = [super textLabel];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UILabel"
      ]
    },
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UITableViewController": {
    "accessoryButtonTappedForRowWithIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *) indexPath\n{\n    [self accessoryButtonTappedForRowWithIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) accessoryButtonTappedForRowWithIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) accessoryButtonTappedForRowWithIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "addChildViewController(crossmobile.ios.uikit.UIViewController)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "additionalSafeAreaInsets()": null,
    "allowedChildViewControllersForUnwindingFromSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": null,
    "automaticallyAdjustsScrollViewInsets()": null,
    "becomeFirstResponder()": null,
    "beginAppearanceTransition(boolean,boolean)": null,
    "bottomLayoutGuide()": null,
    "canEditRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (BOOL) tableView:(UITableView *) tableView canEditRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    return [self canEditRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) canEditRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) canEditRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "canMoveRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (BOOL) tableView:(UITableView *) tableView canMoveRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    return [self canMoveRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) canMoveRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) canMoveRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "cellForRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (UITableViewCell *) tableView:(UITableView *) tableView cellForRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    UITableViewCell * re$ult = [self cellForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UITableViewCell*) cellForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    UITableViewCell* re$ult = [super tableView:(tableView == JAVA_NULL ? nil : tableView) cellForRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView",
        "crossmobile_ios_uikit_UITableViewCell"
      ]
    },
    "childViewControllerContainingSegueSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": null,
    "childViewControllerForStatusBarHidden()": null,
    "childViewControllerForStatusBarStyle()": null,
    "childViewControllers()": null,
    "commitEditingStyle(crossmobile.ios.uikit.UITableView,int,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView commitEditingStyle:(UITableViewCellEditingStyle) editingStyle forRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    [self commitEditingStyle___crossmobile_ios_uikit_UITableView_int_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :editingStyle :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) commitEditingStyle___crossmobile_ios_uikit_UITableView_int_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(int) editingStyle :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) commitEditingStyle:editingStyle forRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "contentSizeForViewInPopover()": null,
    "definesPresentationContext()": null,
    "didDeselectRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView didDeselectRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    [self didDeselectRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didDeselectRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) didDeselectRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "didEndEditingRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView didEndEditingRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    [self didEndEditingRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didEndEditingRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) didEndEditingRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "didReceiveMemoryWarning()": null,
    "didRotateFromInterfaceOrientation(int)": null,
    "didSelectRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView didSelectRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    [self didSelectRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didSelectRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) didSelectRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "disablesAutomaticKeyboardDismissal()": null,
    "dismissModalViewControllerAnimated(boolean)": null,
    "edgesForExtendedLayout()": null,
    "editButtonItem()": null,
    "editingStyleForRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (UITableViewCellEditingStyle) tableView:(UITableView *) tableView editingStyleForRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    return [self editingStyleForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (int) editingStyleForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) editingStyleForRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "endAppearanceTransition()": null,
    "extensionContext()": null,
    "heightForFooterInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (CGFloat) tableView:(UITableView *) tableView heightForFooterInSection:(NSInteger) section\n{\n    return [self heightForFooterInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n}\n\n",
      "super": "- (double) heightForFooterInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) heightForFooterInSection:section];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "heightForHeaderInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (CGFloat) tableView:(UITableView *) tableView heightForHeaderInSection:(NSInteger) section\n{\n    return [self heightForHeaderInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n}\n\n",
      "super": "- (double) heightForHeaderInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) heightForHeaderInSection:section];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "heightForRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (CGFloat) tableView:(UITableView *) tableView heightForRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    return [self heightForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (double) heightForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) heightForRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "hidesBottomBarWhenPushed()": null,
    "interfaceOrientation()": null,
    "isEditing()": null,
    "isFirstResponder()": null,
    "isModalInPopover()": null,
    "isViewLoaded()": null,
    "loadView()": null,
    "loadViewIfNeeded()": null,
    "modalPresentationStyle()": null,
    "modalTransitionStyle()": null,
    "moveRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView moveRowAtIndexPath:(NSIndexPath *) sourceIndexPath toIndexPath:(NSIndexPath *) destinationIndexPath\n{\n    [self moveRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(sourceIndexPath ? sourceIndexPath : JAVA_NULL) :(destinationIndexPath ? destinationIndexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) moveRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) sourceIndexPath :(NSIndexPath*) destinationIndexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) moveRowAtIndexPath:(sourceIndexPath == JAVA_NULL ? nil : sourceIndexPath) toIndexPath:(destinationIndexPath == JAVA_NULL ? nil : destinationIndexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "navigationController()": null,
    "navigationItem()": null,
    "nextResponder()": null,
    "nibName()": null,
    "numberOfRowsInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (NSInteger) tableView:(UITableView *) tableView numberOfRowsInSection:(NSInteger) section\n{\n    return [self numberOfRowsInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n}\n\n",
      "super": "- (int) numberOfRowsInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) numberOfRowsInSection:section];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "numberOfSectionsInTableView(crossmobile.ios.uikit.UITableView)": {
      "reverse": "- (NSInteger) numberOfSectionsInTableView:(UITableView *) tableView\n{\n    return [self numberOfSectionsInTableView___crossmobile_ios_uikit_UITableView:(tableView ? tableView : JAVA_NULL)];\n}\n\n",
      "super": "- (int) numberOfSectionsInTableView___crossmobile_ios_uikit_UITableView:(UITableView*) tableView \n{\n    return [super numberOfSectionsInTableView:(tableView == JAVA_NULL ? nil : tableView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "parentViewController()": null,
    "performSegueWithIdentifier(java.lang.String,java.lang.Object)": null,
    "preferredInterfaceOrientationForPresentation()": null,
    "preferredStatusBarStyle()": null,
    "prefersStatusBarHidden()": null,
    "prepareForSegue(crossmobile.ios.uikit.UIStoryboardSegue,java.lang.Object)": null,
    "presentModalViewController(crossmobile.ios.uikit.UIViewController,boolean)": null,
    "presentedViewController()": null,
    "presentingViewController()": null,
    "providesPresentationContextTransitionStyle()": null,
    "removeFromParentViewController()": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rotatingFooterView()": null,
    "rotatingHeaderView()": null,
    "setAdditionalSafeAreaInsets(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setAutomaticallyAdjustsScrollViewInsets(boolean)": null,
    "setContentSizeForViewInPopover(crossmobile.ios.coregraphics.CGSize)": null,
    "setDefinesPresentationContext(boolean)": null,
    "setEdgesForExtendedLayout(int)": null,
    "setEditing(boolean)": null,
    "setEditing(boolean,boolean)": null,
    "setHidesBottomBarWhenPushed(boolean)": null,
    "setModalInPopover(boolean)": null,
    "setModalPresentationStyle(int)": null,
    "setModalTransitionStyle(int)": null,
    "setNeedsStatusBarAppearanceUpdate()": null,
    "setProvidesPresentationContextTransitionStyle(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setTabBarItem(crossmobile.ios.uikit.UITabBarItem)": null,
    "setTableView(crossmobile.ios.uikit.UITableView)": {
      "reverse": "- (void) setTableView:(UITableView *) tableView\n{\n    [self setTableView___crossmobile_ios_uikit_UITableView:(tableView ? tableView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTableView___crossmobile_ios_uikit_UITableView:(UITableView*) tableView \n{\n    [super setTableView:(tableView == JAVA_NULL ? nil : tableView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "setTitle(java.lang.String)": null,
    "setToolbarItems(java.util.List)": null,
    "setToolbarItems(java.util.List,boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "setView(crossmobile.ios.uikit.UIView)": null,
    "setWantsFullScreenLayout(boolean)": null,
    "shouldAutomaticallyForwardAppearanceMethods()": null,
    "shouldAutorotate()": null,
    "shouldAutorotateToInterfaceOrientation(int)": null,
    "shouldIndentWhileEditingRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (BOOL) tableView:(UITableView *) tableView shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    return [self shouldIndentWhileEditingRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldIndentWhileEditingRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) shouldIndentWhileEditingRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "shouldPerformSegueWithIdentifier(java.lang.String,java.lang.Object)": null,
    "showDetailViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": null,
    "showViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": null,
    "splitViewController()": null,
    "storyboard()": null,
    "supportedInterfaceOrientations()": null,
    "tabBarController()": null,
    "tabBarItem()": null,
    "tableView()": {
      "reverse": "- (UITableView *) tableView\n{\n    UITableView * re$ult = [self tableView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UITableView*) tableView__\n{\n    UITableView* re$ult = [super tableView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "title()": null,
    "titleForDeleteConfirmationButtonForRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (NSString *) tableView:(UITableView *) tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    NSString * re$ult = [self titleForDeleteConfirmationButtonForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) titleForDeleteConfirmationButtonForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    NSString* re$ult = [super tableView:(tableView == JAVA_NULL ? nil : tableView) titleForDeleteConfirmationButtonForRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView",
        "java_lang_String"
      ]
    },
    "titleForFooterInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (NSString *) tableView:(UITableView *) tableView titleForFooterInSection:(NSInteger) section\n{\n    NSString * re$ult = [self titleForFooterInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) titleForFooterInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    NSString* re$ult = [super tableView:(tableView == JAVA_NULL ? nil : tableView) titleForFooterInSection:section];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView",
        "java_lang_String"
      ]
    },
    "titleForHeaderInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (NSString *) tableView:(UITableView *) tableView titleForHeaderInSection:(NSInteger) section\n{\n    NSString * re$ult = [self titleForHeaderInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) titleForHeaderInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    NSString* re$ult = [super tableView:(tableView == JAVA_NULL ? nil : tableView) titleForHeaderInSection:section];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView",
        "java_lang_String"
      ]
    },
    "toolbarItems()": null,
    "topLayoutGuide()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "view()": null,
    "viewDidAppear(boolean)": null,
    "viewDidDisappear(boolean)": null,
    "viewDidLayoutSubviews()": null,
    "viewDidLoad()": null,
    "viewDidUnload()": null,
    "viewForFooterInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (UIView *) tableView:(UITableView *) tableView viewForFooterInSection:(NSInteger) section\n{\n    UIView * re$ult = [self viewForFooterInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) viewForFooterInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    UIView* re$ult = [super tableView:(tableView == JAVA_NULL ? nil : tableView) viewForFooterInSection:section];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "viewForHeaderInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (UIView *) tableView:(UITableView *) tableView viewForHeaderInSection:(NSInteger) section\n{\n    UIView * re$ult = [self viewForHeaderInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) viewForHeaderInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    UIView* re$ult = [super tableView:(tableView == JAVA_NULL ? nil : tableView) viewForHeaderInSection:section];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "viewIfLoaded()": null,
    "viewSafeAreaInsetsDidChange()": null,
    "viewWillAppear(boolean)": null,
    "viewWillDisappear(boolean)": null,
    "viewWillLayoutSubviews()": null,
    "wantsFullScreenLayout()": null,
    "willAnimateRotationToInterfaceOrientation(int,double)": null,
    "willBeginEditingRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView willBeginEditingRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    [self willBeginEditingRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willBeginEditingRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) willBeginEditingRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "willDisplayCell(crossmobile.ios.uikit.UITableView,crossmobile.ios.uikit.UITableViewCell,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView willDisplayCell:(UITableViewCell *) cell forRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    [self willDisplayCell___crossmobile_ios_uikit_UITableView_crossmobile_ios_uikit_UITableViewCell_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(cell ? cell : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willDisplayCell___crossmobile_ios_uikit_UITableView_crossmobile_ios_uikit_UITableViewCell_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(UITableViewCell*) cell :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) willDisplayCell:(cell == JAVA_NULL ? nil : cell) forRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView",
        "crossmobile_ios_uikit_UITableViewCell"
      ]
    },
    "willRotateToInterfaceOrientation(int,double)": null
  },
  "crossmobile.ios.uikit.UITableViewDataSource": {
    "canEditRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (BOOL) tableView:(UITableView *) tableView canEditRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    return [self canEditRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) canEditRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) canEditRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "canMoveRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (BOOL) tableView:(UITableView *) tableView canMoveRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    return [self canMoveRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) canMoveRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) canMoveRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "cellForRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (UITableViewCell *) tableView:(UITableView *) tableView cellForRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    UITableViewCell * re$ult = [self cellForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UITableViewCell*) cellForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    UITableViewCell* re$ult = [super tableView:(tableView == JAVA_NULL ? nil : tableView) cellForRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView",
        "crossmobile_ios_uikit_UITableViewCell"
      ]
    },
    "commitEditingStyle(crossmobile.ios.uikit.UITableView,int,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView commitEditingStyle:(UITableViewCellEditingStyle) editingStyle forRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    [self commitEditingStyle___crossmobile_ios_uikit_UITableView_int_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :editingStyle :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) commitEditingStyle___crossmobile_ios_uikit_UITableView_int_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(int) editingStyle :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) commitEditingStyle:editingStyle forRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "moveRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView moveRowAtIndexPath:(NSIndexPath *) sourceIndexPath toIndexPath:(NSIndexPath *) destinationIndexPath\n{\n    [self moveRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(sourceIndexPath ? sourceIndexPath : JAVA_NULL) :(destinationIndexPath ? destinationIndexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) moveRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) sourceIndexPath :(NSIndexPath*) destinationIndexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) moveRowAtIndexPath:(sourceIndexPath == JAVA_NULL ? nil : sourceIndexPath) toIndexPath:(destinationIndexPath == JAVA_NULL ? nil : destinationIndexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "numberOfRowsInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (NSInteger) tableView:(UITableView *) tableView numberOfRowsInSection:(NSInteger) section\n{\n    return [self numberOfRowsInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n}\n\n",
      "super": "- (int) numberOfRowsInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) numberOfRowsInSection:section];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "numberOfSectionsInTableView(crossmobile.ios.uikit.UITableView)": {
      "reverse": "- (NSInteger) numberOfSectionsInTableView:(UITableView *) tableView\n{\n    return [self numberOfSectionsInTableView___crossmobile_ios_uikit_UITableView:(tableView ? tableView : JAVA_NULL)];\n}\n\n",
      "super": "- (int) numberOfSectionsInTableView___crossmobile_ios_uikit_UITableView:(UITableView*) tableView \n{\n    return [super numberOfSectionsInTableView:(tableView == JAVA_NULL ? nil : tableView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "titleForFooterInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (NSString *) tableView:(UITableView *) tableView titleForFooterInSection:(NSInteger) section\n{\n    NSString * re$ult = [self titleForFooterInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) titleForFooterInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    NSString* re$ult = [super tableView:(tableView == JAVA_NULL ? nil : tableView) titleForFooterInSection:section];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView",
        "java_lang_String"
      ]
    },
    "titleForHeaderInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (NSString *) tableView:(UITableView *) tableView titleForHeaderInSection:(NSInteger) section\n{\n    NSString * re$ult = [self titleForHeaderInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) titleForHeaderInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    NSString* re$ult = [super tableView:(tableView == JAVA_NULL ? nil : tableView) titleForHeaderInSection:section];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView",
        "java_lang_String"
      ]
    }
  },
  "crossmobile.ios.uikit.UITableViewDelegate": {
    "accessoryButtonTappedForRowWithIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *) indexPath\n{\n    [self accessoryButtonTappedForRowWithIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) accessoryButtonTappedForRowWithIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) accessoryButtonTappedForRowWithIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "didDeselectRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView didDeselectRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    [self didDeselectRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didDeselectRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) didDeselectRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "didEndEditingRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView didEndEditingRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    [self didEndEditingRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didEndEditingRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) didEndEditingRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "didSelectRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView didSelectRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    [self didSelectRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didSelectRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) didSelectRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "editingStyleForRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (UITableViewCellEditingStyle) tableView:(UITableView *) tableView editingStyleForRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    return [self editingStyleForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (int) editingStyleForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) editingStyleForRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "heightForFooterInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (CGFloat) tableView:(UITableView *) tableView heightForFooterInSection:(NSInteger) section\n{\n    return [self heightForFooterInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n}\n\n",
      "super": "- (double) heightForFooterInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) heightForFooterInSection:section];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "heightForHeaderInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (CGFloat) tableView:(UITableView *) tableView heightForHeaderInSection:(NSInteger) section\n{\n    return [self heightForHeaderInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n}\n\n",
      "super": "- (double) heightForHeaderInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) heightForHeaderInSection:section];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "heightForRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (CGFloat) tableView:(UITableView *) tableView heightForRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    return [self heightForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (double) heightForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) heightForRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "shouldIndentWhileEditingRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (BOOL) tableView:(UITableView *) tableView shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    return [self shouldIndentWhileEditingRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldIndentWhileEditingRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    return [super tableView:(tableView == JAVA_NULL ? nil : tableView) shouldIndentWhileEditingRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "titleForDeleteConfirmationButtonForRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (NSString *) tableView:(UITableView *) tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    NSString * re$ult = [self titleForDeleteConfirmationButtonForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) titleForDeleteConfirmationButtonForRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    NSString* re$ult = [super tableView:(tableView == JAVA_NULL ? nil : tableView) titleForDeleteConfirmationButtonForRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView",
        "java_lang_String"
      ]
    },
    "viewForFooterInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (UIView *) tableView:(UITableView *) tableView viewForFooterInSection:(NSInteger) section\n{\n    UIView * re$ult = [self viewForFooterInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) viewForFooterInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    UIView* re$ult = [super tableView:(tableView == JAVA_NULL ? nil : tableView) viewForFooterInSection:section];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "viewForHeaderInSection(crossmobile.ios.uikit.UITableView,int)": {
      "reverse": "- (UIView *) tableView:(UITableView *) tableView viewForHeaderInSection:(NSInteger) section\n{\n    UIView * re$ult = [self viewForHeaderInSection___crossmobile_ios_uikit_UITableView_int:(tableView ? tableView : JAVA_NULL) :section];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) viewForHeaderInSection___crossmobile_ios_uikit_UITableView_int:(UITableView*) tableView :(int) section \n{\n    UIView* re$ult = [super tableView:(tableView == JAVA_NULL ? nil : tableView) viewForHeaderInSection:section];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITableView",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "willBeginEditingRowAtIndexPath(crossmobile.ios.uikit.UITableView,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView willBeginEditingRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    [self willBeginEditingRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willBeginEditingRowAtIndexPath___crossmobile_ios_uikit_UITableView_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) willBeginEditingRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView"
      ]
    },
    "willDisplayCell(crossmobile.ios.uikit.UITableView,crossmobile.ios.uikit.UITableViewCell,crossmobile.ios.foundation.NSIndexPath)": {
      "reverse": "- (void) tableView:(UITableView *) tableView willDisplayCell:(UITableViewCell *) cell forRowAtIndexPath:(NSIndexPath *) indexPath\n{\n    [self willDisplayCell___crossmobile_ios_uikit_UITableView_crossmobile_ios_uikit_UITableViewCell_crossmobile_ios_foundation_NSIndexPath:(tableView ? tableView : JAVA_NULL) :(cell ? cell : JAVA_NULL) :(indexPath ? indexPath : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willDisplayCell___crossmobile_ios_uikit_UITableView_crossmobile_ios_uikit_UITableViewCell_crossmobile_ios_foundation_NSIndexPath:(UITableView*) tableView :(UITableViewCell*) cell :(NSIndexPath*) indexPath \n{\n    [super tableView:(tableView == JAVA_NULL ? nil : tableView) willDisplayCell:(cell == JAVA_NULL ? nil : cell) forRowAtIndexPath:(indexPath == JAVA_NULL ? nil : indexPath)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSIndexPath",
        "crossmobile_ios_uikit_UITableView",
        "crossmobile_ios_uikit_UITableViewCell"
      ]
    }
  },
  "crossmobile.ios.uikit.UITapGestureRecognizer": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addTarget(crossmobile.ios.foundation.NSSelector)": null,
    "canBePreventedByGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "canPreventGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "cancelsTouchesInView()": null,
    "delaysTouchesBegan()": null,
    "delaysTouchesEnded()": null,
    "delegate()": null,
    "isEnabled()": null,
    "locationInView(crossmobile.ios.uikit.UIView)": null,
    "locationOfTouch(int,crossmobile.ios.uikit.UIView)": null,
    "numberOfTapsRequired()": {
      "reverse": "- (NSUInteger) numberOfTapsRequired\n{\n    return [self numberOfTapsRequired__];\n}\n\n",
      "super": "- (int) numberOfTapsRequired__\n{\n    return [super numberOfTapsRequired];\n}\n\n"
    },
    "numberOfTouches()": null,
    "numberOfTouchesRequired()": {
      "reverse": "- (NSUInteger) numberOfTouchesRequired\n{\n    return [self numberOfTouchesRequired__];\n}\n\n",
      "super": "- (int) numberOfTouchesRequired__\n{\n    return [super numberOfTouchesRequired];\n}\n\n"
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.foundation.NSSelector)": null,
    "requireGestureRecognizerToFail(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "reset()": null,
    "setCancelsTouchesInView(boolean)": null,
    "setDelaysTouchesBegan(boolean)": null,
    "setDelaysTouchesEnded(boolean)": null,
    "setDelegate(crossmobile.ios.uikit.UIGestureRecognizerDelegate)": null,
    "setEnabled(boolean)": null,
    "setNumberOfTapsRequired(int)": {
      "reverse": "- (void) setNumberOfTapsRequired:(NSUInteger) numberOfTapsRequired\n{\n    [self setNumberOfTapsRequired___int:numberOfTapsRequired];\n}\n\n",
      "super": "- (void) setNumberOfTapsRequired___int:(int) numberOfTapsRequired \n{\n    [super setNumberOfTapsRequired:numberOfTapsRequired];\n}\n\n"
    },
    "setNumberOfTouchesRequired(int)": {
      "reverse": "- (void) setNumberOfTouchesRequired:(NSUInteger) numberOfTouchesRequired\n{\n    [self setNumberOfTouchesRequired___int:numberOfTouchesRequired];\n}\n\n",
      "super": "- (void) setNumberOfTouchesRequired___int:(int) numberOfTouchesRequired \n{\n    [super setNumberOfTouchesRequired:numberOfTouchesRequired];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "state()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "view()": null
  },
  "crossmobile.ios.uikit.UITextField": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "addTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "adjustsFontSizeToFitWidth()": {
      "reverse": "- (BOOL) adjustsFontSizeToFitWidth\n{\n    return [self adjustsFontSizeToFitWidth__];\n}\n\n",
      "super": "- (BOOL) adjustsFontSizeToFitWidth__\n{\n    return [super adjustsFontSizeToFitWidth];\n}\n\n"
    },
    "allTargets()": null,
    "alpha()": null,
    "autocapitalizationType()": {
      "reverse": "- (UITextAutocapitalizationType) autocapitalizationType\n{\n    return [self autocapitalizationType__];\n}\n\n",
      "super": "- (int) autocapitalizationType__\n{\n    return [super autocapitalizationType];\n}\n\n"
    },
    "autocorrectionType()": {
      "reverse": "- (UITextAutocorrectionType) autocorrectionType\n{\n    return [self autocorrectionType__];\n}\n\n",
      "super": "- (int) autocorrectionType__\n{\n    return [super autocorrectionType];\n}\n\n"
    },
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "borderStyle()": {
      "reverse": "- (UITextBorderStyle) borderStyle\n{\n    return [self borderStyle__];\n}\n\n",
      "super": "- (int) borderStyle__\n{\n    return [super borderStyle];\n}\n\n"
    },
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHorizontalAlignment()": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "contentVerticalAlignment()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "delegate()": {
      "reverse": "- (id<UITextFieldDelegate>) delegate\n{\n    id<UITextFieldDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UITextFieldDelegate>) delegate__\n{\n    id<UITextFieldDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextFieldDelegate"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "enablesReturnKeyAutomatically()": {
      "reverse": "- (BOOL) enablesReturnKeyAutomatically\n{\n    return [self enablesReturnKeyAutomatically__];\n}\n\n",
      "super": "- (BOOL) enablesReturnKeyAutomatically__\n{\n    return [super enablesReturnKeyAutomatically];\n}\n\n"
    },
    "font()": {
      "reverse": "- (UIFont *) font\n{\n    UIFont * re$ult = [self font__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIFont*) font__\n{\n    UIFont* re$ult = [super font];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIFont"
      ]
    },
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isEnabled()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isHighlighted()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isSecureTextEntry()": {
      "reverse": "- (BOOL) isSecureTextEntry\n{\n    return [self isSecureTextEntry__];\n}\n\n",
      "super": "- (BOOL) isSecureTextEntry__\n{\n    return [super isSecureTextEntry];\n}\n\n"
    },
    "isSelected()": null,
    "isUserInteractionEnabled()": null,
    "keyboardAppearance()": {
      "reverse": "- (UIKeyboardAppearance) keyboardAppearance\n{\n    return [self keyboardAppearance__];\n}\n\n",
      "super": "- (int) keyboardAppearance__\n{\n    return [super keyboardAppearance];\n}\n\n"
    },
    "keyboardType()": {
      "reverse": "- (UIKeyboardType) keyboardType\n{\n    return [self keyboardType__];\n}\n\n",
      "super": "- (int) keyboardType__\n{\n    return [super keyboardType];\n}\n\n"
    },
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "placeholder()": {
      "reverse": "- (NSString *) placeholder\n{\n    NSString * re$ult = [self placeholder__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) placeholder__\n{\n    NSString* re$ult = [super placeholder];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "removeTarget(crossmobile.ios.uikit.UIControlDelegate,int)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "returnKeyType()": {
      "reverse": "- (UIReturnKeyType) returnKeyType\n{\n    return [self returnKeyType__];\n}\n\n",
      "super": "- (int) returnKeyType__\n{\n    return [super returnKeyType];\n}\n\n"
    },
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendActionsForControlEvents(int)": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAdjustsFontSizeToFitWidth(boolean)": {
      "reverse": "- (void) setAdjustsFontSizeToFitWidth:(BOOL) adjustsFontSizeToFitWidth\n{\n    [self setAdjustsFontSizeToFitWidth___boolean:adjustsFontSizeToFitWidth];\n}\n\n",
      "super": "- (void) setAdjustsFontSizeToFitWidth___boolean:(BOOL) adjustsFontSizeToFitWidth \n{\n    [super setAdjustsFontSizeToFitWidth:adjustsFontSizeToFitWidth];\n}\n\n"
    },
    "setAlpha(double)": null,
    "setAutocapitalizationType(int)": {
      "reverse": "- (void) setAutocapitalizationType:(UITextAutocapitalizationType) autocapitalizationType\n{\n    [self setAutocapitalizationType___int:autocapitalizationType];\n}\n\n",
      "super": "- (void) setAutocapitalizationType___int:(int) autocapitalizationType \n{\n    [super setAutocapitalizationType:autocapitalizationType];\n}\n\n"
    },
    "setAutocorrectionType(int)": {
      "reverse": "- (void) setAutocorrectionType:(UITextAutocorrectionType) autocorrectionType\n{\n    [self setAutocorrectionType___int:autocorrectionType];\n}\n\n",
      "super": "- (void) setAutocorrectionType___int:(int) autocorrectionType \n{\n    [super setAutocorrectionType:autocorrectionType];\n}\n\n"
    },
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBorderStyle(int)": {
      "reverse": "- (void) setBorderStyle:(UITextBorderStyle) borderStyle\n{\n    [self setBorderStyle___int:borderStyle];\n}\n\n",
      "super": "- (void) setBorderStyle___int:(int) borderStyle \n{\n    [super setBorderStyle:borderStyle];\n}\n\n"
    },
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHorizontalAlignment(int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setContentVerticalAlignment(int)": null,
    "setDelegate(crossmobile.ios.uikit.UITextFieldDelegate)": {
      "reverse": "- (void) setDelegate:(id<UITextFieldDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UITextFieldDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UITextFieldDelegate:(id<UITextFieldDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextFieldDelegate"
      ]
    },
    "setEnabled(boolean)": null,
    "setEnablesReturnKeyAutomatically(boolean)": {
      "reverse": "- (void) setEnablesReturnKeyAutomatically:(BOOL) enablesReturnKeyAutomatically\n{\n    [self setEnablesReturnKeyAutomatically___boolean:enablesReturnKeyAutomatically];\n}\n\n",
      "super": "- (void) setEnablesReturnKeyAutomatically___boolean:(BOOL) enablesReturnKeyAutomatically \n{\n    [super setEnablesReturnKeyAutomatically:enablesReturnKeyAutomatically];\n}\n\n"
    },
    "setFont(crossmobile.ios.uikit.UIFont)": {
      "reverse": "- (void) setFont:(UIFont *) font\n{\n    [self setFont___crossmobile_ios_uikit_UIFont:(font ? font : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setFont___crossmobile_ios_uikit_UIFont:(UIFont*) font \n{\n    [super setFont:(font == JAVA_NULL ? nil : font)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIFont"
      ]
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setHighlighted(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setKeyboardAppearance(int)": {
      "reverse": "- (void) setKeyboardAppearance:(UIKeyboardAppearance) keyboardAppearance\n{\n    [self setKeyboardAppearance___int:keyboardAppearance];\n}\n\n",
      "super": "- (void) setKeyboardAppearance___int:(int) keyboardAppearance \n{\n    [super setKeyboardAppearance:keyboardAppearance];\n}\n\n"
    },
    "setKeyboardType(int)": {
      "reverse": "- (void) setKeyboardType:(UIKeyboardType) keyboardType\n{\n    [self setKeyboardType___int:keyboardType];\n}\n\n",
      "super": "- (void) setKeyboardType___int:(int) keyboardType \n{\n    [super setKeyboardType:keyboardType];\n}\n\n"
    },
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPlaceholder(java.lang.String)": {
      "reverse": "- (void) setPlaceholder:(NSString *) placeholder\n{\n    [self setPlaceholder___java_lang_String:(placeholder ? placeholder : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setPlaceholder___java_lang_String:(NSString*) placeholder \n{\n    [super setPlaceholder:(placeholder == JAVA_NULL ? nil : placeholder)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setReturnKeyType(int)": {
      "reverse": "- (void) setReturnKeyType:(UIReturnKeyType) returnKeyType\n{\n    [self setReturnKeyType___int:returnKeyType];\n}\n\n",
      "super": "- (void) setReturnKeyType___int:(int) returnKeyType \n{\n    [super setReturnKeyType:returnKeyType];\n}\n\n"
    },
    "setSecureTextEntry(boolean)": {
      "reverse": "- (void) setSecureTextEntry:(BOOL) secureTextEntry\n{\n    [self setSecureTextEntry___boolean:secureTextEntry];\n}\n\n",
      "super": "- (void) setSecureTextEntry___boolean:(BOOL) secureTextEntry \n{\n    [super setSecureTextEntry:secureTextEntry];\n}\n\n"
    },
    "setSelected(boolean)": null,
    "setSmartDashesType(int)": {
      "reverse": "- (void) setSmartDashesType:(UITextSmartDashesType) smartDashesType\n{\n    [self setSmartDashesType___int:smartDashesType];\n}\n\n",
      "super": "- (void) setSmartDashesType___int:(int) smartDashesType \n{\n    [super setSmartDashesType:smartDashesType];\n}\n\n"
    },
    "setSmartInsertDeleteType(int)": {
      "reverse": "- (void) setSmartInsertDeleteType:(UITextSmartInsertDeleteType) smartInsertDeleteType\n{\n    [self setSmartInsertDeleteType___int:smartInsertDeleteType];\n}\n\n",
      "super": "- (void) setSmartInsertDeleteType___int:(int) smartInsertDeleteType \n{\n    [super setSmartInsertDeleteType:smartInsertDeleteType];\n}\n\n"
    },
    "setSmartQuotesType(int)": {
      "reverse": "- (void) setSmartQuotesType:(UITextSmartQuotesType) smartQuotesType\n{\n    [self setSmartQuotesType___int:smartQuotesType];\n}\n\n",
      "super": "- (void) setSmartQuotesType___int:(int) smartQuotesType \n{\n    [super setSmartQuotesType:smartQuotesType];\n}\n\n"
    },
    "setSpellCheckingType(int)": {
      "reverse": "- (void) setSpellCheckingType:(UITextSpellCheckingType) spellCheckingType\n{\n    [self setSpellCheckingType___int:spellCheckingType];\n}\n\n",
      "super": "- (void) setSpellCheckingType___int:(int) spellCheckingType \n{\n    [super setSpellCheckingType:spellCheckingType];\n}\n\n"
    },
    "setTag(int)": null,
    "setText(java.lang.String)": {
      "reverse": "- (void) setText:(NSString *) text\n{\n    [self setText___java_lang_String:(text ? text : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setText___java_lang_String:(NSString*) text \n{\n    [super setText:(text == JAVA_NULL ? nil : text)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTextAlignment(int)": {
      "reverse": "- (void) setTextAlignment:(NSTextAlignment) textAlignment\n{\n    [self setTextAlignment___int:textAlignment];\n}\n\n",
      "super": "- (void) setTextAlignment___int:(int) textAlignment \n{\n    [super setTextAlignment:textAlignment];\n}\n\n"
    },
    "setTextColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setTextColor:(UIColor *) textColor\n{\n    [self setTextColor___crossmobile_ios_uikit_UIColor:(textColor ? textColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTextColor___crossmobile_ios_uikit_UIColor:(UIColor*) textColor \n{\n    [super setTextColor:(textColor == JAVA_NULL ? nil : textColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setTextContentType(java.lang.String)": {
      "reverse": "- (void) setTextContentType:(UITextContentType) textContentType\n{\n    [self setTextContentType___java_lang_String:(textContentType ? textContentType : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTextContentType___java_lang_String:(NSString*) textContentType \n{\n    [super setTextContentType:(textContentType == JAVA_NULL ? nil : textContentType)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "smartDashesType()": {
      "reverse": "- (UITextSmartDashesType) smartDashesType\n{\n    return [self smartDashesType__];\n}\n\n",
      "super": "- (int) smartDashesType__\n{\n    return [super smartDashesType];\n}\n\n"
    },
    "smartInsertDeleteType()": {
      "reverse": "- (UITextSmartInsertDeleteType) smartInsertDeleteType\n{\n    return [self smartInsertDeleteType__];\n}\n\n",
      "super": "- (int) smartInsertDeleteType__\n{\n    return [super smartInsertDeleteType];\n}\n\n"
    },
    "smartQuotesType()": {
      "reverse": "- (UITextSmartQuotesType) smartQuotesType\n{\n    return [self smartQuotesType__];\n}\n\n",
      "super": "- (int) smartQuotesType__\n{\n    return [super smartQuotesType];\n}\n\n"
    },
    "spellCheckingType()": {
      "reverse": "- (UITextSpellCheckingType) spellCheckingType\n{\n    return [self spellCheckingType__];\n}\n\n",
      "super": "- (int) spellCheckingType__\n{\n    return [super spellCheckingType];\n}\n\n"
    },
    "state()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "text()": {
      "reverse": "- (NSString *) text\n{\n    NSString * re$ult = [self text__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) text__\n{\n    NSString* re$ult = [super text];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "textAlignment()": {
      "reverse": "- (NSTextAlignment) textAlignment\n{\n    return [self textAlignment__];\n}\n\n",
      "super": "- (int) textAlignment__\n{\n    return [super textAlignment];\n}\n\n"
    },
    "textColor()": {
      "reverse": "- (UIColor *) textColor\n{\n    UIColor * re$ult = [self textColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) textColor__\n{\n    UIColor* re$ult = [super textColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "textContentType()": {
      "reverse": "- (UITextContentType) textContentType\n{\n    UITextContentType re$ult = [self textContentType__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) textContentType__\n{\n    NSString* re$ult = [super textContentType];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UITextFieldDelegate": {
    "didBeginEditing(crossmobile.ios.uikit.UITextField)": {
      "reverse": "- (void) textFieldDidBeginEditing:(UITextField *) textField\n{\n    [self didBeginEditing___crossmobile_ios_uikit_UITextField:(textField ? textField : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didBeginEditing___crossmobile_ios_uikit_UITextField:(UITextField*) textField \n{\n    [super textFieldDidBeginEditing:(textField == JAVA_NULL ? nil : textField)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextField"
      ]
    },
    "didEndEditing(crossmobile.ios.uikit.UITextField)": {
      "reverse": "- (void) textFieldDidEndEditing:(UITextField *) textField\n{\n    [self didEndEditing___crossmobile_ios_uikit_UITextField:(textField ? textField : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didEndEditing___crossmobile_ios_uikit_UITextField:(UITextField*) textField \n{\n    [super textFieldDidEndEditing:(textField == JAVA_NULL ? nil : textField)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextField"
      ]
    },
    "shouldBeginEditing(crossmobile.ios.uikit.UITextField)": {
      "reverse": "- (BOOL) textFieldShouldBeginEditing:(UITextField *) textField\n{\n    return [self shouldBeginEditing___crossmobile_ios_uikit_UITextField:(textField ? textField : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldBeginEditing___crossmobile_ios_uikit_UITextField:(UITextField*) textField \n{\n    return [super textFieldShouldBeginEditing:(textField == JAVA_NULL ? nil : textField)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextField"
      ]
    },
    "shouldChangeCharactersInRange(crossmobile.ios.uikit.UITextField,crossmobile.ios.foundation.NSRange,java.lang.String)": {
      "reverse": "- (BOOL) textField:(UITextField *) textField shouldChangeCharactersInRange:(NSRange) range replacementString:(NSString *) string\n{\n    crossmobile_ios_foundation_NSRange* range$conv = [[crossmobile_ios_foundation_NSRange alloc] initWithNSRange:range];\n    BOOL re$ult = [self shouldChangeCharactersInRange___crossmobile_ios_uikit_UITextField_crossmobile_ios_foundation_NSRange_java_lang_String:(textField ? textField : JAVA_NULL) :range$conv :(string ? string : JAVA_NULL)];\n    [range$conv release];\n    return re$ult;\n}\n\n",
      "super": "- (BOOL) shouldChangeCharactersInRange___crossmobile_ios_uikit_UITextField_crossmobile_ios_foundation_NSRange_java_lang_String:(UITextField*) textField :(crossmobile_ios_foundation_NSRange*) range :(NSString*) string \n{\n    return [super textField:(textField == JAVA_NULL ? nil : textField) shouldChangeCharactersInRange:[range getNSRange] replacementString:(string == JAVA_NULL ? nil : string)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSRange",
        "crossmobile_ios_uikit_UITextField",
        "java_lang_String"
      ]
    },
    "shouldClear(crossmobile.ios.uikit.UITextField)": {
      "reverse": "- (BOOL) textFieldShouldClear:(UITextField *) textField\n{\n    return [self shouldClear___crossmobile_ios_uikit_UITextField:(textField ? textField : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldClear___crossmobile_ios_uikit_UITextField:(UITextField*) textField \n{\n    return [super textFieldShouldClear:(textField == JAVA_NULL ? nil : textField)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextField"
      ]
    },
    "shouldEndEditing(crossmobile.ios.uikit.UITextField)": {
      "reverse": "- (BOOL) textFieldShouldEndEditing:(UITextField *) textField\n{\n    return [self shouldEndEditing___crossmobile_ios_uikit_UITextField:(textField ? textField : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldEndEditing___crossmobile_ios_uikit_UITextField:(UITextField*) textField \n{\n    return [super textFieldShouldEndEditing:(textField == JAVA_NULL ? nil : textField)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextField"
      ]
    },
    "shouldReturn(crossmobile.ios.uikit.UITextField)": {
      "reverse": "- (BOOL) textFieldShouldReturn:(UITextField *) textField\n{\n    return [self shouldReturn___crossmobile_ios_uikit_UITextField:(textField ? textField : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldReturn___crossmobile_ios_uikit_UITextField:(UITextField*) textField \n{\n    return [super textFieldShouldReturn:(textField == JAVA_NULL ? nil : textField)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextField"
      ]
    }
  },
  "crossmobile.ios.uikit.UITextInputTraits": {
    "autocapitalizationType()": {
      "reverse": "- (UITextAutocapitalizationType) autocapitalizationType\n{\n    return [self autocapitalizationType__];\n}\n\n",
      "super": "- (int) autocapitalizationType__\n{\n    return [super autocapitalizationType];\n}\n\n"
    },
    "autocorrectionType()": {
      "reverse": "- (UITextAutocorrectionType) autocorrectionType\n{\n    return [self autocorrectionType__];\n}\n\n",
      "super": "- (int) autocorrectionType__\n{\n    return [super autocorrectionType];\n}\n\n"
    },
    "enablesReturnKeyAutomatically()": {
      "reverse": "- (BOOL) enablesReturnKeyAutomatically\n{\n    return [self enablesReturnKeyAutomatically__];\n}\n\n",
      "super": "- (BOOL) enablesReturnKeyAutomatically__\n{\n    return [super enablesReturnKeyAutomatically];\n}\n\n"
    },
    "isSecureTextEntry()": {
      "reverse": "- (BOOL) isSecureTextEntry\n{\n    return [self isSecureTextEntry__];\n}\n\n",
      "super": "- (BOOL) isSecureTextEntry__\n{\n    return [super isSecureTextEntry];\n}\n\n"
    },
    "keyboardAppearance()": {
      "reverse": "- (UIKeyboardAppearance) keyboardAppearance\n{\n    return [self keyboardAppearance__];\n}\n\n",
      "super": "- (int) keyboardAppearance__\n{\n    return [super keyboardAppearance];\n}\n\n"
    },
    "keyboardType()": {
      "reverse": "- (UIKeyboardType) keyboardType\n{\n    return [self keyboardType__];\n}\n\n",
      "super": "- (int) keyboardType__\n{\n    return [super keyboardType];\n}\n\n"
    },
    "returnKeyType()": {
      "reverse": "- (UIReturnKeyType) returnKeyType\n{\n    return [self returnKeyType__];\n}\n\n",
      "super": "- (int) returnKeyType__\n{\n    return [super returnKeyType];\n}\n\n"
    },
    "setAutocapitalizationType(int)": {
      "reverse": "- (void) setAutocapitalizationType:(UITextAutocapitalizationType) autocapitalizationType\n{\n    [self setAutocapitalizationType___int:autocapitalizationType];\n}\n\n",
      "super": "- (void) setAutocapitalizationType___int:(int) autocapitalizationType \n{\n    [super setAutocapitalizationType:autocapitalizationType];\n}\n\n"
    },
    "setAutocorrectionType(int)": {
      "reverse": "- (void) setAutocorrectionType:(UITextAutocorrectionType) autocorrectionType\n{\n    [self setAutocorrectionType___int:autocorrectionType];\n}\n\n",
      "super": "- (void) setAutocorrectionType___int:(int) autocorrectionType \n{\n    [super setAutocorrectionType:autocorrectionType];\n}\n\n"
    },
    "setEnablesReturnKeyAutomatically(boolean)": {
      "reverse": "- (void) setEnablesReturnKeyAutomatically:(BOOL) enablesReturnKeyAutomatically\n{\n    [self setEnablesReturnKeyAutomatically___boolean:enablesReturnKeyAutomatically];\n}\n\n",
      "super": "- (void) setEnablesReturnKeyAutomatically___boolean:(BOOL) enablesReturnKeyAutomatically \n{\n    [super setEnablesReturnKeyAutomatically:enablesReturnKeyAutomatically];\n}\n\n"
    },
    "setKeyboardAppearance(int)": {
      "reverse": "- (void) setKeyboardAppearance:(UIKeyboardAppearance) keyboardAppearance\n{\n    [self setKeyboardAppearance___int:keyboardAppearance];\n}\n\n",
      "super": "- (void) setKeyboardAppearance___int:(int) keyboardAppearance \n{\n    [super setKeyboardAppearance:keyboardAppearance];\n}\n\n"
    },
    "setKeyboardType(int)": {
      "reverse": "- (void) setKeyboardType:(UIKeyboardType) keyboardType\n{\n    [self setKeyboardType___int:keyboardType];\n}\n\n",
      "super": "- (void) setKeyboardType___int:(int) keyboardType \n{\n    [super setKeyboardType:keyboardType];\n}\n\n"
    },
    "setReturnKeyType(int)": {
      "reverse": "- (void) setReturnKeyType:(UIReturnKeyType) returnKeyType\n{\n    [self setReturnKeyType___int:returnKeyType];\n}\n\n",
      "super": "- (void) setReturnKeyType___int:(int) returnKeyType \n{\n    [super setReturnKeyType:returnKeyType];\n}\n\n"
    },
    "setSecureTextEntry(boolean)": {
      "reverse": "- (void) setSecureTextEntry:(BOOL) secureTextEntry\n{\n    [self setSecureTextEntry___boolean:secureTextEntry];\n}\n\n",
      "super": "- (void) setSecureTextEntry___boolean:(BOOL) secureTextEntry \n{\n    [super setSecureTextEntry:secureTextEntry];\n}\n\n"
    },
    "setSmartDashesType(int)": {
      "reverse": "- (void) setSmartDashesType:(UITextSmartDashesType) smartDashesType\n{\n    [self setSmartDashesType___int:smartDashesType];\n}\n\n",
      "super": "- (void) setSmartDashesType___int:(int) smartDashesType \n{\n    [super setSmartDashesType:smartDashesType];\n}\n\n"
    },
    "setSmartInsertDeleteType(int)": {
      "reverse": "- (void) setSmartInsertDeleteType:(UITextSmartInsertDeleteType) smartInsertDeleteType\n{\n    [self setSmartInsertDeleteType___int:smartInsertDeleteType];\n}\n\n",
      "super": "- (void) setSmartInsertDeleteType___int:(int) smartInsertDeleteType \n{\n    [super setSmartInsertDeleteType:smartInsertDeleteType];\n}\n\n"
    },
    "setSmartQuotesType(int)": {
      "reverse": "- (void) setSmartQuotesType:(UITextSmartQuotesType) smartQuotesType\n{\n    [self setSmartQuotesType___int:smartQuotesType];\n}\n\n",
      "super": "- (void) setSmartQuotesType___int:(int) smartQuotesType \n{\n    [super setSmartQuotesType:smartQuotesType];\n}\n\n"
    },
    "setSpellCheckingType(int)": {
      "reverse": "- (void) setSpellCheckingType:(UITextSpellCheckingType) spellCheckingType\n{\n    [self setSpellCheckingType___int:spellCheckingType];\n}\n\n",
      "super": "- (void) setSpellCheckingType___int:(int) spellCheckingType \n{\n    [super setSpellCheckingType:spellCheckingType];\n}\n\n"
    },
    "setTextContentType(java.lang.String)": {
      "reverse": "- (void) setTextContentType:(UITextContentType) textContentType\n{\n    [self setTextContentType___java_lang_String:(textContentType ? textContentType : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTextContentType___java_lang_String:(NSString*) textContentType \n{\n    [super setTextContentType:(textContentType == JAVA_NULL ? nil : textContentType)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "smartDashesType()": {
      "reverse": "- (UITextSmartDashesType) smartDashesType\n{\n    return [self smartDashesType__];\n}\n\n",
      "super": "- (int) smartDashesType__\n{\n    return [super smartDashesType];\n}\n\n"
    },
    "smartInsertDeleteType()": {
      "reverse": "- (UITextSmartInsertDeleteType) smartInsertDeleteType\n{\n    return [self smartInsertDeleteType__];\n}\n\n",
      "super": "- (int) smartInsertDeleteType__\n{\n    return [super smartInsertDeleteType];\n}\n\n"
    },
    "smartQuotesType()": {
      "reverse": "- (UITextSmartQuotesType) smartQuotesType\n{\n    return [self smartQuotesType__];\n}\n\n",
      "super": "- (int) smartQuotesType__\n{\n    return [super smartQuotesType];\n}\n\n"
    },
    "spellCheckingType()": {
      "reverse": "- (UITextSpellCheckingType) spellCheckingType\n{\n    return [self spellCheckingType__];\n}\n\n",
      "super": "- (int) spellCheckingType__\n{\n    return [super spellCheckingType];\n}\n\n"
    },
    "textContentType()": {
      "reverse": "- (UITextContentType) textContentType\n{\n    UITextContentType re$ult = [self textContentType__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) textContentType__\n{\n    NSString* re$ult = [super textContentType];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    }
  },
  "crossmobile.ios.uikit.UITextView": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "autocapitalizationType()": {
      "reverse": "- (UITextAutocapitalizationType) autocapitalizationType\n{\n    return [self autocapitalizationType__];\n}\n\n",
      "super": "- (int) autocapitalizationType__\n{\n    return [super autocapitalizationType];\n}\n\n"
    },
    "autocorrectionType()": {
      "reverse": "- (UITextAutocorrectionType) autocorrectionType\n{\n    return [self autocorrectionType__];\n}\n\n",
      "super": "- (int) autocorrectionType__\n{\n    return [super autocorrectionType];\n}\n\n"
    },
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "dataDetectorTypes()": {
      "reverse": "- (UIDataDetectorTypes) dataDetectorTypes\n{\n    return [self dataDetectorTypes__];\n}\n\n",
      "super": "- (JAVA_LONG) dataDetectorTypes__\n{\n    return [super dataDetectorTypes];\n}\n\n"
    },
    "delegate()": {
      "reverse": "- (id<UITextViewDelegate>) delegate\n{\n    id<UITextViewDelegate> re$ult = [self delegate__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UITextViewDelegate>) delegate__\n{\n    id<UITextViewDelegate> re$ult = [super delegate];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextViewDelegate"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "enablesReturnKeyAutomatically()": {
      "reverse": "- (BOOL) enablesReturnKeyAutomatically\n{\n    return [self enablesReturnKeyAutomatically__];\n}\n\n",
      "super": "- (BOOL) enablesReturnKeyAutomatically__\n{\n    return [super enablesReturnKeyAutomatically];\n}\n\n"
    },
    "font()": {
      "reverse": "- (UIFont *) font\n{\n    UIFont * re$ult = [self font__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIFont*) font__\n{\n    UIFont* re$ult = [super font];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIFont"
      ]
    },
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isEditable()": {
      "reverse": "- (BOOL) isEditable\n{\n    return [self isEditable__];\n}\n\n",
      "super": "- (BOOL) isEditable__\n{\n    return [super isEditable];\n}\n\n"
    },
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isSecureTextEntry()": {
      "reverse": "- (BOOL) isSecureTextEntry\n{\n    return [self isSecureTextEntry__];\n}\n\n",
      "super": "- (BOOL) isSecureTextEntry__\n{\n    return [super isSecureTextEntry];\n}\n\n"
    },
    "isUserInteractionEnabled()": null,
    "keyboardAppearance()": {
      "reverse": "- (UIKeyboardAppearance) keyboardAppearance\n{\n    return [self keyboardAppearance__];\n}\n\n",
      "super": "- (int) keyboardAppearance__\n{\n    return [super keyboardAppearance];\n}\n\n"
    },
    "keyboardType()": {
      "reverse": "- (UIKeyboardType) keyboardType\n{\n    return [self keyboardType__];\n}\n\n",
      "super": "- (int) keyboardType__\n{\n    return [super keyboardType];\n}\n\n"
    },
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "returnKeyType()": {
      "reverse": "- (UIReturnKeyType) returnKeyType\n{\n    return [self returnKeyType__];\n}\n\n",
      "super": "- (int) returnKeyType__\n{\n    return [super returnKeyType];\n}\n\n"
    },
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutocapitalizationType(int)": {
      "reverse": "- (void) setAutocapitalizationType:(UITextAutocapitalizationType) autocapitalizationType\n{\n    [self setAutocapitalizationType___int:autocapitalizationType];\n}\n\n",
      "super": "- (void) setAutocapitalizationType___int:(int) autocapitalizationType \n{\n    [super setAutocapitalizationType:autocapitalizationType];\n}\n\n"
    },
    "setAutocorrectionType(int)": {
      "reverse": "- (void) setAutocorrectionType:(UITextAutocorrectionType) autocorrectionType\n{\n    [self setAutocorrectionType___int:autocorrectionType];\n}\n\n",
      "super": "- (void) setAutocorrectionType___int:(int) autocorrectionType \n{\n    [super setAutocorrectionType:autocorrectionType];\n}\n\n"
    },
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setDataDetectorTypes(long)": {
      "reverse": "- (void) setDataDetectorTypes:(UIDataDetectorTypes) dataDetectorTypes\n{\n    [self setDataDetectorTypes___long:dataDetectorTypes];\n}\n\n",
      "super": "- (void) setDataDetectorTypes___long:(JAVA_LONG) dataDetectorTypes \n{\n    [super setDataDetectorTypes:dataDetectorTypes];\n}\n\n"
    },
    "setDelegate(crossmobile.ios.uikit.UITextViewDelegate)": {
      "reverse": "- (void) setDelegate:(id<UITextViewDelegate>) delegate\n{\n    [self setDelegate___crossmobile_ios_uikit_UITextViewDelegate:(delegate ? delegate : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setDelegate___crossmobile_ios_uikit_UITextViewDelegate:(id<UITextViewDelegate>) delegate \n{\n    objc_setAssociatedObject(self, @selector(setDelegate:), delegate, OBJC_ASSOCIATION_RETAIN_NONATOMIC);\n    [super setDelegate:(delegate == JAVA_NULL ? nil : delegate)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextViewDelegate"
      ]
    },
    "setEditable(boolean)": {
      "reverse": "- (void) setEditable:(BOOL) editable\n{\n    [self setEditable___boolean:editable];\n}\n\n",
      "super": "- (void) setEditable___boolean:(BOOL) editable \n{\n    [super setEditable:editable];\n}\n\n"
    },
    "setEnablesReturnKeyAutomatically(boolean)": {
      "reverse": "- (void) setEnablesReturnKeyAutomatically:(BOOL) enablesReturnKeyAutomatically\n{\n    [self setEnablesReturnKeyAutomatically___boolean:enablesReturnKeyAutomatically];\n}\n\n",
      "super": "- (void) setEnablesReturnKeyAutomatically___boolean:(BOOL) enablesReturnKeyAutomatically \n{\n    [super setEnablesReturnKeyAutomatically:enablesReturnKeyAutomatically];\n}\n\n"
    },
    "setFont(crossmobile.ios.uikit.UIFont)": {
      "reverse": "- (void) setFont:(UIFont *) font\n{\n    [self setFont___crossmobile_ios_uikit_UIFont:(font ? font : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setFont___crossmobile_ios_uikit_UIFont:(UIFont*) font \n{\n    [super setFont:(font == JAVA_NULL ? nil : font)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIFont"
      ]
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setKeyboardAppearance(int)": {
      "reverse": "- (void) setKeyboardAppearance:(UIKeyboardAppearance) keyboardAppearance\n{\n    [self setKeyboardAppearance___int:keyboardAppearance];\n}\n\n",
      "super": "- (void) setKeyboardAppearance___int:(int) keyboardAppearance \n{\n    [super setKeyboardAppearance:keyboardAppearance];\n}\n\n"
    },
    "setKeyboardType(int)": {
      "reverse": "- (void) setKeyboardType:(UIKeyboardType) keyboardType\n{\n    [self setKeyboardType___int:keyboardType];\n}\n\n",
      "super": "- (void) setKeyboardType___int:(int) keyboardType \n{\n    [super setKeyboardType:keyboardType];\n}\n\n"
    },
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setReturnKeyType(int)": {
      "reverse": "- (void) setReturnKeyType:(UIReturnKeyType) returnKeyType\n{\n    [self setReturnKeyType___int:returnKeyType];\n}\n\n",
      "super": "- (void) setReturnKeyType___int:(int) returnKeyType \n{\n    [super setReturnKeyType:returnKeyType];\n}\n\n"
    },
    "setSecureTextEntry(boolean)": {
      "reverse": "- (void) setSecureTextEntry:(BOOL) secureTextEntry\n{\n    [self setSecureTextEntry___boolean:secureTextEntry];\n}\n\n",
      "super": "- (void) setSecureTextEntry___boolean:(BOOL) secureTextEntry \n{\n    [super setSecureTextEntry:secureTextEntry];\n}\n\n"
    },
    "setTag(int)": null,
    "setText(java.lang.String)": {
      "reverse": "- (void) setText:(NSString *) text\n{\n    [self setText___java_lang_String:(text ? text : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setText___java_lang_String:(NSString*) text \n{\n    [super setText:(text == JAVA_NULL ? nil : text)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTextAlignment(int)": {
      "reverse": "- (void) setTextAlignment:(NSTextAlignment) textAlignment\n{\n    [self setTextAlignment___int:textAlignment];\n}\n\n",
      "super": "- (void) setTextAlignment___int:(int) textAlignment \n{\n    [super setTextAlignment:textAlignment];\n}\n\n"
    },
    "setTextColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setTextColor:(UIColor *) textColor\n{\n    [self setTextColor___crossmobile_ios_uikit_UIColor:(textColor ? textColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTextColor___crossmobile_ios_uikit_UIColor:(UIColor*) textColor \n{\n    [super setTextColor:(textColor == JAVA_NULL ? nil : textColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setTextContainerInset(crossmobile.ios.uikit.UIEdgeInsets)": {
      "reverse": "- (void) setTextContainerInset:(UIEdgeInsets) textContainerInset\n{\n    crossmobile_ios_uikit_UIEdgeInsets* textContainerInset$conv = [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:textContainerInset];\n    [self setTextContainerInset___crossmobile_ios_uikit_UIEdgeInsets:textContainerInset$conv];\n    [textContainerInset$conv release];\n}\n\n",
      "super": "- (void) setTextContainerInset___crossmobile_ios_uikit_UIEdgeInsets:(crossmobile_ios_uikit_UIEdgeInsets*) textContainerInset \n{\n    [super setTextContainerInset:[textContainerInset getUIEdgeInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "text()": {
      "reverse": "- (NSString *) text\n{\n    NSString * re$ult = [self text__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) text__\n{\n    NSString* re$ult = [super text];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "textAlignment()": {
      "reverse": "- (NSTextAlignment) textAlignment\n{\n    return [self textAlignment__];\n}\n\n",
      "super": "- (int) textAlignment__\n{\n    return [super textAlignment];\n}\n\n"
    },
    "textColor()": {
      "reverse": "- (UIColor *) textColor\n{\n    UIColor * re$ult = [self textColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) textColor__\n{\n    UIColor* re$ult = [super textColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "textContainerInset()": {
      "reverse": "- (UIEdgeInsets) textContainerInset\n{\n    crossmobile_ios_uikit_UIEdgeInsets* re$ult = [self textContainerInset__];\n    UIEdgeInsets re$ult$conv = [re$ult getUIEdgeInsets];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_uikit_UIEdgeInsets*) textContainerInset__\n{\n    return [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:[super textContainerInset]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UITextViewDelegate": {
    "didBeginEditing(crossmobile.ios.uikit.UITextView)": {
      "reverse": "- (void) textViewDidBeginEditing:(UITextView *) textView\n{\n    [self didBeginEditing___crossmobile_ios_uikit_UITextView:(textView ? textView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didBeginEditing___crossmobile_ios_uikit_UITextView:(UITextView*) textView \n{\n    [super textViewDidBeginEditing:(textView == JAVA_NULL ? nil : textView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextView"
      ]
    },
    "didChange(crossmobile.ios.uikit.UITextView)": {
      "reverse": "- (void) textViewDidChange:(UITextView *) textView\n{\n    [self didChange___crossmobile_ios_uikit_UITextView:(textView ? textView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didChange___crossmobile_ios_uikit_UITextView:(UITextView*) textView \n{\n    [super textViewDidChange:(textView == JAVA_NULL ? nil : textView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextView"
      ]
    },
    "didChangeSelection(crossmobile.ios.uikit.UITextView)": {
      "reverse": "- (void) textViewDidChangeSelection:(UITextView *) textView\n{\n    [self didChangeSelection___crossmobile_ios_uikit_UITextView:(textView ? textView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didChangeSelection___crossmobile_ios_uikit_UITextView:(UITextView*) textView \n{\n    [super textViewDidChangeSelection:(textView == JAVA_NULL ? nil : textView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextView"
      ]
    },
    "didEndEditing(crossmobile.ios.uikit.UITextView)": {
      "reverse": "- (void) textViewDidEndEditing:(UITextView *) textView\n{\n    [self didEndEditing___crossmobile_ios_uikit_UITextView:(textView ? textView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didEndEditing___crossmobile_ios_uikit_UITextView:(UITextView*) textView \n{\n    [super textViewDidEndEditing:(textView == JAVA_NULL ? nil : textView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextView"
      ]
    },
    "shouldBeginEditing(crossmobile.ios.uikit.UITextView)": {
      "reverse": "- (BOOL) textViewShouldBeginEditing:(UITextView *) textView\n{\n    return [self shouldBeginEditing___crossmobile_ios_uikit_UITextView:(textView ? textView : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldBeginEditing___crossmobile_ios_uikit_UITextView:(UITextView*) textView \n{\n    return [super textViewShouldBeginEditing:(textView == JAVA_NULL ? nil : textView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextView"
      ]
    },
    "shouldChangeTextInRange(crossmobile.ios.uikit.UITextView,crossmobile.ios.foundation.NSRange,java.lang.String)": {
      "reverse": "- (BOOL) textView:(UITextView *) textView shouldChangeTextInRange:(NSRange) range replacementText:(NSString *) text\n{\n    crossmobile_ios_foundation_NSRange* range$conv = [[crossmobile_ios_foundation_NSRange alloc] initWithNSRange:range];\n    BOOL re$ult = [self shouldChangeTextInRange___crossmobile_ios_uikit_UITextView_crossmobile_ios_foundation_NSRange_java_lang_String:(textView ? textView : JAVA_NULL) :range$conv :(text ? text : JAVA_NULL)];\n    [range$conv release];\n    return re$ult;\n}\n\n",
      "super": "- (BOOL) shouldChangeTextInRange___crossmobile_ios_uikit_UITextView_crossmobile_ios_foundation_NSRange_java_lang_String:(UITextView*) textView :(crossmobile_ios_foundation_NSRange*) range :(NSString*) text \n{\n    return [super textView:(textView == JAVA_NULL ? nil : textView) shouldChangeTextInRange:[range getNSRange] replacementText:(text == JAVA_NULL ? nil : text)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSRange",
        "crossmobile_ios_uikit_UITextView",
        "java_lang_String"
      ]
    },
    "shouldEndEditing(crossmobile.ios.uikit.UITextView)": {
      "reverse": "- (BOOL) textViewShouldEndEditing:(UITextView *) textView\n{\n    return [self shouldEndEditing___crossmobile_ios_uikit_UITextView:(textView ? textView : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldEndEditing___crossmobile_ios_uikit_UITextView:(UITextView*) textView \n{\n    return [super textViewShouldEndEditing:(textView == JAVA_NULL ? nil : textView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITextView"
      ]
    }
  },
  "crossmobile.ios.uikit.UIToolbar": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "barStyle()": {
      "reverse": "- (UIBarStyle) barStyle\n{\n    return [self barStyle__];\n}\n\n",
      "super": "- (int) barStyle__\n{\n    return [super barStyle];\n}\n\n"
    },
    "barTintColor()": {
      "reverse": "- (UIColor *) barTintColor\n{\n    UIColor * re$ult = [self barTintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) barTintColor__\n{\n    UIColor* re$ult = [super barTintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isTranslucent()": {
      "reverse": "- (BOOL) isTranslucent\n{\n    return [self isTranslucent__];\n}\n\n",
      "super": "- (BOOL) isTranslucent__\n{\n    return [super isTranslucent];\n}\n\n"
    },
    "isUserInteractionEnabled()": null,
    "items()": {
      "reverse": "- (NSArray<UIBarButtonItem *> *) items\n{\n    NSArray<UIBarButtonItem *> * re$ult = [self items__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) items__\n{\n    NSArray* re$ult = [super items];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBarStyle(int)": {
      "reverse": "- (void) setBarStyle:(UIBarStyle) barStyle\n{\n    [self setBarStyle___int:barStyle];\n}\n\n",
      "super": "- (void) setBarStyle___int:(int) barStyle \n{\n    [super setBarStyle:barStyle];\n}\n\n"
    },
    "setBarTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setBarTintColor:(UIColor *) barTintColor\n{\n    [self setBarTintColor___crossmobile_ios_uikit_UIColor:(barTintColor ? barTintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setBarTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) barTintColor \n{\n    [super setBarTintColor:(barTintColor == JAVA_NULL ? nil : barTintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setItems(java.util.List)": {
      "reverse": "- (void) setItems:(NSArray<UIBarButtonItem *> *) items\n{\n    [self setItems___java_util_List:(items ? items : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setItems___java_util_List:(NSArray*) items \n{\n    [super setItems:(items == JAVA_NULL ? nil : items)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setItems(java.util.List,boolean)": {
      "reverse": "- (void) setItems:(NSArray<UIBarButtonItem *> *) items animated:(BOOL) animated\n{\n    [self setItems___java_util_List_boolean:(items ? items : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) setItems___java_util_List_boolean:(NSArray*) items :(BOOL) animated \n{\n    [super setItems:(items == JAVA_NULL ? nil : items) animated:animated];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setTranslucent(boolean)": {
      "reverse": "- (void) setTranslucent:(BOOL) translucent\n{\n    [self setTranslucent___boolean:translucent];\n}\n\n",
      "super": "- (void) setTranslucent___boolean:(BOOL) translucent \n{\n    [super setTranslucent:translucent];\n}\n\n"
    },
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  },
  "crossmobile.ios.uikit.UITouch": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "locationInView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (CGPoint) locationInView:(UIView *) view\n{\n    crossmobile_ios_coregraphics_CGPoint* re$ult = [self locationInView___crossmobile_ios_uikit_UIView:(view ? view : JAVA_NULL)];\n    CGPoint re$ult$conv = [re$ult getCGPoint];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPoint*) locationInView___crossmobile_ios_uikit_UIView:(UIView*) view \n{\n    return [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:[super locationInView:(view == JAVA_NULL ? nil : view)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "phase()": {
      "reverse": "- (UITouchPhase) phase\n{\n    return [self phase__];\n}\n\n",
      "super": "- (int) phase__\n{\n    return [super phase];\n}\n\n"
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "tapCount()": {
      "reverse": "- (NSUInteger) tapCount\n{\n    return [self tapCount__];\n}\n\n",
      "super": "- (int) tapCount__\n{\n    return [super tapCount];\n}\n\n"
    },
    "timestamp()": {
      "reverse": "- (NSTimeInterval) timestamp\n{\n    return [self timestamp__];\n}\n\n",
      "super": "- (double) timestamp__\n{\n    return [super timestamp];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "view()": {
      "reverse": "- (UIView *) view\n{\n    UIView * re$ult = [self view__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) view__\n{\n    UIView* re$ult = [super view];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "window()": {
      "reverse": "- (UIWindow *) window\n{\n    UIWindow * re$ult = [self window__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIWindow*) window__\n{\n    UIWindow* re$ult = [super window];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIWindow"
      ]
    }
  },
  "crossmobile.ios.uikit.UIUserNotificationSettings": {
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "categories()": {
      "reverse": "- (NSSet<UIUserNotificationCategory *> *) categories\n{\n    NSSet<UIUserNotificationCategory *> * re$ult = [self categories__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSSet*) categories__\n{\n    NSSet* re$ult = [super categories];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_Set"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "types()": {
      "reverse": "- (UIUserNotificationType) types\n{\n    return [self types__];\n}\n\n",
      "super": "- (int) types__\n{\n    return [super types];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null
  },
  "crossmobile.ios.uikit.UIView": {
    "accessibilityIdentifier()": {
      "reverse": "- (NSString *) accessibilityIdentifier\n{\n    NSString * re$ult = [self accessibilityIdentifier__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) accessibilityIdentifier__\n{\n    NSString* re$ult = [super accessibilityIdentifier];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": {
      "reverse": "- (void) addConstraint:(NSLayoutConstraint *) constraint\n{\n    [self addConstraint___crossmobile_ios_uikit_NSLayoutConstraint:(constraint ? constraint : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addConstraint___crossmobile_ios_uikit_NSLayoutConstraint:(NSLayoutConstraint*) constraint \n{\n    [super addConstraint:(constraint == JAVA_NULL ? nil : constraint)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutConstraint"
      ]
    },
    "addConstraints(java.util.List)": {
      "reverse": "- (void) addConstraints:(NSArray<__kindof NSLayoutConstraint *> *) constraints\n{\n    [self addConstraints___java_util_List:(constraints ? constraints : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addConstraints___java_util_List:(NSArray*) constraints \n{\n    [super addConstraints:(constraints == JAVA_NULL ? nil : constraints)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": {
      "reverse": "- (void) addGestureRecognizer:(UIGestureRecognizer *) gestureRecognizer\n{\n    [self addGestureRecognizer___crossmobile_ios_uikit_UIGestureRecognizer:(gestureRecognizer ? gestureRecognizer : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addGestureRecognizer___crossmobile_ios_uikit_UIGestureRecognizer:(UIGestureRecognizer*) gestureRecognizer \n{\n    [super addGestureRecognizer:(gestureRecognizer == JAVA_NULL ? nil : gestureRecognizer)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIGestureRecognizer"
      ]
    },
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": {
      "reverse": "- (void) addLayoutGuide:(UILayoutGuide *) layoutGuide\n{\n    [self addLayoutGuide___crossmobile_ios_uikit_UILayoutGuide:(layoutGuide ? layoutGuide : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addLayoutGuide___crossmobile_ios_uikit_UILayoutGuide:(UILayoutGuide*) layoutGuide \n{\n    [super addLayoutGuide:(layoutGuide == JAVA_NULL ? nil : layoutGuide)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UILayoutGuide"
      ]
    },
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) addSubview:(UIView *) view\n{\n    [self addSubview___crossmobile_ios_uikit_UIView:(view ? view : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addSubview___crossmobile_ios_uikit_UIView:(UIView*) view \n{\n    [super addSubview:(view == JAVA_NULL ? nil : view)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "alpha()": {
      "reverse": "- (CGFloat) alpha\n{\n    return [self alpha__];\n}\n\n",
      "super": "- (double) alpha__\n{\n    return [super alpha];\n}\n\n"
    },
    "autoresizesSubviews()": {
      "reverse": "- (BOOL) autoresizesSubviews\n{\n    return [self autoresizesSubviews__];\n}\n\n",
      "super": "- (BOOL) autoresizesSubviews__\n{\n    return [super autoresizesSubviews];\n}\n\n"
    },
    "autoresizingMask()": {
      "reverse": "- (UIViewAutoresizing) autoresizingMask\n{\n    return [self autoresizingMask__];\n}\n\n",
      "super": "- (int) autoresizingMask__\n{\n    return [super autoresizingMask];\n}\n\n"
    },
    "backgroundColor()": {
      "reverse": "- (UIColor *) backgroundColor\n{\n    UIColor * re$ult = [self backgroundColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) backgroundColor__\n{\n    UIColor* re$ult = [super backgroundColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "becomeFirstResponder()": null,
    "bottomAnchor()": {
      "reverse": "- (NSLayoutYAxisAnchor *) bottomAnchor\n{\n    NSLayoutYAxisAnchor * re$ult = [self bottomAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutYAxisAnchor*) bottomAnchor__\n{\n    NSLayoutYAxisAnchor* re$ult = [super bottomAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutYAxisAnchor"
      ]
    },
    "bounds()": {
      "reverse": "- (CGRect) bounds\n{\n    crossmobile_ios_coregraphics_CGRect* re$ult = [self bounds__];\n    CGRect re$ult$conv = [re$ult getCGRect];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGRect*) bounds__\n{\n    return [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:[super bounds]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect"
      ]
    },
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) bringSubviewToFront:(UIView *) view\n{\n    [self bringSubviewToFront___crossmobile_ios_uikit_UIView:(view ? view : JAVA_NULL)];\n}\n\n",
      "super": "- (void) bringSubviewToFront___crossmobile_ios_uikit_UIView:(UIView*) view \n{\n    [super bringSubviewToFront:(view == JAVA_NULL ? nil : view)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "center()": {
      "reverse": "- (CGPoint) center\n{\n    crossmobile_ios_coregraphics_CGPoint* re$ult = [self center__];\n    CGPoint re$ult$conv = [re$ult getCGPoint];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPoint*) center__\n{\n    return [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:[super center]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint"
      ]
    },
    "centerXAnchor()": {
      "reverse": "- (NSLayoutXAxisAnchor *) centerXAnchor\n{\n    NSLayoutXAxisAnchor * re$ult = [self centerXAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutXAxisAnchor*) centerXAnchor__\n{\n    NSLayoutXAxisAnchor* re$ult = [super centerXAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutXAxisAnchor"
      ]
    },
    "centerYAnchor()": {
      "reverse": "- (NSLayoutYAxisAnchor *) centerYAnchor\n{\n    NSLayoutYAxisAnchor * re$ult = [self centerYAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutYAxisAnchor*) centerYAnchor__\n{\n    NSLayoutYAxisAnchor* re$ult = [super centerYAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutYAxisAnchor"
      ]
    },
    "clipsToBounds()": {
      "reverse": "- (BOOL) clipsToBounds\n{\n    return [self clipsToBounds__];\n}\n\n",
      "super": "- (BOOL) clipsToBounds__\n{\n    return [super clipsToBounds];\n}\n\n"
    },
    "constraints()": {
      "reverse": "- (NSArray<__kindof NSLayoutConstraint *> *) constraints\n{\n    NSArray<__kindof NSLayoutConstraint *> * re$ult = [self constraints__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) constraints__\n{\n    NSArray* re$ult = [super constraints];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "contentCompressionResistancePriorityForAxis(int)": {
      "reverse": "- (UILayoutPriority) contentCompressionResistancePriorityForAxis:(UILayoutConstraintAxis) axis\n{\n    return [self contentCompressionResistancePriorityForAxis___int:axis];\n}\n\n",
      "super": "- (float) contentCompressionResistancePriorityForAxis___int:(int) axis \n{\n    return [super contentCompressionResistancePriorityForAxis:axis];\n}\n\n"
    },
    "contentHuggingPriorityForAxis(int)": {
      "reverse": "- (UILayoutPriority) contentHuggingPriorityForAxis:(UILayoutConstraintAxis) axis\n{\n    return [self contentHuggingPriorityForAxis___int:axis];\n}\n\n",
      "super": "- (float) contentHuggingPriorityForAxis___int:(int) axis \n{\n    return [super contentHuggingPriorityForAxis:axis];\n}\n\n"
    },
    "contentMode()": {
      "reverse": "- (UIViewContentMode) contentMode\n{\n    return [self contentMode__];\n}\n\n",
      "super": "- (int) contentMode__\n{\n    return [super contentMode];\n}\n\n"
    },
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": {
      "reverse": "- (CGPoint) convertPoint:(CGPoint) point fromView:(UIView *) view\n{\n    crossmobile_ios_coregraphics_CGPoint* point$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:point];\n    crossmobile_ios_coregraphics_CGPoint* re$ult = [self convertPointFromView___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIView:point$conv :(view ? view : JAVA_NULL)];\n    CGPoint re$ult$conv = [re$ult getCGPoint];\n    [re$ult release];\n    [point$conv release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPoint*) convertPointFromView___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIView:(crossmobile_ios_coregraphics_CGPoint*) point :(UIView*) view \n{\n    return [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:[super convertPoint:[point getCGPoint] fromView:(view == JAVA_NULL ? nil : view)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": {
      "reverse": "- (CGPoint) convertPoint:(CGPoint) point toView:(UIView *) view\n{\n    crossmobile_ios_coregraphics_CGPoint* point$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:point];\n    crossmobile_ios_coregraphics_CGPoint* re$ult = [self convertPointToView___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIView:point$conv :(view ? view : JAVA_NULL)];\n    CGPoint re$ult$conv = [re$ult getCGPoint];\n    [re$ult release];\n    [point$conv release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPoint*) convertPointToView___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIView:(crossmobile_ios_coregraphics_CGPoint*) point :(UIView*) view \n{\n    return [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:[super convertPoint:[point getCGPoint] toView:(view == JAVA_NULL ? nil : view)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": {
      "reverse": "- (CGRect) convertRect:(CGRect) rect fromView:(UIView *) view\n{\n    crossmobile_ios_coregraphics_CGRect* rect$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:rect];\n    crossmobile_ios_coregraphics_CGRect* re$ult = [self convertRectFromView___crossmobile_ios_coregraphics_CGRect_crossmobile_ios_uikit_UIView:rect$conv :(view ? view : JAVA_NULL)];\n    CGRect re$ult$conv = [re$ult getCGRect];\n    [re$ult release];\n    [rect$conv release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGRect*) convertRectFromView___crossmobile_ios_coregraphics_CGRect_crossmobile_ios_uikit_UIView:(crossmobile_ios_coregraphics_CGRect*) rect :(UIView*) view \n{\n    return [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:[super convertRect:[rect getCGRect] fromView:(view == JAVA_NULL ? nil : view)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": {
      "reverse": "- (CGRect) convertRect:(CGRect) rect toView:(UIView *) view\n{\n    crossmobile_ios_coregraphics_CGRect* rect$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:rect];\n    crossmobile_ios_coregraphics_CGRect* re$ult = [self convertRectToView___crossmobile_ios_coregraphics_CGRect_crossmobile_ios_uikit_UIView:rect$conv :(view ? view : JAVA_NULL)];\n    CGRect re$ult$conv = [re$ult getCGRect];\n    [re$ult release];\n    [rect$conv release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGRect*) convertRectToView___crossmobile_ios_coregraphics_CGRect_crossmobile_ios_uikit_UIView:(crossmobile_ios_coregraphics_CGRect*) rect :(UIView*) view \n{\n    return [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:[super convertRect:[rect getCGRect] toView:(view == JAVA_NULL ? nil : view)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) didAddSubview:(UIView *) subview\n{\n    [self didAddSubview___crossmobile_ios_uikit_UIView:(subview ? subview : JAVA_NULL)];\n}\n\n",
      "super": "- (void) didAddSubview___crossmobile_ios_uikit_UIView:(UIView*) subview \n{\n    [super didAddSubview:(subview == JAVA_NULL ? nil : subview)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "didMoveToSuperview()": {
      "reverse": "- (void) didMoveToSuperview\n{\n    [self didMoveToSuperview__];\n}\n\n",
      "super": "- (void) didMoveToSuperview__\n{\n    [super didMoveToSuperview];\n}\n\n"
    },
    "didMoveToWindow()": {
      "reverse": "- (void) didMoveToWindow\n{\n    [self didMoveToWindow__];\n}\n\n",
      "super": "- (void) didMoveToWindow__\n{\n    [super didMoveToWindow];\n}\n\n"
    },
    "drawRect(crossmobile.ios.coregraphics.CGRect)": {
      "reverse": "- (void) drawRect:(CGRect) rect\n{\n    crossmobile_ios_coregraphics_CGRect* rect$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:rect];\n    [self drawRect___crossmobile_ios_coregraphics_CGRect:rect$conv];\n    [rect$conv release];\n}\n\n",
      "super": "- (void) drawRect___crossmobile_ios_coregraphics_CGRect:(crossmobile_ios_coregraphics_CGRect*) rect \n{\n    [super drawRect:[rect getCGRect]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect"
      ]
    },
    "frame()": {
      "reverse": "- (CGRect) frame\n{\n    crossmobile_ios_coregraphics_CGRect* re$ult = [self frame__];\n    CGRect re$ult$conv = [re$ult getCGRect];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGRect*) frame__\n{\n    return [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:[super frame]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect"
      ]
    },
    "gestureRecognizers()": {
      "reverse": "- (NSArray<__kindof UIGestureRecognizer *> *) gestureRecognizers\n{\n    NSArray<__kindof UIGestureRecognizer *> * re$ult = [self gestureRecognizers__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) gestureRecognizers__\n{\n    NSArray* re$ult = [super gestureRecognizers];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "heightAnchor()": {
      "reverse": "- (NSLayoutDimension *) heightAnchor\n{\n    NSLayoutDimension * re$ult = [self heightAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutDimension*) heightAnchor__\n{\n    NSLayoutDimension* re$ult = [super heightAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutDimension"
      ]
    },
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": {
      "reverse": "- (UIView *) hitTest:(CGPoint) point withEvent:(UIEvent *) event\n{\n    crossmobile_ios_coregraphics_CGPoint* point$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:point];\n    UIView * re$ult = [self hitTest___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIEvent:point$conv :(event ? event : JAVA_NULL)];\n    [point$conv release];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) hitTest___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIEvent:(crossmobile_ios_coregraphics_CGPoint*) point :(UIEvent*) event \n{\n    UIView* re$ult = [super hitTest:[point getCGPoint] withEvent:(event == JAVA_NULL ? nil : event)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_uikit_UIEvent",
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "insertSubview(crossmobile.ios.uikit.UIView,int)": {
      "reverse": "- (void) insertSubview:(UIView *) view atIndex:(NSInteger) index\n{\n    [self insertSubview___crossmobile_ios_uikit_UIView_int:(view ? view : JAVA_NULL) :index];\n}\n\n",
      "super": "- (void) insertSubview___crossmobile_ios_uikit_UIView_int:(UIView*) view :(int) index \n{\n    [super insertSubview:(view == JAVA_NULL ? nil : view) atIndex:index];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "insetsLayoutMarginsFromSafeArea()": {
      "reverse": "- (BOOL) insetsLayoutMarginsFromSafeArea\n{\n    return [self insetsLayoutMarginsFromSafeArea__];\n}\n\n",
      "super": "- (BOOL) insetsLayoutMarginsFromSafeArea__\n{\n    return [super insetsLayoutMarginsFromSafeArea];\n}\n\n"
    },
    "intrinsicContentSize()": {
      "reverse": "- (CGSize) intrinsicContentSize\n{\n    crossmobile_ios_coregraphics_CGSize* re$ult = [self intrinsicContentSize__];\n    CGSize re$ult$conv = [re$ult getCGSize];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGSize*) intrinsicContentSize__\n{\n    return [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:[super intrinsicContentSize]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "invalidateIntrinsicContentSize()": {
      "reverse": "- (void) invalidateIntrinsicContentSize\n{\n    [self invalidateIntrinsicContentSize__];\n}\n\n",
      "super": "- (void) invalidateIntrinsicContentSize__\n{\n    [super invalidateIntrinsicContentSize];\n}\n\n"
    },
    "isFirstResponder()": null,
    "isHidden()": {
      "reverse": "- (BOOL) isHidden\n{\n    return [self isHidden__];\n}\n\n",
      "super": "- (BOOL) isHidden__\n{\n    return [super isHidden];\n}\n\n"
    },
    "isMultipleTouchEnabled()": {
      "reverse": "- (BOOL) isMultipleTouchEnabled\n{\n    return [self isMultipleTouchEnabled__];\n}\n\n",
      "super": "- (BOOL) isMultipleTouchEnabled__\n{\n    return [super isMultipleTouchEnabled];\n}\n\n"
    },
    "isOpaque()": {
      "reverse": "- (BOOL) isOpaque\n{\n    return [self isOpaque__];\n}\n\n",
      "super": "- (BOOL) isOpaque__\n{\n    return [super isOpaque];\n}\n\n"
    },
    "isUserInteractionEnabled()": {
      "reverse": "- (BOOL) isUserInteractionEnabled\n{\n    return [self isUserInteractionEnabled__];\n}\n\n",
      "super": "- (BOOL) isUserInteractionEnabled__\n{\n    return [super isUserInteractionEnabled];\n}\n\n"
    },
    "layer()": {
      "reverse": "- (CALayer *) layer\n{\n    CALayer * re$ult = [self layer__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (CALayer*) layer__\n{\n    CALayer* re$ult = [super layer];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_quartzcore_CALayer"
      ]
    },
    "layoutIfNeeded()": {
      "reverse": "- (void) layoutIfNeeded\n{\n    [self layoutIfNeeded__];\n}\n\n",
      "super": "- (void) layoutIfNeeded__\n{\n    [super layoutIfNeeded];\n}\n\n"
    },
    "layoutMargins()": {
      "reverse": "- (UIEdgeInsets) layoutMargins\n{\n    crossmobile_ios_uikit_UIEdgeInsets* re$ult = [self layoutMargins__];\n    UIEdgeInsets re$ult$conv = [re$ult getUIEdgeInsets];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_uikit_UIEdgeInsets*) layoutMargins__\n{\n    return [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:[super layoutMargins]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "layoutMarginsDidChange()": {
      "reverse": "- (void) layoutMarginsDidChange\n{\n    [self layoutMarginsDidChange__];\n}\n\n",
      "super": "- (void) layoutMarginsDidChange__\n{\n    [super layoutMarginsDidChange];\n}\n\n"
    },
    "layoutMarginsGuide()": {
      "reverse": "- (UILayoutGuide *) layoutMarginsGuide\n{\n    UILayoutGuide * re$ult = [self layoutMarginsGuide__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UILayoutGuide*) layoutMarginsGuide__\n{\n    UILayoutGuide* re$ult = [super layoutMarginsGuide];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UILayoutGuide"
      ]
    },
    "layoutSubviews()": {
      "reverse": "- (void) layoutSubviews\n{\n    [self layoutSubviews__];\n}\n\n",
      "super": "- (void) layoutSubviews__\n{\n    [super layoutSubviews];\n}\n\n"
    },
    "leadingAnchor()": {
      "reverse": "- (NSLayoutXAxisAnchor *) leadingAnchor\n{\n    NSLayoutXAxisAnchor * re$ult = [self leadingAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutXAxisAnchor*) leadingAnchor__\n{\n    NSLayoutXAxisAnchor* re$ult = [super leadingAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutXAxisAnchor"
      ]
    },
    "leftAnchor()": {
      "reverse": "- (NSLayoutXAxisAnchor *) leftAnchor\n{\n    NSLayoutXAxisAnchor * re$ult = [self leftAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutXAxisAnchor*) leftAnchor__\n{\n    NSLayoutXAxisAnchor* re$ult = [super leftAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutXAxisAnchor"
      ]
    },
    "maskView()": {
      "reverse": "- (UIView *) maskView\n{\n    UIView * re$ult = [self maskView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) maskView__\n{\n    UIView* re$ult = [super maskView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "needsUpdateConstraints()": {
      "reverse": "- (BOOL) needsUpdateConstraints\n{\n    return [self needsUpdateConstraints__];\n}\n\n",
      "super": "- (BOOL) needsUpdateConstraints__\n{\n    return [super needsUpdateConstraints];\n}\n\n"
    },
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": {
      "reverse": "- (UIUserInterfaceStyle) overrideUserInterfaceStyle\n{\n    if (isIosAtLeast(13,0)){\n        return [self overrideUserInterfaceStyle__];\n    } else {\n        return 0;\n    }\n}\n\n",
      "super": "- (int) overrideUserInterfaceStyle__\n{\n    if (isIosAtLeast(13,0)){\n        return [super overrideUserInterfaceStyle];\n    } else {\n        return 0;\n    }\n}\n\n"
    },
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": {
      "reverse": "- (BOOL) pointInside:(CGPoint) point withEvent:(UIEvent *) event\n{\n    crossmobile_ios_coregraphics_CGPoint* point$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:point];\n    BOOL re$ult = [self pointInside___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIEvent:point$conv :(event ? event : JAVA_NULL)];\n    [point$conv release];\n    return re$ult;\n}\n\n",
      "super": "- (BOOL) pointInside___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIEvent:(crossmobile_ios_coregraphics_CGPoint*) point :(UIEvent*) event \n{\n    return [super pointInside:[point getCGPoint] withEvent:(event == JAVA_NULL ? nil : event)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_uikit_UIEvent"
      ]
    },
    "preservesSuperviewLayoutMargins()": {
      "reverse": "- (BOOL) preservesSuperviewLayoutMargins\n{\n    return [self preservesSuperviewLayoutMargins__];\n}\n\n",
      "super": "- (BOOL) preservesSuperviewLayoutMargins__\n{\n    return [super preservesSuperviewLayoutMargins];\n}\n\n"
    },
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": {
      "reverse": "- (void) removeConstraint:(NSLayoutConstraint *) constraint\n{\n    [self removeConstraint___crossmobile_ios_uikit_NSLayoutConstraint:(constraint ? constraint : JAVA_NULL)];\n}\n\n",
      "super": "- (void) removeConstraint___crossmobile_ios_uikit_NSLayoutConstraint:(NSLayoutConstraint*) constraint \n{\n    [super removeConstraint:(constraint == JAVA_NULL ? nil : constraint)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutConstraint"
      ]
    },
    "removeConstraints(java.util.List)": {
      "reverse": "- (void) removeConstraints:(NSArray<__kindof NSLayoutConstraint *> *) constraints\n{\n    [self removeConstraints___java_util_List:(constraints ? constraints : JAVA_NULL)];\n}\n\n",
      "super": "- (void) removeConstraints___java_util_List:(NSArray*) constraints \n{\n    [super removeConstraints:(constraints == JAVA_NULL ? nil : constraints)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "removeFromSuperview()": {
      "reverse": "- (void) removeFromSuperview\n{\n    [self removeFromSuperview__];\n}\n\n",
      "super": "- (void) removeFromSuperview__\n{\n    [super removeFromSuperview];\n}\n\n"
    },
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": {
      "reverse": "- (void) removeGestureRecognizer:(UIGestureRecognizer *) gestureRecognizer\n{\n    [self removeGestureRecognizer___crossmobile_ios_uikit_UIGestureRecognizer:(gestureRecognizer ? gestureRecognizer : JAVA_NULL)];\n}\n\n",
      "super": "- (void) removeGestureRecognizer___crossmobile_ios_uikit_UIGestureRecognizer:(UIGestureRecognizer*) gestureRecognizer \n{\n    [super removeGestureRecognizer:(gestureRecognizer == JAVA_NULL ? nil : gestureRecognizer)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIGestureRecognizer"
      ]
    },
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": {
      "reverse": "- (void) removeLayoutGuide:(UILayoutGuide *) layoutGuide\n{\n    [self removeLayoutGuide___crossmobile_ios_uikit_UILayoutGuide:(layoutGuide ? layoutGuide : JAVA_NULL)];\n}\n\n",
      "super": "- (void) removeLayoutGuide___crossmobile_ios_uikit_UILayoutGuide:(UILayoutGuide*) layoutGuide \n{\n    [super removeLayoutGuide:(layoutGuide == JAVA_NULL ? nil : layoutGuide)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UILayoutGuide"
      ]
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": {
      "reverse": "- (NSString *) restorationIdentifier\n{\n    NSString * re$ult = [self restorationIdentifier__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) restorationIdentifier__\n{\n    NSString* re$ult = [super restorationIdentifier];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "rightAnchor()": {
      "reverse": "- (NSLayoutXAxisAnchor *) rightAnchor\n{\n    NSLayoutXAxisAnchor * re$ult = [self rightAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutXAxisAnchor*) rightAnchor__\n{\n    NSLayoutXAxisAnchor* re$ult = [super rightAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutXAxisAnchor"
      ]
    },
    "safeAreaInsets()": {
      "reverse": "- (UIEdgeInsets) safeAreaInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* re$ult = [self safeAreaInsets__];\n    UIEdgeInsets re$ult$conv = [re$ult getUIEdgeInsets];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_uikit_UIEdgeInsets*) safeAreaInsets__\n{\n    return [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:[super safeAreaInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "safeAreaLayoutGuide()": {
      "reverse": "- (UILayoutGuide *) safeAreaLayoutGuide\n{\n    UILayoutGuide * re$ult = [self safeAreaLayoutGuide__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UILayoutGuide*) safeAreaLayoutGuide__\n{\n    UILayoutGuide* re$ult = [super safeAreaLayoutGuide];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UILayoutGuide"
      ]
    },
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) sendSubviewToBack:(UIView *) view\n{\n    [self sendSubviewToBack___crossmobile_ios_uikit_UIView:(view ? view : JAVA_NULL)];\n}\n\n",
      "super": "- (void) sendSubviewToBack___crossmobile_ios_uikit_UIView:(UIView*) view \n{\n    [super sendSubviewToBack:(view == JAVA_NULL ? nil : view)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "setAccessibilityIdentifier(java.lang.String)": {
      "reverse": "- (void) setAccessibilityIdentifier:(NSString *) accessibilityIdentifier\n{\n    [self setAccessibilityIdentifier___java_lang_String:(accessibilityIdentifier ? accessibilityIdentifier : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setAccessibilityIdentifier___java_lang_String:(NSString*) accessibilityIdentifier \n{\n    [super setAccessibilityIdentifier:(accessibilityIdentifier == JAVA_NULL ? nil : accessibilityIdentifier)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setAlpha(double)": {
      "reverse": "- (void) setAlpha:(CGFloat) alpha\n{\n    [self setAlpha___double:alpha];\n}\n\n",
      "super": "- (void) setAlpha___double:(double) alpha \n{\n    [super setAlpha:alpha];\n}\n\n"
    },
    "setAutoresizesSubviews(boolean)": {
      "reverse": "- (void) setAutoresizesSubviews:(BOOL) autoresizesSubviews\n{\n    [self setAutoresizesSubviews___boolean:autoresizesSubviews];\n}\n\n",
      "super": "- (void) setAutoresizesSubviews___boolean:(BOOL) autoresizesSubviews \n{\n    [super setAutoresizesSubviews:autoresizesSubviews];\n}\n\n"
    },
    "setAutoresizingMask(int)": {
      "reverse": "- (void) setAutoresizingMask:(UIViewAutoresizing) autoresizingMask\n{\n    [self setAutoresizingMask___int:autoresizingMask];\n}\n\n",
      "super": "- (void) setAutoresizingMask___int:(int) autoresizingMask \n{\n    [super setAutoresizingMask:autoresizingMask];\n}\n\n"
    },
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setBackgroundColor:(UIColor *) backgroundColor\n{\n    [self setBackgroundColor___crossmobile_ios_uikit_UIColor:(backgroundColor ? backgroundColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setBackgroundColor___crossmobile_ios_uikit_UIColor:(UIColor*) backgroundColor \n{\n    [super setBackgroundColor:(backgroundColor == JAVA_NULL ? nil : backgroundColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setBounds(crossmobile.ios.coregraphics.CGRect)": {
      "reverse": "- (void) setBounds:(CGRect) bounds\n{\n    crossmobile_ios_coregraphics_CGRect* bounds$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:bounds];\n    [self setBounds___crossmobile_ios_coregraphics_CGRect:bounds$conv];\n    [bounds$conv release];\n}\n\n",
      "super": "- (void) setBounds___crossmobile_ios_coregraphics_CGRect:(crossmobile_ios_coregraphics_CGRect*) bounds \n{\n    [super setBounds:[bounds getCGRect]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect"
      ]
    },
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": {
      "reverse": "- (void) setCenter:(CGPoint) center\n{\n    crossmobile_ios_coregraphics_CGPoint* center$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:center];\n    [self setCenter___crossmobile_ios_coregraphics_CGPoint:center$conv];\n    [center$conv release];\n}\n\n",
      "super": "- (void) setCenter___crossmobile_ios_coregraphics_CGPoint:(crossmobile_ios_coregraphics_CGPoint*) center \n{\n    [super setCenter:[center getCGPoint]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint"
      ]
    },
    "setClearsContextBeforeDrawing(boolean)": {
      "reverse": "- (void) setClearsContextBeforeDrawing:(BOOL) clearsContextBeforeDrawing\n{\n    [self setClearsContextBeforeDrawing___boolean:clearsContextBeforeDrawing];\n}\n\n",
      "super": "- (void) setClearsContextBeforeDrawing___boolean:(BOOL) clearsContextBeforeDrawing \n{\n    [super setClearsContextBeforeDrawing:clearsContextBeforeDrawing];\n}\n\n"
    },
    "setClipsToBounds(boolean)": {
      "reverse": "- (void) setClipsToBounds:(BOOL) clipsToBounds\n{\n    [self setClipsToBounds___boolean:clipsToBounds];\n}\n\n",
      "super": "- (void) setClipsToBounds___boolean:(BOOL) clipsToBounds \n{\n    [super setClipsToBounds:clipsToBounds];\n}\n\n"
    },
    "setContentCompressionResistancePriority(float,int)": {
      "reverse": "- (void) setContentCompressionResistancePriority:(UILayoutPriority) priority forAxis:(UILayoutConstraintAxis) axis\n{\n    [self setContentCompressionResistancePriority___float_int:priority :axis];\n}\n\n",
      "super": "- (void) setContentCompressionResistancePriority___float_int:(float) priority :(int) axis \n{\n    [super setContentCompressionResistancePriority:priority forAxis:axis];\n}\n\n"
    },
    "setContentHuggingPriority(float,int)": {
      "reverse": "- (void) setContentHuggingPriority:(UILayoutPriority) priority forAxis:(UILayoutConstraintAxis) axis\n{\n    [self setContentHuggingPriority___float_int:priority :axis];\n}\n\n",
      "super": "- (void) setContentHuggingPriority___float_int:(float) priority :(int) axis \n{\n    [super setContentHuggingPriority:priority forAxis:axis];\n}\n\n"
    },
    "setContentMode(int)": {
      "reverse": "- (void) setContentMode:(UIViewContentMode) contentMode\n{\n    [self setContentMode___int:contentMode];\n}\n\n",
      "super": "- (void) setContentMode___int:(int) contentMode \n{\n    [super setContentMode:contentMode];\n}\n\n"
    },
    "setFrame(crossmobile.ios.coregraphics.CGRect)": {
      "reverse": "- (void) setFrame:(CGRect) frame\n{\n    crossmobile_ios_coregraphics_CGRect* frame$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:frame];\n    [self setFrame___crossmobile_ios_coregraphics_CGRect:frame$conv];\n    [frame$conv release];\n}\n\n",
      "super": "- (void) setFrame___crossmobile_ios_coregraphics_CGRect:(crossmobile_ios_coregraphics_CGRect*) frame \n{\n    [super setFrame:[frame getCGRect]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect"
      ]
    },
    "setGestureRecognizers(java.util.List)": {
      "reverse": "- (void) setGestureRecognizers:(NSArray<__kindof UIGestureRecognizer *> *) gestureRecognizers\n{\n    [self setGestureRecognizers___java_util_List:(gestureRecognizers ? gestureRecognizers : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setGestureRecognizers___java_util_List:(NSArray*) gestureRecognizers \n{\n    [super setGestureRecognizers:(gestureRecognizers == JAVA_NULL ? nil : gestureRecognizers)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setHidden(boolean)": {
      "reverse": "- (void) setHidden:(BOOL) hidden\n{\n    [self setHidden___boolean:hidden];\n}\n\n",
      "super": "- (void) setHidden___boolean:(BOOL) hidden \n{\n    [super setHidden:hidden];\n}\n\n"
    },
    "setInsetsLayoutMarginsFromSafeArea(boolean)": {
      "reverse": "- (void) setInsetsLayoutMarginsFromSafeArea:(BOOL) insetsLayoutMarginsFromSafeArea\n{\n    [self setInsetsLayoutMarginsFromSafeArea___boolean:insetsLayoutMarginsFromSafeArea];\n}\n\n",
      "super": "- (void) setInsetsLayoutMarginsFromSafeArea___boolean:(BOOL) insetsLayoutMarginsFromSafeArea \n{\n    [super setInsetsLayoutMarginsFromSafeArea:insetsLayoutMarginsFromSafeArea];\n}\n\n"
    },
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": {
      "reverse": "- (void) setLayoutMargins:(UIEdgeInsets) layoutMargins\n{\n    crossmobile_ios_uikit_UIEdgeInsets* layoutMargins$conv = [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:layoutMargins];\n    [self setLayoutMargins___crossmobile_ios_uikit_UIEdgeInsets:layoutMargins$conv];\n    [layoutMargins$conv release];\n}\n\n",
      "super": "- (void) setLayoutMargins___crossmobile_ios_uikit_UIEdgeInsets:(crossmobile_ios_uikit_UIEdgeInsets*) layoutMargins \n{\n    [super setLayoutMargins:[layoutMargins getUIEdgeInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "setMaskView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) setMaskView:(UIView *) maskView\n{\n    [self setMaskView___crossmobile_ios_uikit_UIView:(maskView ? maskView : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setMaskView___crossmobile_ios_uikit_UIView:(UIView*) maskView \n{\n    [super setMaskView:(maskView == JAVA_NULL ? nil : maskView)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "setMultipleTouchEnabled(boolean)": {
      "reverse": "- (void) setMultipleTouchEnabled:(BOOL) multipleTouchEnabled\n{\n    [self setMultipleTouchEnabled___boolean:multipleTouchEnabled];\n}\n\n",
      "super": "- (void) setMultipleTouchEnabled___boolean:(BOOL) multipleTouchEnabled \n{\n    [super setMultipleTouchEnabled:multipleTouchEnabled];\n}\n\n"
    },
    "setNeedsDisplay()": {
      "reverse": "- (void) setNeedsDisplay\n{\n    [self setNeedsDisplay__];\n}\n\n",
      "super": "- (void) setNeedsDisplay__\n{\n    [super setNeedsDisplay];\n}\n\n"
    },
    "setNeedsLayout()": {
      "reverse": "- (void) setNeedsLayout\n{\n    [self setNeedsLayout__];\n}\n\n",
      "super": "- (void) setNeedsLayout__\n{\n    [super setNeedsLayout];\n}\n\n"
    },
    "setNeedsUpdateConstraints()": {
      "reverse": "- (void) setNeedsUpdateConstraints\n{\n    [self setNeedsUpdateConstraints__];\n}\n\n",
      "super": "- (void) setNeedsUpdateConstraints__\n{\n    [super setNeedsUpdateConstraints];\n}\n\n"
    },
    "setOpaque(boolean)": {
      "reverse": "- (void) setOpaque:(BOOL) opaque\n{\n    [self setOpaque___boolean:opaque];\n}\n\n",
      "super": "- (void) setOpaque___boolean:(BOOL) opaque \n{\n    [super setOpaque:opaque];\n}\n\n"
    },
    "setOverrideUserInterfaceStyle(int)": {
      "reverse": "- (void) setOverrideUserInterfaceStyle:(UIUserInterfaceStyle) overrideUserInterfaceStyle\n{\n    if (isIosAtLeast(13,0)){\n        [self setOverrideUserInterfaceStyle___int:overrideUserInterfaceStyle];\n    }\n}\n\n",
      "super": "- (void) setOverrideUserInterfaceStyle___int:(int) overrideUserInterfaceStyle \n{\n    if (isIosAtLeast(13,0)){\n        [super setOverrideUserInterfaceStyle:overrideUserInterfaceStyle];\n    }\n}\n\n"
    },
    "setPreservesSuperviewLayoutMargins(boolean)": {
      "reverse": "- (void) setPreservesSuperviewLayoutMargins:(BOOL) preservesSuperviewLayoutMargins\n{\n    [self setPreservesSuperviewLayoutMargins___boolean:preservesSuperviewLayoutMargins];\n}\n\n",
      "super": "- (void) setPreservesSuperviewLayoutMargins___boolean:(BOOL) preservesSuperviewLayoutMargins \n{\n    [super setPreservesSuperviewLayoutMargins:preservesSuperviewLayoutMargins];\n}\n\n"
    },
    "setRestorationIdentifier(java.lang.String)": {
      "reverse": "- (void) setRestorationIdentifier:(NSString *) restorationIdentifier\n{\n    [self setRestorationIdentifier___java_lang_String:(restorationIdentifier ? restorationIdentifier : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setRestorationIdentifier___java_lang_String:(NSString*) restorationIdentifier \n{\n    [super setRestorationIdentifier:(restorationIdentifier == JAVA_NULL ? nil : restorationIdentifier)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTag(int)": {
      "reverse": "- (void) setTag:(NSInteger) tag\n{\n    [self setTag___int:tag];\n}\n\n",
      "super": "- (void) setTag___int:(int) tag \n{\n    [super setTag:tag];\n}\n\n"
    },
    "setTintAdjustmentMode(int)": {
      "reverse": "- (void) setTintAdjustmentMode:(UIViewTintAdjustmentMode) tintAdjustmentMode\n{\n    [self setTintAdjustmentMode___int:tintAdjustmentMode];\n}\n\n",
      "super": "- (void) setTintAdjustmentMode___int:(int) tintAdjustmentMode \n{\n    [super setTintAdjustmentMode:tintAdjustmentMode];\n}\n\n"
    },
    "setTintColor(crossmobile.ios.uikit.UIColor)": {
      "reverse": "- (void) setTintColor:(UIColor *) tintColor\n{\n    [self setTintColor___crossmobile_ios_uikit_UIColor:(tintColor ? tintColor : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTintColor___crossmobile_ios_uikit_UIColor:(UIColor*) tintColor \n{\n    [super setTintColor:(tintColor == JAVA_NULL ? nil : tintColor)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": {
      "reverse": "- (void) setTransform:(CGAffineTransform) transform\n{\n    crossmobile_ios_coregraphics_CGAffineTransform* transform$conv = [[crossmobile_ios_coregraphics_CGAffineTransform alloc] initWithCGAffineTransform:transform];\n    [self setTransform___crossmobile_ios_coregraphics_CGAffineTransform:transform$conv];\n    [transform$conv release];\n}\n\n",
      "super": "- (void) setTransform___crossmobile_ios_coregraphics_CGAffineTransform:(crossmobile_ios_coregraphics_CGAffineTransform*) transform \n{\n    [super setTransform:[transform getCGAffineTransform]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGAffineTransform"
      ]
    },
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": {
      "reverse": "- (void) setTranslatesAutoresizingMaskIntoConstraints:(BOOL) translatesAutoresizingMaskIntoConstraints\n{\n    [self setTranslatesAutoresizingMaskIntoConstraints___boolean:translatesAutoresizingMaskIntoConstraints];\n}\n\n",
      "super": "- (void) setTranslatesAutoresizingMaskIntoConstraints___boolean:(BOOL) translatesAutoresizingMaskIntoConstraints \n{\n    [super setTranslatesAutoresizingMaskIntoConstraints:translatesAutoresizingMaskIntoConstraints];\n}\n\n"
    },
    "setUserInteractionEnabled(boolean)": {
      "reverse": "- (void) setUserInteractionEnabled:(BOOL) userInteractionEnabled\n{\n    [self setUserInteractionEnabled___boolean:userInteractionEnabled];\n}\n\n",
      "super": "- (void) setUserInteractionEnabled___boolean:(BOOL) userInteractionEnabled \n{\n    [super setUserInteractionEnabled:userInteractionEnabled];\n}\n\n"
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": {
      "reverse": "- (CGSize) sizeThatFits:(CGSize) size\n{\n    crossmobile_ios_coregraphics_CGSize* size$conv = [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:size];\n    crossmobile_ios_coregraphics_CGSize* re$ult = [self sizeThatFits___crossmobile_ios_coregraphics_CGSize:size$conv];\n    CGSize re$ult$conv = [re$ult getCGSize];\n    [re$ult release];\n    [size$conv release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGSize*) sizeThatFits___crossmobile_ios_coregraphics_CGSize:(crossmobile_ios_coregraphics_CGSize*) size \n{\n    return [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:[super sizeThatFits:[size getCGSize]]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "sizeToFit()": {
      "reverse": "- (void) sizeToFit\n{\n    [self sizeToFit__];\n}\n\n",
      "super": "- (void) sizeToFit__\n{\n    [super sizeToFit];\n}\n\n"
    },
    "subviews()": {
      "reverse": "- (NSArray<__kindof UIView *> *) subviews\n{\n    NSArray<__kindof UIView *> * re$ult = [self subviews__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) subviews__\n{\n    NSArray* re$ult = [super subviews];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "superview()": {
      "reverse": "- (UIView *) superview\n{\n    UIView * re$ult = [self superview__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) superview__\n{\n    UIView* re$ult = [super superview];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "tag()": {
      "reverse": "- (NSInteger) tag\n{\n    return [self tag__];\n}\n\n",
      "super": "- (int) tag__\n{\n    return [super tag];\n}\n\n"
    },
    "tintAdjustmentMode()": {
      "reverse": "- (UIViewTintAdjustmentMode) tintAdjustmentMode\n{\n    return [self tintAdjustmentMode__];\n}\n\n",
      "super": "- (int) tintAdjustmentMode__\n{\n    return [super tintAdjustmentMode];\n}\n\n"
    },
    "tintColor()": {
      "reverse": "- (UIColor *) tintColor\n{\n    UIColor * re$ult = [self tintColor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIColor*) tintColor__\n{\n    UIColor* re$ult = [super tintColor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIColor"
      ]
    },
    "tintColorDidChange()": {
      "reverse": "- (void) tintColorDidChange\n{\n    [self tintColorDidChange__];\n}\n\n",
      "super": "- (void) tintColorDidChange__\n{\n    [super tintColorDidChange];\n}\n\n"
    },
    "topAnchor()": {
      "reverse": "- (NSLayoutYAxisAnchor *) topAnchor\n{\n    NSLayoutYAxisAnchor * re$ult = [self topAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutYAxisAnchor*) topAnchor__\n{\n    NSLayoutYAxisAnchor* re$ult = [super topAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutYAxisAnchor"
      ]
    },
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": {
      "reverse": "- (NSLayoutXAxisAnchor *) trailingAnchor\n{\n    NSLayoutXAxisAnchor * re$ult = [self trailingAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutXAxisAnchor*) trailingAnchor__\n{\n    NSLayoutXAxisAnchor* re$ult = [super trailingAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutXAxisAnchor"
      ]
    },
    "transform()": {
      "reverse": "- (CGAffineTransform) transform\n{\n    crossmobile_ios_coregraphics_CGAffineTransform* re$ult = [self transform__];\n    CGAffineTransform re$ult$conv = [re$ult getCGAffineTransform];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGAffineTransform*) transform__\n{\n    return [[crossmobile_ios_coregraphics_CGAffineTransform alloc] initWithCGAffineTransform:[super transform]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGAffineTransform"
      ]
    },
    "translatesAutoresizingMaskIntoConstraints()": {
      "reverse": "- (BOOL) translatesAutoresizingMaskIntoConstraints\n{\n    return [self translatesAutoresizingMaskIntoConstraints__];\n}\n\n",
      "super": "- (BOOL) translatesAutoresizingMaskIntoConstraints__\n{\n    return [super translatesAutoresizingMaskIntoConstraints];\n}\n\n"
    },
    "updateConstraints()": {
      "reverse": "- (void) updateConstraints\n{\n    [self updateConstraints__];\n}\n\n",
      "super": "- (void) updateConstraints__\n{\n    [super updateConstraints];\n}\n\n"
    },
    "updateConstraintsIfNeeded()": {
      "reverse": "- (void) updateConstraintsIfNeeded\n{\n    [self updateConstraintsIfNeeded__];\n}\n\n",
      "super": "- (void) updateConstraintsIfNeeded__\n{\n    [super updateConstraintsIfNeeded];\n}\n\n"
    },
    "userInterfaceLayoutDirection()": {
      "reverse": "- (UIUserInterfaceLayoutDirection) userInterfaceLayoutDirection\n{\n    return [self userInterfaceLayoutDirection__];\n}\n\n",
      "super": "- (int) userInterfaceLayoutDirection__\n{\n    return [super userInterfaceLayoutDirection];\n}\n\n"
    },
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": {
      "reverse": "- (UIView *) viewForFirstBaselineLayout\n{\n    UIView * re$ult = [self viewForFirstBaselineLayout__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) viewForFirstBaselineLayout__\n{\n    UIView* re$ult = [super viewForFirstBaselineLayout];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "viewForLastBaselineLayout()": {
      "reverse": "- (UIView *) viewForLastBaselineLayout\n{\n    UIView * re$ult = [self viewForLastBaselineLayout__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) viewForLastBaselineLayout__\n{\n    UIView* re$ult = [super viewForLastBaselineLayout];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "widthAnchor()": {
      "reverse": "- (NSLayoutDimension *) widthAnchor\n{\n    NSLayoutDimension * re$ult = [self widthAnchor__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSLayoutDimension*) widthAnchor__\n{\n    NSLayoutDimension* re$ult = [super widthAnchor];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_NSLayoutDimension"
      ]
    },
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) willMoveToSuperview:(UIView *) newSuperview\n{\n    [self willMoveToSuperview___crossmobile_ios_uikit_UIView:(newSuperview ? newSuperview : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willMoveToSuperview___crossmobile_ios_uikit_UIView:(UIView*) newSuperview \n{\n    [super willMoveToSuperview:(newSuperview == JAVA_NULL ? nil : newSuperview)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": {
      "reverse": "- (void) willMoveToWindow:(UIWindow *) newWindow\n{\n    [self willMoveToWindow___crossmobile_ios_uikit_UIWindow:(newWindow ? newWindow : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willMoveToWindow___crossmobile_ios_uikit_UIWindow:(UIWindow*) newWindow \n{\n    [super willMoveToWindow:(newWindow == JAVA_NULL ? nil : newWindow)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIWindow"
      ]
    },
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) willRemoveSubview:(UIView *) subview\n{\n    [self willRemoveSubview___crossmobile_ios_uikit_UIView:(subview ? subview : JAVA_NULL)];\n}\n\n",
      "super": "- (void) willRemoveSubview___crossmobile_ios_uikit_UIView:(UIView*) subview \n{\n    [super willRemoveSubview:(subview == JAVA_NULL ? nil : subview)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "window()": {
      "reverse": "- (UIWindow *) window\n{\n    UIWindow * re$ult = [self window__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIWindow*) window__\n{\n    UIWindow* re$ult = [super window];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIWindow"
      ]
    }
  },
  "crossmobile.ios.uikit.UIViewController": {
    "addChildViewController(crossmobile.ios.uikit.UIViewController)": {
      "reverse": "- (void) addChildViewController:(UIViewController *) childController\n{\n    [self addChildViewController___crossmobile_ios_uikit_UIViewController:(childController ? childController : JAVA_NULL)];\n}\n\n",
      "super": "- (void) addChildViewController___crossmobile_ios_uikit_UIViewController:(UIViewController*) childController \n{\n    [super addChildViewController:(childController == JAVA_NULL ? nil : childController)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "additionalSafeAreaInsets()": {
      "reverse": "- (UIEdgeInsets) additionalSafeAreaInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* re$ult = [self additionalSafeAreaInsets__];\n    UIEdgeInsets re$ult$conv = [re$ult getUIEdgeInsets];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_uikit_UIEdgeInsets*) additionalSafeAreaInsets__\n{\n    return [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:[super additionalSafeAreaInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "allowedChildViewControllersForUnwindingFromSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": {
      "reverse": "- (NSArray<UIViewController *> *) allowedChildViewControllersForUnwindingFromSource:(UIStoryboardUnwindSegueSource *) source\n{\n    NSArray<UIViewController *> * re$ult = [self allowedChildViewControllersForUnwindingFromSource___crossmobile_ios_uikit_UIStoryboardUnwindSegueSource:(source ? source : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) allowedChildViewControllersForUnwindingFromSource___crossmobile_ios_uikit_UIStoryboardUnwindSegueSource:(UIStoryboardUnwindSegueSource*) source \n{\n    NSArray* re$ult = [super allowedChildViewControllersForUnwindingFromSource:(source == JAVA_NULL ? nil : source)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIStoryboardUnwindSegueSource",
        "java_util_List"
      ]
    },
    "automaticallyAdjustsScrollViewInsets()": {
      "reverse": "- (BOOL) automaticallyAdjustsScrollViewInsets\n{\n    return [self automaticallyAdjustsScrollViewInsets__];\n}\n\n",
      "super": "- (BOOL) automaticallyAdjustsScrollViewInsets__\n{\n    return [super automaticallyAdjustsScrollViewInsets];\n}\n\n"
    },
    "becomeFirstResponder()": null,
    "beginAppearanceTransition(boolean,boolean)": {
      "reverse": "- (void) beginAppearanceTransition:(BOOL) isAppearing animated:(BOOL) animated\n{\n    [self beginAppearanceTransition___boolean_boolean:isAppearing :animated];\n}\n\n",
      "super": "- (void) beginAppearanceTransition___boolean_boolean:(BOOL) isAppearing :(BOOL) animated \n{\n    [super beginAppearanceTransition:isAppearing animated:animated];\n}\n\n"
    },
    "bottomLayoutGuide()": {
      "reverse": "- (id<UILayoutSupport>) bottomLayoutGuide\n{\n    id<UILayoutSupport> re$ult = [self bottomLayoutGuide__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UILayoutSupport>) bottomLayoutGuide__\n{\n    id<UILayoutSupport> re$ult = [super bottomLayoutGuide];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UILayoutSupport"
      ]
    },
    "childViewControllerContainingSegueSource(crossmobile.ios.uikit.UIStoryboardUnwindSegueSource)": {
      "reverse": "- (UIViewController *) childViewControllerContainingSegueSource:(UIStoryboardUnwindSegueSource *) source\n{\n    UIViewController * re$ult = [self childViewControllerContainingSegueSource___crossmobile_ios_uikit_UIStoryboardUnwindSegueSource:(source ? source : JAVA_NULL)];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) childViewControllerContainingSegueSource___crossmobile_ios_uikit_UIStoryboardUnwindSegueSource:(UIStoryboardUnwindSegueSource*) source \n{\n    UIViewController* re$ult = [super childViewControllerContainingSegueSource:(source == JAVA_NULL ? nil : source)];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIStoryboardUnwindSegueSource",
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "childViewControllerForStatusBarHidden()": {
      "reverse": "- (UIViewController *) childViewControllerForStatusBarHidden\n{\n    UIViewController * re$ult = [self childViewControllerForStatusBarHidden__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) childViewControllerForStatusBarHidden__\n{\n    UIViewController* re$ult = [super childViewControllerForStatusBarHidden];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "childViewControllerForStatusBarStyle()": {
      "reverse": "- (UIViewController *) childViewControllerForStatusBarStyle\n{\n    UIViewController * re$ult = [self childViewControllerForStatusBarStyle__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) childViewControllerForStatusBarStyle__\n{\n    UIViewController* re$ult = [super childViewControllerForStatusBarStyle];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "childViewControllers()": {
      "reverse": "- (NSArray<__kindof UIViewController *> *) childViewControllers\n{\n    NSArray<__kindof UIViewController *> * re$ult = [self childViewControllers__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) childViewControllers__\n{\n    NSArray* re$ult = [super childViewControllers];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "contentSizeForViewInPopover()": {
      "reverse": "- (CGSize) contentSizeForViewInPopover\n{\n    crossmobile_ios_coregraphics_CGSize* re$ult = [self contentSizeForViewInPopover__];\n    CGSize re$ult$conv = [re$ult getCGSize];\n    [re$ult release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGSize*) contentSizeForViewInPopover__\n{\n    return [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:[super contentSizeForViewInPopover]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "definesPresentationContext()": {
      "reverse": "- (BOOL) definesPresentationContext\n{\n    return [self definesPresentationContext__];\n}\n\n",
      "super": "- (BOOL) definesPresentationContext__\n{\n    return [super definesPresentationContext];\n}\n\n"
    },
    "didReceiveMemoryWarning()": {
      "reverse": "- (void) didReceiveMemoryWarning\n{\n    [self didReceiveMemoryWarning__];\n}\n\n",
      "super": "- (void) didReceiveMemoryWarning__\n{\n    [super didReceiveMemoryWarning];\n}\n\n"
    },
    "didRotateFromInterfaceOrientation(int)": {
      "reverse": "- (void) didRotateFromInterfaceOrientation:(UIInterfaceOrientation) fromInterfaceOrientation\n{\n    [self didRotateFromInterfaceOrientation___int:fromInterfaceOrientation];\n}\n\n",
      "super": "- (void) didRotateFromInterfaceOrientation___int:(int) fromInterfaceOrientation \n{\n    [super didRotateFromInterfaceOrientation:fromInterfaceOrientation];\n}\n\n"
    },
    "disablesAutomaticKeyboardDismissal()": {
      "reverse": "- (BOOL) disablesAutomaticKeyboardDismissal\n{\n    return [self disablesAutomaticKeyboardDismissal__];\n}\n\n",
      "super": "- (BOOL) disablesAutomaticKeyboardDismissal__\n{\n    return [super disablesAutomaticKeyboardDismissal];\n}\n\n"
    },
    "dismissModalViewControllerAnimated(boolean)": {
      "reverse": "- (void) dismissModalViewControllerAnimated:(BOOL) animated\n{\n    [self dismissModalViewControllerAnimated___boolean:animated];\n}\n\n",
      "super": "- (void) dismissModalViewControllerAnimated___boolean:(BOOL) animated \n{\n    [super dismissModalViewControllerAnimated:animated];\n}\n\n"
    },
    "edgesForExtendedLayout()": {
      "reverse": "- (UIRectEdge) edgesForExtendedLayout\n{\n    return [self edgesForExtendedLayout__];\n}\n\n",
      "super": "- (int) edgesForExtendedLayout__\n{\n    return [super edgesForExtendedLayout];\n}\n\n"
    },
    "editButtonItem()": {
      "reverse": "- (UIBarButtonItem *) editButtonItem\n{\n    UIBarButtonItem * re$ult = [self editButtonItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIBarButtonItem*) editButtonItem__\n{\n    UIBarButtonItem* re$ult = [super editButtonItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIBarButtonItem"
      ]
    },
    "endAppearanceTransition()": {
      "reverse": "- (void) endAppearanceTransition\n{\n    [self endAppearanceTransition__];\n}\n\n",
      "super": "- (void) endAppearanceTransition__\n{\n    [super endAppearanceTransition];\n}\n\n"
    },
    "extensionContext()": {
      "reverse": "- (NSExtensionContext *) extensionContext\n{\n    NSExtensionContext * re$ult = [self extensionContext__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSExtensionContext*) extensionContext__\n{\n    NSExtensionContext* re$ult = [super extensionContext];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_foundation_NSExtensionContext"
      ]
    },
    "hidesBottomBarWhenPushed()": {
      "reverse": "- (BOOL) hidesBottomBarWhenPushed\n{\n    return [self hidesBottomBarWhenPushed__];\n}\n\n",
      "super": "- (BOOL) hidesBottomBarWhenPushed__\n{\n    return [super hidesBottomBarWhenPushed];\n}\n\n"
    },
    "interfaceOrientation()": {
      "reverse": "- (UIInterfaceOrientation) interfaceOrientation\n{\n    return [self interfaceOrientation__];\n}\n\n",
      "super": "- (int) interfaceOrientation__\n{\n    return [super interfaceOrientation];\n}\n\n"
    },
    "isEditing()": {
      "reverse": "- (BOOL) isEditing\n{\n    return [self isEditing__];\n}\n\n",
      "super": "- (BOOL) isEditing__\n{\n    return [super isEditing];\n}\n\n"
    },
    "isFirstResponder()": null,
    "isModalInPopover()": {
      "reverse": "- (BOOL) isModalInPopover\n{\n    return [self isModalInPopover__];\n}\n\n",
      "super": "- (BOOL) isModalInPopover__\n{\n    return [super isModalInPopover];\n}\n\n"
    },
    "isViewLoaded()": {
      "reverse": "- (BOOL) isViewLoaded\n{\n    return [self isViewLoaded__];\n}\n\n",
      "super": "- (BOOL) isViewLoaded__\n{\n    return [super isViewLoaded];\n}\n\n"
    },
    "loadView()": {
      "reverse": "- (void) loadView\n{\n    [self loadView__];\n}\n\n",
      "super": "- (void) loadView__\n{\n    [super loadView];\n}\n\n"
    },
    "loadViewIfNeeded()": {
      "reverse": "- (void) loadViewIfNeeded\n{\n    [self loadViewIfNeeded__];\n}\n\n",
      "super": "- (void) loadViewIfNeeded__\n{\n    [super loadViewIfNeeded];\n}\n\n"
    },
    "modalPresentationStyle()": {
      "reverse": "- (UIModalPresentationStyle) modalPresentationStyle\n{\n    return [self modalPresentationStyle__];\n}\n\n",
      "super": "- (int) modalPresentationStyle__\n{\n    return [super modalPresentationStyle];\n}\n\n"
    },
    "modalTransitionStyle()": {
      "reverse": "- (UIModalTransitionStyle) modalTransitionStyle\n{\n    return [self modalTransitionStyle__];\n}\n\n",
      "super": "- (int) modalTransitionStyle__\n{\n    return [super modalTransitionStyle];\n}\n\n"
    },
    "navigationController()": {
      "reverse": "- (UINavigationController *) navigationController\n{\n    UINavigationController * re$ult = [self navigationController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UINavigationController*) navigationController__\n{\n    UINavigationController* re$ult = [super navigationController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationController"
      ]
    },
    "navigationItem()": {
      "reverse": "- (UINavigationItem *) navigationItem\n{\n    UINavigationItem * re$ult = [self navigationItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UINavigationItem*) navigationItem__\n{\n    UINavigationItem* re$ult = [super navigationItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UINavigationItem"
      ]
    },
    "nextResponder()": null,
    "nibName()": {
      "reverse": "- (NSString *) nibName\n{\n    NSString * re$ult = [self nibName__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) nibName__\n{\n    NSString* re$ult = [super nibName];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "parentViewController()": {
      "reverse": "- (UIViewController *) parentViewController\n{\n    UIViewController * re$ult = [self parentViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) parentViewController__\n{\n    UIViewController* re$ult = [super parentViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "performSegueWithIdentifier(java.lang.String,java.lang.Object)": {
      "reverse": "- (void) performSegueWithIdentifier:(NSString *) identifier sender:(id) sender\n{\n    [self performSegueWithIdentifier___java_lang_String_java_lang_Object:(identifier ? identifier : JAVA_NULL) :(sender ? sender : JAVA_NULL)];\n}\n\n",
      "super": "- (void) performSegueWithIdentifier___java_lang_String_java_lang_Object:(NSString*) identifier :(id) sender \n{\n    [super performSegueWithIdentifier:(identifier == JAVA_NULL ? nil : identifier) sender:(sender == JAVA_NULL ? nil : sender)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String"
      ]
    },
    "preferredInterfaceOrientationForPresentation()": {
      "reverse": "- (UIInterfaceOrientation) preferredInterfaceOrientationForPresentation\n{\n    return [self preferredInterfaceOrientationForPresentation__];\n}\n\n",
      "super": "- (int) preferredInterfaceOrientationForPresentation__\n{\n    return [super preferredInterfaceOrientationForPresentation];\n}\n\n"
    },
    "preferredStatusBarStyle()": {
      "reverse": "- (UIStatusBarStyle) preferredStatusBarStyle\n{\n    return [self preferredStatusBarStyle__];\n}\n\n",
      "super": "- (int) preferredStatusBarStyle__\n{\n    return [super preferredStatusBarStyle];\n}\n\n"
    },
    "prefersStatusBarHidden()": {
      "reverse": "- (BOOL) prefersStatusBarHidden\n{\n    return [self prefersStatusBarHidden__];\n}\n\n",
      "super": "- (BOOL) prefersStatusBarHidden__\n{\n    return [super prefersStatusBarHidden];\n}\n\n"
    },
    "prepareForSegue(crossmobile.ios.uikit.UIStoryboardSegue,java.lang.Object)": {
      "reverse": "- (void) prepareForSegue:(UIStoryboardSegue *) segue sender:(id) sender\n{\n    [self prepareForSegue___crossmobile_ios_uikit_UIStoryboardSegue_java_lang_Object:(segue ? segue : JAVA_NULL) :(sender ? sender : JAVA_NULL)];\n}\n\n",
      "super": "- (void) prepareForSegue___crossmobile_ios_uikit_UIStoryboardSegue_java_lang_Object:(UIStoryboardSegue*) segue :(id) sender \n{\n    [super prepareForSegue:(segue == JAVA_NULL ? nil : segue) sender:(sender == JAVA_NULL ? nil : sender)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIStoryboardSegue",
        "java_lang_Object"
      ]
    },
    "presentModalViewController(crossmobile.ios.uikit.UIViewController,boolean)": {
      "reverse": "- (void) presentModalViewController:(UIViewController *) modalViewController animated:(BOOL) animated\n{\n    [self presentModalViewController___crossmobile_ios_uikit_UIViewController_boolean:(modalViewController ? modalViewController : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) presentModalViewController___crossmobile_ios_uikit_UIViewController_boolean:(UIViewController*) modalViewController :(BOOL) animated \n{\n    [super presentModalViewController:(modalViewController == JAVA_NULL ? nil : modalViewController) animated:animated];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "presentedViewController()": {
      "reverse": "- (UIViewController *) presentedViewController\n{\n    UIViewController * re$ult = [self presentedViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) presentedViewController__\n{\n    UIViewController* re$ult = [super presentedViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "presentingViewController()": {
      "reverse": "- (UIViewController *) presentingViewController\n{\n    UIViewController * re$ult = [self presentingViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) presentingViewController__\n{\n    UIViewController* re$ult = [super presentingViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "providesPresentationContextTransitionStyle()": {
      "reverse": "- (BOOL) providesPresentationContextTransitionStyle\n{\n    return [self providesPresentationContextTransitionStyle__];\n}\n\n",
      "super": "- (BOOL) providesPresentationContextTransitionStyle__\n{\n    return [super providesPresentationContextTransitionStyle];\n}\n\n"
    },
    "removeFromParentViewController()": {
      "reverse": "- (void) removeFromParentViewController\n{\n    [self removeFromParentViewController__];\n}\n\n",
      "super": "- (void) removeFromParentViewController__\n{\n    [super removeFromParentViewController];\n}\n\n"
    },
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": {
      "reverse": "- (NSString *) restorationIdentifier\n{\n    NSString * re$ult = [self restorationIdentifier__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) restorationIdentifier__\n{\n    NSString* re$ult = [super restorationIdentifier];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "rotatingFooterView()": {
      "reverse": "- (UIView *) rotatingFooterView\n{\n    UIView * re$ult = [self rotatingFooterView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) rotatingFooterView__\n{\n    UIView* re$ult = [super rotatingFooterView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "rotatingHeaderView()": {
      "reverse": "- (UIView *) rotatingHeaderView\n{\n    UIView * re$ult = [self rotatingHeaderView__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) rotatingHeaderView__\n{\n    UIView* re$ult = [super rotatingHeaderView];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "setAdditionalSafeAreaInsets(crossmobile.ios.uikit.UIEdgeInsets)": {
      "reverse": "- (void) setAdditionalSafeAreaInsets:(UIEdgeInsets) additionalSafeAreaInsets\n{\n    crossmobile_ios_uikit_UIEdgeInsets* additionalSafeAreaInsets$conv = [[crossmobile_ios_uikit_UIEdgeInsets alloc] initWithUIEdgeInsets:additionalSafeAreaInsets];\n    [self setAdditionalSafeAreaInsets___crossmobile_ios_uikit_UIEdgeInsets:additionalSafeAreaInsets$conv];\n    [additionalSafeAreaInsets$conv release];\n}\n\n",
      "super": "- (void) setAdditionalSafeAreaInsets___crossmobile_ios_uikit_UIEdgeInsets:(crossmobile_ios_uikit_UIEdgeInsets*) additionalSafeAreaInsets \n{\n    [super setAdditionalSafeAreaInsets:[additionalSafeAreaInsets getUIEdgeInsets]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEdgeInsets"
      ]
    },
    "setAutomaticallyAdjustsScrollViewInsets(boolean)": {
      "reverse": "- (void) setAutomaticallyAdjustsScrollViewInsets:(BOOL) automaticallyAdjustsScrollViewInsets\n{\n    [self setAutomaticallyAdjustsScrollViewInsets___boolean:automaticallyAdjustsScrollViewInsets];\n}\n\n",
      "super": "- (void) setAutomaticallyAdjustsScrollViewInsets___boolean:(BOOL) automaticallyAdjustsScrollViewInsets \n{\n    [super setAutomaticallyAdjustsScrollViewInsets:automaticallyAdjustsScrollViewInsets];\n}\n\n"
    },
    "setContentSizeForViewInPopover(crossmobile.ios.coregraphics.CGSize)": {
      "reverse": "- (void) setContentSizeForViewInPopover:(CGSize) contentSizeForViewInPopover\n{\n    crossmobile_ios_coregraphics_CGSize* contentSizeForViewInPopover$conv = [[crossmobile_ios_coregraphics_CGSize alloc] initWithCGSize:contentSizeForViewInPopover];\n    [self setContentSizeForViewInPopover___crossmobile_ios_coregraphics_CGSize:contentSizeForViewInPopover$conv];\n    [contentSizeForViewInPopover$conv release];\n}\n\n",
      "super": "- (void) setContentSizeForViewInPopover___crossmobile_ios_coregraphics_CGSize:(crossmobile_ios_coregraphics_CGSize*) contentSizeForViewInPopover \n{\n    [super setContentSizeForViewInPopover:[contentSizeForViewInPopover getCGSize]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGSize"
      ]
    },
    "setDefinesPresentationContext(boolean)": {
      "reverse": "- (void) setDefinesPresentationContext:(BOOL) definesPresentationContext\n{\n    [self setDefinesPresentationContext___boolean:definesPresentationContext];\n}\n\n",
      "super": "- (void) setDefinesPresentationContext___boolean:(BOOL) definesPresentationContext \n{\n    [super setDefinesPresentationContext:definesPresentationContext];\n}\n\n"
    },
    "setEdgesForExtendedLayout(int)": {
      "reverse": "- (void) setEdgesForExtendedLayout:(UIRectEdge) edgesForExtendedLayout\n{\n    [self setEdgesForExtendedLayout___int:edgesForExtendedLayout];\n}\n\n",
      "super": "- (void) setEdgesForExtendedLayout___int:(int) edgesForExtendedLayout \n{\n    [super setEdgesForExtendedLayout:edgesForExtendedLayout];\n}\n\n"
    },
    "setEditing(boolean)": {
      "reverse": "- (void) setEditing:(BOOL) editing\n{\n    [self setEditing___boolean:editing];\n}\n\n",
      "super": "- (void) setEditing___boolean:(BOOL) editing \n{\n    [super setEditing:editing];\n}\n\n"
    },
    "setEditing(boolean,boolean)": {
      "reverse": "- (void) setEditing:(BOOL) editing animated:(BOOL) animated\n{\n    [self setEditing___boolean_boolean:editing :animated];\n}\n\n",
      "super": "- (void) setEditing___boolean_boolean:(BOOL) editing :(BOOL) animated \n{\n    [super setEditing:editing animated:animated];\n}\n\n"
    },
    "setHidesBottomBarWhenPushed(boolean)": {
      "reverse": "- (void) setHidesBottomBarWhenPushed:(BOOL) hidesBottomBarWhenPushed\n{\n    [self setHidesBottomBarWhenPushed___boolean:hidesBottomBarWhenPushed];\n}\n\n",
      "super": "- (void) setHidesBottomBarWhenPushed___boolean:(BOOL) hidesBottomBarWhenPushed \n{\n    [super setHidesBottomBarWhenPushed:hidesBottomBarWhenPushed];\n}\n\n"
    },
    "setModalInPopover(boolean)": {
      "reverse": "- (void) setModalInPopover:(BOOL) modalInPopover\n{\n    [self setModalInPopover___boolean:modalInPopover];\n}\n\n",
      "super": "- (void) setModalInPopover___boolean:(BOOL) modalInPopover \n{\n    [super setModalInPopover:modalInPopover];\n}\n\n"
    },
    "setModalPresentationStyle(int)": {
      "reverse": "- (void) setModalPresentationStyle:(UIModalPresentationStyle) modalPresentationStyle\n{\n    [self setModalPresentationStyle___int:modalPresentationStyle];\n}\n\n",
      "super": "- (void) setModalPresentationStyle___int:(int) modalPresentationStyle \n{\n    [super setModalPresentationStyle:modalPresentationStyle];\n}\n\n"
    },
    "setModalTransitionStyle(int)": {
      "reverse": "- (void) setModalTransitionStyle:(UIModalTransitionStyle) modalTransitionStyle\n{\n    [self setModalTransitionStyle___int:modalTransitionStyle];\n}\n\n",
      "super": "- (void) setModalTransitionStyle___int:(int) modalTransitionStyle \n{\n    [super setModalTransitionStyle:modalTransitionStyle];\n}\n\n"
    },
    "setNeedsStatusBarAppearanceUpdate()": {
      "reverse": "- (void) setNeedsStatusBarAppearanceUpdate\n{\n    [self setNeedsStatusBarAppearanceUpdate__];\n}\n\n",
      "super": "- (void) setNeedsStatusBarAppearanceUpdate__\n{\n    [super setNeedsStatusBarAppearanceUpdate];\n}\n\n"
    },
    "setProvidesPresentationContextTransitionStyle(boolean)": {
      "reverse": "- (void) setProvidesPresentationContextTransitionStyle:(BOOL) providesPresentationContextTransitionStyle\n{\n    [self setProvidesPresentationContextTransitionStyle___boolean:providesPresentationContextTransitionStyle];\n}\n\n",
      "super": "- (void) setProvidesPresentationContextTransitionStyle___boolean:(BOOL) providesPresentationContextTransitionStyle \n{\n    [super setProvidesPresentationContextTransitionStyle:providesPresentationContextTransitionStyle];\n}\n\n"
    },
    "setRestorationIdentifier(java.lang.String)": {
      "reverse": "- (void) setRestorationIdentifier:(NSString *) restorationIdentifier\n{\n    [self setRestorationIdentifier___java_lang_String:(restorationIdentifier ? restorationIdentifier : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setRestorationIdentifier___java_lang_String:(NSString*) restorationIdentifier \n{\n    [super setRestorationIdentifier:(restorationIdentifier == JAVA_NULL ? nil : restorationIdentifier)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setTabBarItem(crossmobile.ios.uikit.UITabBarItem)": {
      "reverse": "- (void) setTabBarItem:(UITabBarItem *) tabBarItem\n{\n    [self setTabBarItem___crossmobile_ios_uikit_UITabBarItem:(tabBarItem ? tabBarItem : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTabBarItem___crossmobile_ios_uikit_UITabBarItem:(UITabBarItem*) tabBarItem \n{\n    [super setTabBarItem:(tabBarItem == JAVA_NULL ? nil : tabBarItem)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarItem"
      ]
    },
    "setTitle(java.lang.String)": {
      "reverse": "- (void) setTitle:(NSString *) title\n{\n    [self setTitle___java_lang_String:(title ? title : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setTitle___java_lang_String:(NSString*) title \n{\n    [super setTitle:(title == JAVA_NULL ? nil : title)];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "setToolbarItems(java.util.List)": {
      "reverse": "- (void) setToolbarItems:(NSArray<__kindof UIBarButtonItem *> *) toolbarItems\n{\n    [self setToolbarItems___java_util_List:(toolbarItems ? toolbarItems : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setToolbarItems___java_util_List:(NSArray*) toolbarItems \n{\n    [super setToolbarItems:(toolbarItems == JAVA_NULL ? nil : toolbarItems)];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setToolbarItems(java.util.List,boolean)": {
      "reverse": "- (void) setToolbarItems:(NSArray<UIBarButtonItem *> *) toolbarItems animated:(BOOL) animated\n{\n    [self setToolbarItems___java_util_List_boolean:(toolbarItems ? toolbarItems : JAVA_NULL) :animated];\n}\n\n",
      "super": "- (void) setToolbarItems___java_util_List_boolean:(NSArray*) toolbarItems :(BOOL) animated \n{\n    [super setToolbarItems:(toolbarItems == JAVA_NULL ? nil : toolbarItems) animated:animated];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "setView(crossmobile.ios.uikit.UIView)": {
      "reverse": "- (void) setView:(UIView *) view\n{\n    [self setView___crossmobile_ios_uikit_UIView:(view ? view : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setView___crossmobile_ios_uikit_UIView:(UIView*) view \n{\n    [super setView:(view == JAVA_NULL ? nil : view)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "setWantsFullScreenLayout(boolean)": {
      "reverse": "- (void) setWantsFullScreenLayout:(BOOL) wantsFullScreenLayout\n{\n    [self setWantsFullScreenLayout___boolean:wantsFullScreenLayout];\n}\n\n",
      "super": "- (void) setWantsFullScreenLayout___boolean:(BOOL) wantsFullScreenLayout \n{\n    [super setWantsFullScreenLayout:wantsFullScreenLayout];\n}\n\n"
    },
    "shouldAutomaticallyForwardAppearanceMethods()": {
      "reverse": "- (BOOL) shouldAutomaticallyForwardAppearanceMethods\n{\n    return [self shouldAutomaticallyForwardAppearanceMethods__];\n}\n\n",
      "super": "- (BOOL) shouldAutomaticallyForwardAppearanceMethods__\n{\n    return [super shouldAutomaticallyForwardAppearanceMethods];\n}\n\n"
    },
    "shouldAutorotate()": {
      "reverse": "- (BOOL) shouldAutorotate\n{\n    return [self shouldAutorotate__];\n}\n\n",
      "super": "- (BOOL) shouldAutorotate__\n{\n    return [super shouldAutorotate];\n}\n\n"
    },
    "shouldAutorotateToInterfaceOrientation(int)": {
      "reverse": "- (BOOL) shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation) toInterfaceOrientation\n{\n    return [self shouldAutorotateToInterfaceOrientation___int:toInterfaceOrientation];\n}\n\n",
      "super": "- (BOOL) shouldAutorotateToInterfaceOrientation___int:(int) toInterfaceOrientation \n{\n    return [super shouldAutorotateToInterfaceOrientation:toInterfaceOrientation];\n}\n\n"
    },
    "shouldPerformSegueWithIdentifier(java.lang.String,java.lang.Object)": {
      "reverse": "- (BOOL) shouldPerformSegueWithIdentifier:(NSString *) identifier sender:(id) sender\n{\n    return [self shouldPerformSegueWithIdentifier___java_lang_String_java_lang_Object:(identifier ? identifier : JAVA_NULL) :(sender ? sender : JAVA_NULL)];\n}\n\n",
      "super": "- (BOOL) shouldPerformSegueWithIdentifier___java_lang_String_java_lang_Object:(NSString*) identifier :(id) sender \n{\n    return [super shouldPerformSegueWithIdentifier:(identifier == JAVA_NULL ? nil : identifier) sender:(sender == JAVA_NULL ? nil : sender)];\n}\n\n",
      "supimport": [
        "java_lang_Object",
        "java_lang_String"
      ]
    },
    "showDetailViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": {
      "reverse": "- (void) showDetailViewController:(UIViewController *) vc sender:(id) sender\n{\n    [self showDetailViewController___crossmobile_ios_uikit_UIViewController_java_lang_Object:(vc ? vc : JAVA_NULL) :(sender ? sender : JAVA_NULL)];\n}\n\n",
      "super": "- (void) showDetailViewController___crossmobile_ios_uikit_UIViewController_java_lang_Object:(UIViewController*) vc :(id) sender \n{\n    [super showDetailViewController:(vc == JAVA_NULL ? nil : vc) sender:(sender == JAVA_NULL ? nil : sender)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController",
        "java_lang_Object"
      ]
    },
    "showViewController(crossmobile.ios.uikit.UIViewController,java.lang.Object)": {
      "reverse": "- (void) showViewController:(UIViewController *) vc sender:(id) sender\n{\n    [self showViewController___crossmobile_ios_uikit_UIViewController_java_lang_Object:(vc ? vc : JAVA_NULL) :(sender ? sender : JAVA_NULL)];\n}\n\n",
      "super": "- (void) showViewController___crossmobile_ios_uikit_UIViewController_java_lang_Object:(UIViewController*) vc :(id) sender \n{\n    [super showViewController:(vc == JAVA_NULL ? nil : vc) sender:(sender == JAVA_NULL ? nil : sender)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController",
        "java_lang_Object"
      ]
    },
    "splitViewController()": {
      "reverse": "- (UISplitViewController *) splitViewController\n{\n    UISplitViewController * re$ult = [self splitViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UISplitViewController*) splitViewController__\n{\n    UISplitViewController* re$ult = [super splitViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UISplitViewController"
      ]
    },
    "storyboard()": {
      "reverse": "- (UIStoryboard *) storyboard\n{\n    UIStoryboard * re$ult = [self storyboard__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIStoryboard*) storyboard__\n{\n    UIStoryboard* re$ult = [super storyboard];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIStoryboard"
      ]
    },
    "supportedInterfaceOrientations()": {
      "reverse": "- (UIInterfaceOrientationMask) supportedInterfaceOrientations\n{\n    return [self supportedInterfaceOrientations__];\n}\n\n",
      "super": "- (int) supportedInterfaceOrientations__\n{\n    return [super supportedInterfaceOrientations];\n}\n\n"
    },
    "tabBarController()": {
      "reverse": "- (UITabBarController *) tabBarController\n{\n    UITabBarController * re$ult = [self tabBarController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UITabBarController*) tabBarController__\n{\n    UITabBarController* re$ult = [super tabBarController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarController"
      ]
    },
    "tabBarItem()": {
      "reverse": "- (UITabBarItem *) tabBarItem\n{\n    UITabBarItem * re$ult = [self tabBarItem__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UITabBarItem*) tabBarItem__\n{\n    UITabBarItem* re$ult = [super tabBarItem];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UITabBarItem"
      ]
    },
    "title()": {
      "reverse": "- (NSString *) title\n{\n    NSString * re$ult = [self title__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSString*) title__\n{\n    NSString* re$ult = [super title];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_lang_String"
      ]
    },
    "toolbarItems()": {
      "reverse": "- (NSArray<__kindof UIBarButtonItem *> *) toolbarItems\n{\n    NSArray<__kindof UIBarButtonItem *> * re$ult = [self toolbarItems__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (NSArray*) toolbarItems__\n{\n    NSArray* re$ult = [super toolbarItems];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "java_util_List"
      ]
    },
    "topLayoutGuide()": {
      "reverse": "- (id<UILayoutSupport>) topLayoutGuide\n{\n    id<UILayoutSupport> re$ult = [self topLayoutGuide__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (id<UILayoutSupport>) topLayoutGuide__\n{\n    id<UILayoutSupport> re$ult = [super topLayoutGuide];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UILayoutSupport"
      ]
    },
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "view()": {
      "reverse": "- (UIView *) view\n{\n    UIView * re$ult = [self view__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) view__\n{\n    UIView* re$ult = [super view];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "viewDidAppear(boolean)": {
      "reverse": "- (void) viewDidAppear:(BOOL) animated\n{\n    [self viewDidAppear___boolean:animated];\n}\n\n",
      "super": "- (void) viewDidAppear___boolean:(BOOL) animated \n{\n    [super viewDidAppear:animated];\n}\n\n"
    },
    "viewDidDisappear(boolean)": {
      "reverse": "- (void) viewDidDisappear:(BOOL) animated\n{\n    [self viewDidDisappear___boolean:animated];\n}\n\n",
      "super": "- (void) viewDidDisappear___boolean:(BOOL) animated \n{\n    [super viewDidDisappear:animated];\n}\n\n"
    },
    "viewDidLayoutSubviews()": {
      "reverse": "- (void) viewDidLayoutSubviews\n{\n    [self viewDidLayoutSubviews__];\n}\n\n",
      "super": "- (void) viewDidLayoutSubviews__\n{\n    [super viewDidLayoutSubviews];\n}\n\n"
    },
    "viewDidLoad()": {
      "reverse": "- (void) viewDidLoad\n{\n    [self viewDidLoad__];\n}\n\n",
      "super": "- (void) viewDidLoad__\n{\n    [super viewDidLoad];\n}\n\n"
    },
    "viewDidUnload()": {
      "reverse": "- (void) viewDidUnload\n{\n    [self viewDidUnload__];\n}\n\n",
      "super": "- (void) viewDidUnload__\n{\n    [super viewDidUnload];\n}\n\n"
    },
    "viewIfLoaded()": {
      "reverse": "- (UIView *) viewIfLoaded\n{\n    UIView * re$ult = [self viewIfLoaded__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIView*) viewIfLoaded__\n{\n    UIView* re$ult = [super viewIfLoaded];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIView"
      ]
    },
    "viewSafeAreaInsetsDidChange()": {
      "reverse": "- (void) viewSafeAreaInsetsDidChange\n{\n    [self viewSafeAreaInsetsDidChange__];\n}\n\n",
      "super": "- (void) viewSafeAreaInsetsDidChange__\n{\n    [super viewSafeAreaInsetsDidChange];\n}\n\n"
    },
    "viewWillAppear(boolean)": {
      "reverse": "- (void) viewWillAppear:(BOOL) animated\n{\n    [self viewWillAppear___boolean:animated];\n}\n\n",
      "super": "- (void) viewWillAppear___boolean:(BOOL) animated \n{\n    [super viewWillAppear:animated];\n}\n\n"
    },
    "viewWillDisappear(boolean)": {
      "reverse": "- (void) viewWillDisappear:(BOOL) animated\n{\n    [self viewWillDisappear___boolean:animated];\n}\n\n",
      "super": "- (void) viewWillDisappear___boolean:(BOOL) animated \n{\n    [super viewWillDisappear:animated];\n}\n\n"
    },
    "viewWillLayoutSubviews()": {
      "reverse": "- (void) viewWillLayoutSubviews\n{\n    [self viewWillLayoutSubviews__];\n}\n\n",
      "super": "- (void) viewWillLayoutSubviews__\n{\n    [super viewWillLayoutSubviews];\n}\n\n"
    },
    "wantsFullScreenLayout()": {
      "reverse": "- (BOOL) wantsFullScreenLayout\n{\n    return [self wantsFullScreenLayout__];\n}\n\n",
      "super": "- (BOOL) wantsFullScreenLayout__\n{\n    return [super wantsFullScreenLayout];\n}\n\n"
    },
    "willAnimateRotationToInterfaceOrientation(int,double)": {
      "reverse": "- (void) willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation) toInterfaceOrientation duration:(NSTimeInterval) duration\n{\n    [self willAnimateRotationToInterfaceOrientation___int_double:toInterfaceOrientation :duration];\n}\n\n",
      "super": "- (void) willAnimateRotationToInterfaceOrientation___int_double:(int) toInterfaceOrientation :(double) duration \n{\n    [super willAnimateRotationToInterfaceOrientation:toInterfaceOrientation duration:duration];\n}\n\n"
    },
    "willRotateToInterfaceOrientation(int,double)": {
      "reverse": "- (void) willRotateToInterfaceOrientation:(UIInterfaceOrientation) toInterfaceOrientation duration:(NSTimeInterval) duration\n{\n    [self willRotateToInterfaceOrientation___int_double:toInterfaceOrientation :duration];\n}\n\n",
      "super": "- (void) willRotateToInterfaceOrientation___int_double:(int) toInterfaceOrientation :(double) duration \n{\n    [super willRotateToInterfaceOrientation:toInterfaceOrientation duration:duration];\n}\n\n"
    }
  },
  "crossmobile.ios.uikit.UIWindow": {
    "accessibilityIdentifier()": null,
    "addConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "addConstraints(java.util.List)": null,
    "addGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "addLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "addObserver(crossmobile.ios.foundation.NSObject,java.lang.String,int,java.lang.Object)": null,
    "addSubview(crossmobile.ios.uikit.UIView)": null,
    "alpha()": null,
    "autoresizesSubviews()": null,
    "autoresizingMask()": null,
    "backgroundColor()": null,
    "becomeFirstResponder()": null,
    "bottomAnchor()": null,
    "bounds()": null,
    "bringSubviewToFront(crossmobile.ios.uikit.UIView)": null,
    "center()": null,
    "centerXAnchor()": null,
    "centerYAnchor()": null,
    "clipsToBounds()": null,
    "constraints()": null,
    "contentCompressionResistancePriorityForAxis(int)": null,
    "contentHuggingPriorityForAxis(int)": null,
    "contentMode()": null,
    "convertPointFromView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointFromWindow(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIWindow)": {
      "reverse": "- (CGPoint) convertPoint:(CGPoint) point fromWindow:(UIWindow *) window\n{\n    crossmobile_ios_coregraphics_CGPoint* point$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:point];\n    crossmobile_ios_coregraphics_CGPoint* re$ult = [self convertPointFromWindow___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIWindow:point$conv :(window ? window : JAVA_NULL)];\n    CGPoint re$ult$conv = [re$ult getCGPoint];\n    [re$ult release];\n    [point$conv release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPoint*) convertPointFromWindow___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIWindow:(crossmobile_ios_coregraphics_CGPoint*) point :(UIWindow*) window \n{\n    return [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:[super convertPoint:[point getCGPoint] fromWindow:(window == JAVA_NULL ? nil : window)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_uikit_UIWindow"
      ]
    },
    "convertPointToView(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIView)": null,
    "convertPointToWindow(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIWindow)": {
      "reverse": "- (CGPoint) convertPoint:(CGPoint) point toWindow:(UIWindow *) window\n{\n    crossmobile_ios_coregraphics_CGPoint* point$conv = [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:point];\n    crossmobile_ios_coregraphics_CGPoint* re$ult = [self convertPointToWindow___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIWindow:point$conv :(window ? window : JAVA_NULL)];\n    CGPoint re$ult$conv = [re$ult getCGPoint];\n    [re$ult release];\n    [point$conv release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGPoint*) convertPointToWindow___crossmobile_ios_coregraphics_CGPoint_crossmobile_ios_uikit_UIWindow:(crossmobile_ios_coregraphics_CGPoint*) point :(UIWindow*) window \n{\n    return [[crossmobile_ios_coregraphics_CGPoint alloc] initWithCGPoint:[super convertPoint:[point getCGPoint] toWindow:(window == JAVA_NULL ? nil : window)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGPoint",
        "crossmobile_ios_uikit_UIWindow"
      ]
    },
    "convertRectFromView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectFromWindow(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIWindow)": {
      "reverse": "- (CGRect) convertRect:(CGRect) rect fromWindow:(UIWindow *) window\n{\n    crossmobile_ios_coregraphics_CGRect* rect$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:rect];\n    crossmobile_ios_coregraphics_CGRect* re$ult = [self convertRectFromWindow___crossmobile_ios_coregraphics_CGRect_crossmobile_ios_uikit_UIWindow:rect$conv :(window ? window : JAVA_NULL)];\n    CGRect re$ult$conv = [re$ult getCGRect];\n    [re$ult release];\n    [rect$conv release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGRect*) convertRectFromWindow___crossmobile_ios_coregraphics_CGRect_crossmobile_ios_uikit_UIWindow:(crossmobile_ios_coregraphics_CGRect*) rect :(UIWindow*) window \n{\n    return [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:[super convertRect:[rect getCGRect] fromWindow:(window == JAVA_NULL ? nil : window)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect",
        "crossmobile_ios_uikit_UIWindow"
      ]
    },
    "convertRectToView(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIView)": null,
    "convertRectToWindow(crossmobile.ios.coregraphics.CGRect,crossmobile.ios.uikit.UIWindow)": {
      "reverse": "- (CGRect) convertRect:(CGRect) rect toWindow:(UIWindow *) window\n{\n    crossmobile_ios_coregraphics_CGRect* rect$conv = [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:rect];\n    crossmobile_ios_coregraphics_CGRect* re$ult = [self convertRectToWindow___crossmobile_ios_coregraphics_CGRect_crossmobile_ios_uikit_UIWindow:rect$conv :(window ? window : JAVA_NULL)];\n    CGRect re$ult$conv = [re$ult getCGRect];\n    [re$ult release];\n    [rect$conv release];\n    return re$ult$conv;\n}\n\n",
      "super": "- (crossmobile_ios_coregraphics_CGRect*) convertRectToWindow___crossmobile_ios_coregraphics_CGRect_crossmobile_ios_uikit_UIWindow:(crossmobile_ios_coregraphics_CGRect*) rect :(UIWindow*) window \n{\n    return [[crossmobile_ios_coregraphics_CGRect alloc] initWithCGRect:[super convertRect:[rect getCGRect] toWindow:(window == JAVA_NULL ? nil : window)]];\n}\n\n",
      "supimport": [
        "crossmobile_ios_coregraphics_CGRect",
        "crossmobile_ios_uikit_UIWindow"
      ]
    },
    "didAddSubview(crossmobile.ios.uikit.UIView)": null,
    "didMoveToSuperview()": null,
    "didMoveToWindow()": null,
    "drawRect(crossmobile.ios.coregraphics.CGRect)": null,
    "frame()": null,
    "gestureRecognizers()": null,
    "heightAnchor()": null,
    "hitTest(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "insertSubview(crossmobile.ios.uikit.UIView,int)": null,
    "insetsLayoutMarginsFromSafeArea()": null,
    "intrinsicContentSize()": null,
    "invalidateIntrinsicContentSize()": null,
    "isFirstResponder()": null,
    "isHidden()": null,
    "isMultipleTouchEnabled()": null,
    "isOpaque()": null,
    "isUserInteractionEnabled()": null,
    "layer()": null,
    "layoutIfNeeded()": null,
    "layoutMargins()": null,
    "layoutMarginsDidChange()": null,
    "layoutMarginsGuide()": null,
    "layoutSubviews()": null,
    "leadingAnchor()": null,
    "leftAnchor()": null,
    "makeKeyAndVisible()": {
      "reverse": "- (void) makeKeyAndVisible\n{\n    [self makeKeyAndVisible__];\n}\n\n",
      "super": "- (void) makeKeyAndVisible__\n{\n    [super makeKeyAndVisible];\n}\n\n"
    },
    "maskView()": null,
    "needsUpdateConstraints()": null,
    "nextResponder()": null,
    "observeValueForKeyPath(java.lang.String,java.lang.Object,java.util.Map,java.lang.Object)": null,
    "overrideUserInterfaceStyle()": null,
    "pointInside(crossmobile.ios.coregraphics.CGPoint,crossmobile.ios.uikit.UIEvent)": null,
    "preservesSuperviewLayoutMargins()": null,
    "removeConstraint(crossmobile.ios.uikit.NSLayoutConstraint)": null,
    "removeConstraints(java.util.List)": null,
    "removeFromSuperview()": null,
    "removeGestureRecognizer(crossmobile.ios.uikit.UIGestureRecognizer)": null,
    "removeLayoutGuide(crossmobile.ios.uikit.UILayoutGuide)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String)": null,
    "removeObserver(crossmobile.ios.foundation.NSObject,java.lang.String,java.lang.Object)": null,
    "resignFirstResponder()": null,
    "restorationIdentifier()": null,
    "rightAnchor()": null,
    "rootViewController()": {
      "reverse": "- (UIViewController *) rootViewController\n{\n    UIViewController * re$ult = [self rootViewController__];\n    return [(re$ult == JAVA_NULL ? nil : re$ult) autorelease];\n}\n\n",
      "super": "- (UIViewController*) rootViewController__\n{\n    UIViewController* re$ult = [super rootViewController];\n    return [(re$ult ? re$ult : JAVA_NULL) retain];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "safeAreaInsets()": null,
    "safeAreaLayoutGuide()": null,
    "sendEvent(crossmobile.ios.uikit.UIEvent)": {
      "reverse": "- (void) sendEvent:(UIEvent *) event\n{\n    [self sendEvent___crossmobile_ios_uikit_UIEvent:(event ? event : JAVA_NULL)];\n}\n\n",
      "super": "- (void) sendEvent___crossmobile_ios_uikit_UIEvent:(UIEvent*) event \n{\n    [super sendEvent:(event == JAVA_NULL ? nil : event)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIEvent"
      ]
    },
    "sendSubviewToBack(crossmobile.ios.uikit.UIView)": null,
    "setAccessibilityIdentifier(java.lang.String)": null,
    "setAlpha(double)": null,
    "setAutoresizesSubviews(boolean)": null,
    "setAutoresizingMask(int)": null,
    "setBackgroundColor(crossmobile.ios.uikit.UIColor)": null,
    "setBounds(crossmobile.ios.coregraphics.CGRect)": null,
    "setCenter(crossmobile.ios.coregraphics.CGPoint)": null,
    "setClearsContextBeforeDrawing(boolean)": null,
    "setClipsToBounds(boolean)": null,
    "setContentCompressionResistancePriority(float,int)": null,
    "setContentHuggingPriority(float,int)": null,
    "setContentMode(int)": null,
    "setFrame(crossmobile.ios.coregraphics.CGRect)": null,
    "setGestureRecognizers(java.util.List)": null,
    "setHidden(boolean)": null,
    "setInsetsLayoutMarginsFromSafeArea(boolean)": null,
    "setLayoutMargins(crossmobile.ios.uikit.UIEdgeInsets)": null,
    "setMaskView(crossmobile.ios.uikit.UIView)": null,
    "setMultipleTouchEnabled(boolean)": null,
    "setNeedsDisplay()": null,
    "setNeedsLayout()": null,
    "setNeedsUpdateConstraints()": null,
    "setOpaque(boolean)": null,
    "setOverrideUserInterfaceStyle(int)": null,
    "setPreservesSuperviewLayoutMargins(boolean)": null,
    "setRestorationIdentifier(java.lang.String)": null,
    "setRootViewController(crossmobile.ios.uikit.UIViewController)": {
      "reverse": "- (void) setRootViewController:(UIViewController *) rootViewController\n{\n    [self setRootViewController___crossmobile_ios_uikit_UIViewController:(rootViewController ? rootViewController : JAVA_NULL)];\n}\n\n",
      "super": "- (void) setRootViewController___crossmobile_ios_uikit_UIViewController:(UIViewController*) rootViewController \n{\n    [super setRootViewController:(rootViewController == JAVA_NULL ? nil : rootViewController)];\n}\n\n",
      "supimport": [
        "crossmobile_ios_uikit_UIViewController"
      ]
    },
    "setTag(int)": null,
    "setTintAdjustmentMode(int)": null,
    "setTintColor(crossmobile.ios.uikit.UIColor)": null,
    "setTransform(crossmobile.ios.coregraphics.CGAffineTransform)": null,
    "setTranslatesAutoresizingMaskIntoConstraints(boolean)": null,
    "setUserInteractionEnabled(boolean)": null,
    "setValueForKey(java.lang.Object,java.lang.String)": null,
    "setValueForUndefinedKey(java.lang.Object,java.lang.String)": null,
    "sizeThatFits(crossmobile.ios.coregraphics.CGSize)": null,
    "sizeToFit()": null,
    "subviews()": null,
    "superview()": null,
    "tag()": null,
    "tintAdjustmentMode()": null,
    "tintColor()": null,
    "tintColorDidChange()": null,
    "topAnchor()": null,
    "touchesBegan(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesCancelled(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesEnded(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "touchesMoved(java.util.Set,crossmobile.ios.uikit.UIEvent)": null,
    "trailingAnchor()": null,
    "transform()": null,
    "translatesAutoresizingMaskIntoConstraints()": null,
    "updateConstraints()": null,
    "updateConstraintsIfNeeded()": null,
    "userInterfaceLayoutDirection()": null,
    "valueForKey(java.lang.String)": null,
    "valueForUndefinedKey(java.lang.String)": null,
    "viewForFirstBaselineLayout()": null,
    "viewForLastBaselineLayout()": null,
    "widthAnchor()": null,
    "willMoveToSuperview(crossmobile.ios.uikit.UIView)": null,
    "willMoveToWindow(crossmobile.ios.uikit.UIWindow)": null,
    "willRemoveSubview(crossmobile.ios.uikit.UIView)": null,
    "window()": null
  }
}